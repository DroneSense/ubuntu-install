"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ModelBase_1 = require('./ModelBase');
var Account = (function (_super) {
    __extends(Account, _super);
    function Account(handle) {
        _super.call(this);
        this._accountType = 'Individual';
        this._companyName = 'Individual';
        if (handle) {
            _super.call(this, handle);
            this.hydrate(handle.data);
            handle.on(handle.EVENTS.DATA_CHANGED, this.hydrate, this);
        }
    }
    Object.defineProperty(Account.prototype, "Name", {
        get: function () {
            return this._name;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Name', value);
            }
            else {
                this._name = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "AccountType", {
        get: function () {
            return this._accountType;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('AccountType', value);
            }
            else {
                this._accountType = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "CompanyName", {
        get: function () {
            return this._companyName;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('CompanyName', value);
            }
            else {
                this._companyName = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "AvatarUrl", {
        get: function () {
            return this._avatarUrl;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('AvatarUrl', value);
            }
            else {
                this._avatarUrl = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "Phone", {
        get: function () {
            return this._phone;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Phone', value);
            }
            else {
                this._phone = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "Website", {
        get: function () {
            return this._website;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Website', value);
            }
            else {
                this._website = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "Email", {
        get: function () {
            return this._email;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Email', value);
            }
            else {
                this._email = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "MailAddress", {
        get: function () {
            return this._mailAddress;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('MailAddress', value);
            }
            else {
                this._mailAddress = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "BillAddress", {
        get: function () {
            return this._billAddress;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('BillAddress', value);
            }
            else {
                this._billAddress = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Account.prototype, "Plan", {
        get: function () {
            return this._plan;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Plan', value);
            }
            else {
                this._plan = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Account.prototype.hydrate = function (data) {
        _super.prototype.hydrate.call(this, data);
        if (data) {
            if (this.Name !== data.Name) {
                this._name = data.Name;
                this.trigger('propertyChanged', 'Name', this.Name);
            }
            if (this.AccountType !== data.AccountType) {
                this._accountType = data.AccountType;
                this.trigger('AccountType', this.AccountType);
            }
            if (this.CompanyName !== data.CompanyName) {
                this._companyName = data.CompanyName;
                this.trigger('CompanyName', this.CompanyName);
            }
            if (this.AvatarUrl !== data.AvatarUrl) {
                this._avatarUrl = data.AvatarUrl;
                this.trigger('AvatarUrl', this.AvatarUrl);
            }
            if (this.Phone !== data.Phone) {
                this._phone = data.Phone;
                this.trigger('Phone', this.Phone);
            }
            if (this.Website !== data.Website) {
                this._website = data.Website;
                this.trigger('Website', this.Website);
            }
            if (this.Email !== data.Email) {
                this._email = data.Email;
                this.trigger('Email', this.Email);
            }
            this.MailAddress = data.MailAddress;
            this.BillAddress = data.BillAddress;
            this.Plan = data.Plan;
            this.Users = data.Users;
        }
    };
    return Account;
}(ModelBase_1.default));
exports.Account = Account;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Account;

//# sourceMappingURL=Account.js.map
