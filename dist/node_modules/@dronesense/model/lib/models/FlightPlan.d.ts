import ModelBase from './ModelBase';
import GeoPoint from './GeoPoint';
import User from './User';
import Command from './Command';
import Tag from './Tag';
export declare class MapState extends ModelBase {
    MapZoomLevel: number;
    MapCenterPoint: GeoPoint;
    BaseMap: string;
    Overlays: string;
}
export declare class FlightPlan extends ModelBase {
    private _saved;
    Saved: boolean;
    private _name;
    Name: string;
    private _scheduledDate;
    ScheduledDate: Date;
    Owners: Array<User>;
    private _distance;
    Distance: number;
    private _navPointCount;
    NavPointCount: number;
    private _flightTime;
    FlightTime: number;
    Commands: Array<Command>;
    Drone: any;
    Camera: any;
    private _highElevation;
    HighElevation: number;
    private _lowElevation;
    LowElevation: number;
    private _thumbnailUrl;
    ThumbnailUrl: string;
    private _locationName;
    LocationName: string;
    private _locationLatLng;
    LocationLatLng: string;
    MapZoomLevel: number;
    MapCenterPoint: GeoPoint;
    private _maxDistance;
    MaxDistance: number;
    Tags: Array<Tag>;
    private _notes;
    Notes: string;
    DefaultAltitudeMSL: boolean;
    DefaultWaypointAltitude: number;
    DefaultFlightSpeed: number;
    private _data;
    constructor();
    constructor(handle: any);
    hydrate(data: any): void;
    SaveProperty(prop: any, propName: string): void;
    Update(data: any): void;
    RemoveHandle(): void;
}
export default FlightPlan;
