"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ModelBase_1 = require('./ModelBase');
var Address = (function (_super) {
    __extends(Address, _super);
    function Address(handle) {
        _super.call(this);
        if (handle) {
            _super.call(this, handle);
            this.hydrate(handle.data);
            handle.on(handle.EVENTS.DATA_CHANGED, this.hydrate, this);
        }
    }
    Object.defineProperty(Address.prototype, "Address1", {
        get: function () {
            return this._address1;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Address1', value);
            }
            else {
                this._address1 = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "Address2", {
        get: function () {
            return this._address2;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Address2', value);
            }
            else {
                this._address2 = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "Country", {
        get: function () {
            return this._country;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Country', value);
            }
            else {
                this._country = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "City", {
        get: function () {
            return this._city;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('City', value);
            }
            else {
                this._city = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "State", {
        get: function () {
            return this._state;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('State', value);
            }
            else {
                this._state = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Address.prototype, "Zip", {
        get: function () {
            return this._zip;
        },
        set: function (value) {
            if (this.handle) {
                this.handle.setValue('Zip', value);
            }
            else {
                this._zip = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Address.prototype.hydrate = function (data) {
        _super.prototype.hydrate.call(this, data);
        if (data) {
            if (this.Address1 !== data.Address1) {
                this._address1 = data.Address1;
                this.trigger('Address1', this.Address1);
            }
            if (this.Address2 !== data.Address2) {
                this._address2 = data.Address2;
                this.trigger('Address2', this.Address2);
            }
            if (this.Country !== data.Country) {
                this._country = data.Country;
                this.trigger('Country', this.Country);
            }
            if (this.City !== data.City) {
                this._city = data.City;
                this.trigger('City', this.City);
            }
            if (this.State !== data.State) {
                this._state = data.State;
                this.trigger('State', this.State);
            }
            if (this.Zip !== data.Zip) {
                this._zip = data.Zip;
                this.trigger('Zip', this.Zip);
            }
        }
    };
    return Address;
}(ModelBase_1.default));
exports.Address = Address;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Address;

//# sourceMappingURL=Address.js.map
