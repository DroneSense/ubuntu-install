// import Command from '../models/Command';
// import GeoPoint from '../models/GeoPoint';
// import Enums from '../common/Enums';

// // Represents a state for the drone to go into when reached in the flight plan, actual implementation will vary for each drone/autopilot type
// export class FollowMeCommand extends Command {

//     constructor(position?: GeoPoint, altitude?: number, speed?: number) {
//         super('FollowMe');
//     }

//     // Altitude of drone
//     Altitude: number;

//     // Map location
//     Position: GeoPoint;

//     // North or Relative to Subject Course
//     PositionType: Enums.PositionType;

//     // Relative position to maintain against subject in degrees 1-360
//     PositionDirection: number;

//     // Direction the drone is facing - by default this will set directly towards the subject.  For example, if the position type is set
//     // to North and the position direction set to 360, then the heading will calculate to be 180 so that it will look at the follow me subject.
//     // Changing this to another value will override the auto-calculated value.
//     CameraDirection: number;

//     // Distance to maintain from subject
//     RadiusDistance: number;

//     // Camera Angle in degree 0-90
//     CameraAngle: number;

//     // GPS source for input
//     FollowMeSource: string;

// }
