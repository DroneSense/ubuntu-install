import ModelBase from './ModelBase';

export class Address extends ModelBase {

    // Address1: string;
    private _address1: string;

    get Address1(): string {
        return this._address1;
    }
    set Address1(value: string) {
        if (this.handle) {
            this.handle.setValue('Address1', value);
        } else {
            this._address1 = value;
        }
    }

    // Address2: string;
    private _address2: string;

    get Address2(): string {
        return this._address2;
    }
    set Address2(value: string) {
        if (this.handle) {
            this.handle.setValue('Address2', value);
        } else {
            this._address2 = value;
        }
    }

    // Country: string;
    private _country: string;

    get Country(): string {
        return this._country;
    }
    set Country(value: string) {
        if (this.handle) {
            this.handle.setValue('Country', value);
        } else {
            this._country = value;
        }
    }

    // City: string;
    private _city: string;

    get City(): string {
        return this._city;
    }
    set City(value: string) {
        if (this.handle) {
            this.handle.setValue('City', value);
        } else {
            this._city = value;
        }
    }

    // State: string;
    private _state: string;

    get State(): string {
        return this._state;
    }
    set State(value: string) {
        if (this.handle) {
            this.handle.setValue('State', value);
        } else {
            this._state = value;
        }
    }

    // Zip: string;
    private _zip: string;

    get Zip(): string {
        return this._zip;
    }
    set Zip(value: string) {
        if (this.handle) {
            this.handle.setValue('Zip', value);
        } else {
            this._zip = value;
        }
    }

    constructor();
    constructor(handle?: any) {
        super();

        if (handle) {
            super(handle);

            this.hydrate(handle.data);

            handle.on(handle.EVENTS.DATA_CHANGED, this.hydrate, this);
        }
    }

    hydrate(data: any): void {
        super.hydrate(data);

        if (data) {

            if (this.Address1 !== data.Address1) {
                this._address1 = data.Address1;
                this.trigger('Address1', this.Address1);
            }

            if (this.Address2 !== data.Address2) {
                this._address2 = data.Address2;
                this.trigger('Address2', this.Address2);
            }

            if (this.Country !== data.Country) {
                this._country = data.Country;
                this.trigger('Country', this.Country);
            }

            if (this.City !== data.City) {
                this._city = data.City;
                this.trigger('City', this.City);
            }

            if (this.State !== data.State) {
                this._state = data.State;
                this.trigger('State', this.State);
            }

            if (this.Zip !== data.Zip) {
                this._zip = data.Zip;
                this.trigger('Zip', this.Zip);
            }
        }
    }

}

export default Address;
