import ModelBase from './ModelBase';
import { User } from './user';
import { Address } from './Address';
import { Subscription } from './Subscription';

// Account is the highest level object for user grouping
export class Account extends ModelBase {

    // Account name, defaults to user name on creation
    private _name: string;

    get Name(): string {
        return this._name;
    }
    set Name(value: string) {
        if (this.handle) {
            this.handle.setValue('Name', value);
        } else {
            this._name = value;
        }
    }

    // Drop down with Individual or Company
    private _accountType: string = 'Individual';

    get AccountType(): string {
        return this._accountType;
    }
    set AccountType(value: string) {
        if (this.handle) {
            this.handle.setValue('AccountType', value);
        } else {
            this._accountType = value;
        }
    }

    // Name of company
    private _companyName: string = 'Individual';

    get CompanyName(): string {
        return this._companyName;
    }
    set CompanyName(value: string) {
        if (this.handle) {
            this.handle.setValue('CompanyName', value);
        } else {
            this._companyName = value;
        }
    }

    Admins: Array<User>;

    // Company AvatarUrl
    private _avatarUrl: string;

    get AvatarUrl(): string {
        return this._avatarUrl;
    }
    set AvatarUrl(value: string) {
        if (this.handle) {
            this.handle.setValue('AvatarUrl', value);
        } else {
            this._avatarUrl = value;
        }
    }

    // Phone
    private _phone: string;

    get Phone(): string {
        return this._phone;
    }
    set Phone(value: string) {
        if (this.handle) {
            this.handle.setValue('Phone', value);
        } else {
            this._phone = value;
        }
    }

    // Website: string;
    private _website: string;

    get Website(): string {
        return this._website;
    }
    set Website(value: string) {
        if (this.handle) {
            this.handle.setValue('Website', value);
        } else {
            this._website = value;
        }
    }

    // Email: string;
    private _email: string;

    get Email(): string {
        return this._email;
    }
    set Email(value: string) {
        if (this.handle) {
            this.handle.setValue('Email', value);
        } else {
            this._email = value;
        }
    }

    // MailAddress: Address;
    private _mailAddress: Address;

    get MailAddress(): Address {
        return this._mailAddress;
    }
    set MailAddress(value: Address) {
        if (this.handle) {
            this.handle.setValue('MailAddress', value);
        } else {
            this._mailAddress = value;
        }
    }

    // BillAddress: Address;
    private _billAddress: Address;

    get BillAddress(): Address {
        return this._billAddress;
    }
    set BillAddress(value: Address) {
        if (this.handle) {
            this.handle.setValue('BillAddress', value);
        } else {
            this._billAddress = value;
        }
    }

    // Plan: Subscription;
    private _plan: Subscription;

    get Plan(): Subscription {
        return this._plan;
    }
    set Plan(value: Subscription) {
        if (this.handle) {
            this.handle.setValue('Plan', value);
        } else {
            this._plan = value;
        }
    }

    Users: Array<User>;

    constructor();
    constructor(handle?: any) {
        super();

        if (handle) {
            super(handle);

            // Hydrate model
            this.hydrate(handle.data);

            // Wire up changed event
            handle.on(handle.EVENTS.DATA_CHANGED, this.hydrate, this);
        }
    }

    hydrate(data: any): void {

        super.hydrate(data);

        if (data) {

            if (this.Name !== data.Name) {
                this._name = data.Name;
                this.trigger('propertyChanged', 'Name', this.Name);
            }

            if (this.AccountType !== data.AccountType) {
                this._accountType = data.AccountType;
                this.trigger('AccountType', this.AccountType);
            }

            if (this.CompanyName !== data.CompanyName) {
                this._companyName = data.CompanyName;
                this.trigger('CompanyName', this.CompanyName);
            }

            // if (this.Admins)

            // this.Admins = data.Admins;

            if (this.AvatarUrl !== data.AvatarUrl) {
                this._avatarUrl = data.AvatarUrl;
                this.trigger('AvatarUrl', this.AvatarUrl);
            }

            if (this.Phone !== data.Phone) {
                this._phone = data.Phone;
                this.trigger('Phone', this.Phone);
            }

            if (this.Website !== data.Website) {
                this._website = data.Website;
                this.trigger('Website', this.Website);
            }

            if (this.Email !== data.Email) {
                this._email = data.Email;
                this.trigger('Email', this.Email);
            }

            this.MailAddress = data.MailAddress;
            this.BillAddress = data.BillAddress;
            this.Plan = data.Plan;
            this.Users = data.Users;
        }
    }

}

export default Account;
