import { IEventEmitter } from './IEventEmitter';
import { IDroneManager } from './IDroneManager';
import { ISessionManager } from './ISessionManager';
export declare module constants {
    module events {
        const CONNECTED: string;
        const DISCONNECTED: string;
        const CONNECT_ERROR: string;
    }
}
export interface IDroneSenseService extends IEventEmitter {
    DroneManager: IDroneManager;
    SessionManager: ISessionManager;
    IsConnected: boolean;
    connect(username: string): Promise<void>;
    disconnect(): Promise<void>;
    on(eventName: string, callback?: Function, context?: any): any;
    on(eventName: 'connected', callback?: Function, context?: any): any;
    on(eventName: 'disconnected', callback?: Function, context?: any): any;
    on(eventName: 'connect-error', callback?: (error: any) => void, context?: any): any;
}
export default IDroneSenseService;
