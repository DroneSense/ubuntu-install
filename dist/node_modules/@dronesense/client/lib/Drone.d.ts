import { ServerNodeClientController } from './common/ServerNodeClientController';
import { IServerNodeClient } from './common/IServerNodeClient';
import { IDrone } from '@dronesense/core/lib/common/IDrone';
import { IFlightController } from '@dronesense/core/lib/common/IFlightController';
import { ICamera } from '@dronesense/core/lib/common/ICamera';
import { IGimbal } from '@dronesense/core/lib/common/IGimbal';
export declare class Drone extends ServerNodeClientController implements IDrone {
    private _flightController;
    private _camera;
    private _gimbal;
    private _eventHandlers;
    constructor(serverNodeClient: IServerNodeClient);
    protected _onConnected(socket: IServerNodeClient): void;
    protected _onDisconnected(socket: IServerNodeClient): void;
    Name: string;
    FlightController: IFlightController;
    Camera: ICamera;
    Gimbal: IGimbal;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
}
export default Drone;
