"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ServerNodeClientController_1 = require('./common/ServerNodeClientController');
var IGimbal_1 = require('@dronesense/core/lib/common/IGimbal');
var Gimbal = (function (_super) {
    __extends(Gimbal, _super);
    function Gimbal(serverNodeClient) {
        var _this = this;
        _super.call(this, serverNodeClient);
        this._state = null;
        this._eventHandlers = {
            stateUpdated: function (state) {
                _this._state = state;
                _this.trigger(IGimbal_1.constants.events.STATE_UPDATED, state);
            },
        };
        this._state = null;
    }
    Object.defineProperty(Gimbal.prototype, "State", {
        get: function () {
            return this._state;
        },
        enumerable: true,
        configurable: true
    });
    Gimbal.prototype._onConnected = function (socket) {
        socket.on(IGimbal_1.constants.events.STATE_UPDATED, this._eventHandlers.stateUpdated);
    };
    Gimbal.prototype._onDisconnected = function (socket) {
        socket.off(IGimbal_1.constants.events.STATE_UPDATED, this._eventHandlers.stateUpdated);
    };
    return Gimbal;
}(ServerNodeClientController_1.ServerNodeClientController));
exports.Gimbal = Gimbal;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Gimbal;

//# sourceMappingURL=Gimbal.js.map
