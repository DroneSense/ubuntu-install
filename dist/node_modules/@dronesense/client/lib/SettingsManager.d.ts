import { IServerNodeClient } from './common/IServerNodeClient';
import { ServerNodeClientController } from './common/ServerNodeClientController';
import { ISettingsManager, ISettingDelegate } from '@dronesense/core/lib/common/ISettingsManager';
import { ISetting } from '@dronesense/core/lib/common/entities/ISetting';
export declare class SettingsManager extends ServerNodeClientController implements ISettingsManager, ISettingDelegate {
    private _settings;
    private _eventHandlers;
    constructor(serverNodeClient: IServerNodeClient);
    protected _onConnected(socket: IServerNodeClient): void;
    protected _onDisconnected(socket: IServerNodeClient): void;
    refresh(): Promise<Array<ISetting>>;
    getSettings(): Promise<Array<ISetting>>;
    setValue(id: string, value: number): Promise<number>;
}
