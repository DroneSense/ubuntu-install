import * as Serialization from './Serialization';
export declare class Serializer {
    private static _objectFactory;
    static addType(type: string, clazz: {
        new (): Object;
    }): void;
    static serialize<T extends Serialization.ICoding>(obj: T): any;
    static serializeArray<T extends Serialization.ICoding>(objects: Array<T>): Array<any>;
    static deserialize<T extends Serialization.ICoding>(clazz: {
        new (): T;
    }, json: any): T;
    static deserializeArray<T extends Serialization.ICoding>(clazz: {
        new (): T;
    }, jsonObjects: Array<any>): Array<T>;
    static deserializeToFlatObject<T extends any>(c: {
        new (): T;
    }, json: any): T;
    static deserializeToFlatObjects<T extends any>(c: {
        new (): T;
    }, jsonArray: Array<any>): Array<T>;
}
export default Serializer;
