{"version":3,"sources":["components/controlToolbar/controlToolbar.ts"],"names":[],"mappings":"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","file":"components/controlToolbar/controlToolbar.js","sourcesContent":["import { } from '@dronesense/model';\n\nimport IDrone from '@dronesense/core/lib/common/IDrone';\nimport gpsStatusIcon from '../gpsStatusIcon/gpsStatusIcon';\nimport batteryStatusIcon from '../batteryStatusIcon/batteryStatusIcon';\nimport batteryStatusIndicator from '../batteryStatusIndicator/batteryStatusIndicator';\nimport telemetryStatusIcon from '../telemetryStatusIcon/telemetryStatusIcon';\nimport rcStatusIcon from '../rcStatusIcon/rcStatusIcon';\nimport videoStatusIcon from '../videoStatusIcon/videoStatusIcon';\n\nimport { SessionController } from '../flightControlViewer/sessionController';\nimport { OwnerMapSession, MapSession } from '../flightControlViewer/mapSession';\nimport { Firmware } from '@dronesense/core/lib/common/enums/Firmware';\n\nimport { FlightControlSettings } from '../flightControlViewer/flightControlSettings';\n\nexport interface IControlToolbar extends ng.IScope {\n\n}\n\nclass ControlToolbar {\n\n    batteryVoltage: number = 0;\n    batteryCurrent: number = 0;\n    batteryRemainingPercent: number = 0;\n    batteryTemp: number = 0;\n    remainingMah: number = 0;\n    timeRemaining: number = 0;\n    lifetimeRemaining: number = 0;\n\n    videoSignalPercentage: number = 0;\n    rcSignalPercentage: number = 0;\n\n    gpsFixType: number = 0;\n    satCount: number = 0;\n    gpsHdop: number = 0;\n    gpsVdop: number = 0;\n\n\n    selectedTab: number;\n\n    gps: boolean;\n    telementry: boolean;\n    datalink: boolean;\n    sysStatus: boolean;\n    battery: boolean;\n    videoLink: boolean;\n    settingsDialog: boolean;\n\n    sessionController: SessionController;\n\n    drone: IDrone;\n\n    isDJIDrone: boolean = true;\n\n    settings: FlightControlSettings;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope'\n    ];\n    constructor(public bindings: IControlToolbar) {\n        this.selectedTab = -1;\n\n        this.sessionController.eventing.on('session-added', (ownerSession: OwnerMapSession) => {\n            this.drone = this.sessionController.activeSession.mapDrone.drone;\n            this.isDJIDrone = this.drone.FlightController.Firmware === Firmware.DJI ? true : false;\n\n            this.bindings.$applyAsync();\n\n            this.wireUpChanges();\n        });\n\n        this.sessionController.eventing.on('session-removed', (ownerSession: MapSession) => {\n            \n            this.unwireChanges();\n\n            this.drone = null;\n\n            this.bindings.$applyAsync();\n        });\n\n        this.sessionController.eventing.on('session-changed', (session: MapSession) => {\n            \n            this.unwireChanges();\n            \n            this.drone = session.mapDrone.drone;\n            this.bindings.$applyAsync();\n\n            this.wireUpChanges();\n        });\n    }\n\n    unwireChanges(): void {\n        if (this.drone) {\n            this.drone.FlightController.Telemetry.off('propertyChanged');\n        }\n        this.batteryVoltage = 0;\n        this.batteryCurrent = 0;\n        this.batteryRemainingPercent = 0;\n        this.videoSignalPercentage = 0;\n        this.rcSignalPercentage = 0;\n        this.gpsFixType = 0;\n        this.satCount = 0;\n        this.gpsHdop = 0;\n        this.gpsVdop = 0;\n    }\n\n    wireUpChanges(): void {\n        this.drone.FlightController.Telemetry.on('propertyChanged', (name, value) => {\n            \n            if (this.isDJIDrone) {\n                this.videoSignalPercentage = this.drone.FlightController.Telemetry.DJIRadio.videoSignalPercent;\n                this.rcSignalPercentage = this.drone.FlightController.Telemetry.DJIRadio.remoteSignalPercent;\n                this.batteryVoltage = +(this.drone.FlightController.Telemetry.DJIBattery.currentVoltage * .001).toFixed(2);\n                this.batteryCurrent = this.drone.FlightController.Telemetry.DJIBattery.currentCurrent;\n                this.batteryRemainingPercent = this.drone.FlightController.Telemetry.DJIBattery.batteryEnergyRemainingPercent;\n                this.batteryTemp = this.drone.FlightController.Telemetry.DJIBattery.batteryTemperature;\n                this.remainingMah = this.drone.FlightController.Telemetry.DJIBattery.currentEnergy;\n                this.timeRemaining = (((this.remainingMah / Math.abs(this.batteryCurrent)) * 60) * 60) * 1000;\n                this.lifetimeRemaining = this.drone.FlightController.Telemetry.DJIBattery.lifetimeRemainingPercent;\n                //console.log(this.timeRemaining);\n            } else {\n                this.batteryVoltage = +(this.drone.FlightController.Telemetry.Battery.voltage * .001).toFixed(2);\n                this.batteryCurrent = +(this.drone.FlightController.Telemetry.Battery.current * .01).toFixed(2);\n                this.batteryRemainingPercent = this.drone.FlightController.Telemetry.Battery.percentRemaining;\n            }\n\n            this.gpsFixType = this.drone.FlightController.Telemetry.Position.fixType;\n            this.satCount = this.drone.FlightController.Telemetry.Position.satelliteCount;\n            this.gpsHdop = this.drone.FlightController.Telemetry.Position.hdop;\n            this.gpsVdop = this.drone.FlightController.Telemetry.Position.vdop;\n            \n            this.bindings.$applyAsync();\n        });\n    }\n\n    hidetabs(): void {\n        this.gps = false;\n        this.telementry = false;\n        this.datalink = false;\n        this.sysStatus = false;\n        this.battery = false;\n        this.videoLink = false;\n        this.settingsDialog = false;\n    }\n\n    toggleTab(name: string): void {\n\n        if (name === 'battery') {\n            if (this.battery) {\n                this.battery = false;\n                this.selectedTab = -1;\n            } else {\n                this.hidetabs();\n                this.battery = true;\n                this.selectedTab = 4;\n            }\n        }\n\n        if (name === 'gps') {\n            if (this.gps) {\n                this.gps = false;\n                this.selectedTab = -1;\n            } else {\n                this.hidetabs();\n                this.gps = true;\n                this.selectedTab = 0;\n            }\n        }\n\n        if (name === 'settings') {\n            if (this.settingsDialog) {\n                this.settingsDialog = false;\n                this.selectedTab = -1;\n            } else {\n                this.hidetabs();\n                this.settingsDialog = true;\n                this.selectedTab = 6;\n            }\n        }\n    }\n}\n\nexport default angular.module('DroneSense.Web.ControlToolbar', [\n    gpsStatusIcon.name,\n    batteryStatusIcon.name,\n    batteryStatusIndicator.name,\n    telemetryStatusIcon.name,\n    rcStatusIcon.name,\n    videoStatusIcon.name\n]).component('dsControlToolbar', {\n    bindings: {\n        sessionController: '<',\n        settings: '<'\n    },\n    controller: ControlToolbar,\n    templateUrl: './app/components/controlToolbar/controlToolbar.html'\n});\n"],"sourceRoot":"/source/"}