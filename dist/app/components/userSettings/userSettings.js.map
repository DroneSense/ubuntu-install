{"version":3,"sources":["components/userSettings/userSettings.ts"],"names":[],"mappings":";;;;;;;;;;;YAIA;gBAyBI,sBAAmB,QAAmB,EAAS,EAAO,EAAS,WAAyB;oBAArE,aAAQ,GAAR,QAAQ,CAAW;oBAAS,OAAE,GAAF,EAAE,CAAK;oBAAS,gBAAW,GAAX,WAAW,CAAc;oBAlBxF,UAAK,GAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;oBAE9C,cAAS,GAAkB;wBACvB,2BAA2B;wBAC3B,6CAA6C;wBAC7C,4CAA4C;wBAC9C,cAAc;wBACd,eAAe;wBACf,cAAc;wBACd,cAAc;qBACf,CAAC;gBAUF,CAAC;gBAEG,UAAU;gBACd,qCAAc,GAAd;oBACE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC;yBAClF,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;wBAClC,IAAI,CAAC,eAAe,GAAG,kBAAkB,CAAC;wBAC1C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;wBACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;wBAC1B,IAAI,CAAC,QAAQ,CAAC,CAAC;4BACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC9B,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;oBACvB,CAAC,EAAE,IAAI,CAAC,CAAC;yBACR,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,GAAQ;wBACrD,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC;oBACnC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;gBAChB,CAAC;gBAED,6BAAM,GAAN;oBACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;gBAC5B,CAAC;gBAED,qCAAc,GAAd,UAAe,KAAW,EAAE,IAAS,EAAE,QAAgB;oBACrD,qCAAqC;gBACvC,CAAC;gBAED,kCAAW,GAAX,UAAY,KAAU;oBACpB,wFAAwF;gBAC1F,CAAC;gBAED,kCAAW,GAAX;oBACE,4EAA4E;gBAC9E,CAAC;gBAxCD,cAAc;gBACP,oBAAO,GAAkB;oBAC5B,QAAQ;oBACR,IAAI;oBACJ,aAAa;iBAChB,CAAC;gBAqCN,mBAAC;YAAD,CA7DA,AA6DC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE;gBACzD,qBAAW,CAAC,IAAI;aACnB,CAAC,CAAC,SAAS,CAAC,gBAAgB,EAAE;gBAC3B,QAAQ,EAAE;oBACN,IAAI,EAAE,GAAG;iBACZ;gBACD,UAAU,EAAE,YAAY;gBACxB,WAAW,EAAE,iDAAiD;aACjE,CAAC,EAAC","file":"components/userSettings/userSettings.js","sourcesContent":["import { User } from '@dronesense/model';\nimport UserService from '../../services/userService';\nimport { IUserService } from '../../services/userService';\n\nclass UserSettings {\n\n    user: User;\n    NewPassword: string;\n    CurrentPassword: string;\n    Unit: string;\n\n    units: Array<string> = ['Standard', 'Metric'];\n\n    timezones: Array<string> = [\n        'Alpha Time Zone UTC +1:00',\n        'Australian Central Daylight Time UTC +10:30',\n        'Australian Central Standard Time UTC +9:30',\n      'Pacific Time',\n      'Mountain Time',\n      'Central Time',\n      'Eastern Time'\n    ];\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'db',\n        'userService'\n    ];\n    constructor(public bindings: ng.IScope, public db: any, public userService: IUserService) {\n\n    }\n\n        // Methods\n    changePassword(): void {\n      this.db.session.changePassword(this.user.Email, this.CurrentPassword, this.NewPassword)\n          .then(this.db.$apply(this.bindings, function (): void {\n            this.passwordSuccess = 'Password updated';\n            this.NewPassword = '';\n            this.CurrentPassword = '';\n            this.$timeout((function (): void {\n              this.passwordSuccess = null;\n            }).bind(this), 2000);\n          }, this))\n          .catch(this.db.$apply(this.bindings, function (err: any): void {\n            this.passwordError = err.message;\n          }, this));\n    }\n\n    logout(): void {\n      this.userService.Logout();\n    }\n\n    updateProperty(model: User, prop: any, propName: string): void {\n      //model.SaveProperty(prop, propName);\n    }\n\n    SetUnitPref(value: any): void {\n      //this.userService.CurrentUser.SaveProperty(this.user.UnitPreference, 'UnitPreference');\n    }\n\n    SetTimeZone(): void {\n      //this.userService.CurrentUser.SaveProperty(this.user.TimeZone, 'TimeZone');\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.UserSettings', [\n    UserService.name\n]).component('dsUserSettings', {\n    bindings: {\n        user: '<'\n    },\n    controller: UserSettings,\n    templateUrl: './app/components/userSettings/userSettings.html'\n});\n"],"sourceRoot":"/source/"}