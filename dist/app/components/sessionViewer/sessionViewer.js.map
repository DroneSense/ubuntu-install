{"version":3,"sources":["components/sessionViewer/sessionViewer.ts"],"names":[],"mappings":"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","file":"components/sessionViewer/sessionViewer.js","sourcesContent":["import { IRedProService, RedProStream } from '../../services/redProService';\nimport RedProService from '../../services/redProService';\nimport { FlightPlan, User, Tag } from '@dronesense/model';\nimport viewerToolbar from '../viewerToolbar/viewerToolbar';\nimport SessionCard from '../sessionCard/sessionCard';\n\nexport interface ISessionViewer extends ng.IScope {\n}\n\nclass SessionViewer {\n\n    activeSessions: Array<RedProStream> = [];\n\n    redTeam: RedProStream;\n    blueTeam: RedProStream;\n\n    gridVisible: boolean;\n\n    searchText: string;\n\n    masterTagList: Array<Tag> = [];\n\n    filter: {tags: Array<Tag>, option: string } = {\n        tags: [],\n        option: ''\n    };\n\n    sort: {options: Array<string>, orderType: string, orderDirection: boolean} = {\n        options: [],\n        orderType: '',\n        orderDirection: false\n    };\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'redProService'\n    ];\n\n    constructor(\n        public bindings: ISessionViewer,\n        public redProService: IRedProService) {\n        \n        // Make grid the default view\n        this.gridVisible = true;\n\n        // Define sort options to give the viewer toolbar\n        this.sort.options.push('Name: A-Z');\n        this.sort.options.push('Name: Z-A');\n        this.sort.options.push('Location: A-Z');\n        this.sort.options.push('Location: Z-A');\n        this.sort.options.push('Created: Newest');\n        this.sort.options.push('Created: Oldest');\n        this.sort.options.push('Scheduled: Newest');\n        this.sort.options.push('Scheduled: Oldest');\n\n        // Set default view sort order\n        this.sort.orderType = 'Created';\n        this.sort.orderDirection = true;\n\n        this.redTeam = new RedProStream('Red-Team');\n        this.redTeam.name = 'Red Team Video Stream';\n        this.redTeam.color = '#ea0707';\n\n        this.blueTeam = new RedProStream('Blue-Team');\n        this.blueTeam.name = 'Blue Team Video Stream';\n        this.blueTeam.color = '#0A92EA';\n\n        this.activeSessions.push(this.blueTeam);\n        this.activeSessions.push(this.redTeam);\n    }\n\n    $onInit(): void {\n        // this.redProService.getLiveStreams().then((value: Array<RedProStream>) => {\n        //     this.activeSessions = value;\n        //     this.activeSessions.forEach((stream: RedProStream) => {\n        //         this.redProService.getLiveStreamStatistics(stream).then(() => {\n        //             console.log(stream);\n        //         });\n        //     });\n        // });\n\n        \n\n    }\n\n    showListView(): void {\n        this.gridVisible = false;\n    }\n\n    showGridView(): void {\n        this.gridVisible = true;\n    }\n}\n\nexport default angular.module('DroneSense.Web.SessionViewer', [\n    RedProService.name,\n    viewerToolbar.name,\n    SessionCard.name\n]).component('dsSessionViewer', {\n    bindings: {\n    },\n    controller: SessionViewer,\n    templateUrl: './app/components/sessionViewer/sessionViewer.html'\n});\n"],"sourceRoot":"/source/"}