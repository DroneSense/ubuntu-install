{"version":3,"sources":["components/tools/waypointTool/waypointCommandDrawTool.ts"],"names":[],"mappings":"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","file":"components/tools/waypointTool/waypointCommandDrawTool.js","sourcesContent":["import { IDrawTool } from '../IDrawTool';\nimport { GeoPoint, FlightPlan } from '@dronesense/model';\nimport { Conversions } from '@dronesense/model/lib/common/Utility';\n\nexport class WaypointCommandDrawTool implements IDrawTool {\n\n    _mouseHandler: Cesium.ScreenSpaceEventHandler;\n\n    IconPath: string = './app/components/tools/waypointTool/images/waypoint.svg';\n    ToolTip: string = 'Add Waypoint';\n    Selected: boolean;\n\n    constructor(public map: Cesium.Viewer, public callback: Function, public flightPlan: FlightPlan) {\n\n    }\n\n    StartEdit(): void {\n\n        if (this.Selected) {\n            this.StopEdit();\n            return;\n        }\n\n        this.Selected = true;\n\n        // wire up left mouse click event\n        this._mouseHandler = new Cesium.ScreenSpaceEventHandler(this.map.canvas, false);\n\n        this._mouseHandler.setInputAction((click: any) => {\n                var ray: any = this.map.camera.getPickRay(click.position);\n                var position: any = this.map.scene.globe.pick(ray, this.map.scene);\n                console.log(position);\n                if (Cesium.defined(position)) {\n                    // Make the height of the position = 0 so it works with groundPrimitive\n                    var positionCartographic: Cesium.Cartographic = this.map.scene.globe.ellipsoid.cartesianToCartographic(position);\n                    positionCartographic.height = 0;\n                    //position = this.map.scene.globe.ellipsoid.cartographicToCartesian(positionCartographic);\n\n                    //var cartographic: Cesium.Cartographic = Cesium.Cartographic.fromCartesian(position);\n                    var longitudeString: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.longitude), 8);\n                    var latitudeString: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.latitude), 8);\n\n                    var terrainProvider: any = new Cesium.CesiumTerrainProvider({\n                        //url: 'https://www.cesiumcontent.com/api/terrain/world?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkMTM4ZDE2OS05NWYwLTQ0YmItOWY3YS0yNjEwOGE5Y2Y3NjYiLCJpZCI6NywiaWF0IjoxNDU1MjkyNzg5fQ.NDKlrwQZE_04ntDuL89hvatEmuycQo5llhtz3Mi6Wo0'\n                        url: '//assets.agi.com/stk-terrain/world'\n                    });\n                    var positions: Array<Cesium.Cartographic> = [\n                        Cesium.Cartographic.fromDegrees(longitudeString, latitudeString)\n                    ];\n\n                    // Get terrain height at click location before adding takeoff point\n                    Cesium.sampleTerrain(terrainProvider, 15, positions).then((updatedPositions: any): void => {\n\n                        var waypointCommand: Object;\n\n                        if (this.flightPlan.DefaultAltitudeMSL && (this.flightPlan.DefaultWaypointAltitude - updatedPositions[0].height) > updatedPositions[0].height) {\n                            waypointCommand = {\n                                Position: new GeoPoint(latitudeString, longitudeString),\n                                Altitude: this.flightPlan.DefaultWaypointAltitude - updatedPositions[0].height,\n                                GroundElevationMSL: updatedPositions[0].height,\n                                GroundElevationHAE: updatedPositions[0].height,\n                                AltitudeMSL: this.flightPlan.DefaultWaypointAltitude,\n                                AltitudeHAE: this.flightPlan.DefaultWaypointAltitude,\n                                FlightSpeed: this.flightPlan.DefaultFlightSpeed,\n                                Name: 'Waypoint',\n                                Type: 'waypoint',\n                                Expanded: true\n                        };\n                        } else {\n                            waypointCommand = {\n                                Position: new GeoPoint(latitudeString, longitudeString),\n                                Altitude: this.flightPlan.DefaultWaypointAltitude,\n                                GroundElevationMSL: updatedPositions[0].height,\n                                GroundElevationHAE: updatedPositions[0].height,\n                                AltitudeMSL: updatedPositions[0].height + this.flightPlan.DefaultWaypointAltitude,\n                                AltitudeHAE: updatedPositions[0].height + this.flightPlan.DefaultWaypointAltitude,\n                                FlightSpeed: this.flightPlan.DefaultFlightSpeed,\n                                Name: 'Waypoint',\n                                Type: 'waypoint',\n                                Expanded: true\n                            };\n                        }\n\n                        this.callback(waypointCommand);\n                    });\n\n                    this.StopEdit();\n                }\n            },\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\n        );\n    }\n\n    StopEdit(): void {\n        this._mouseHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK);\n        this.Selected = false;\n    }\n}\n"],"sourceRoot":"/source/"}