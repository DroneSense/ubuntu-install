{"version":3,"sources":["components/tools/takeoffTool/takeoffCommandInstance.ts"],"names":[],"mappings":"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","file":"components/tools/takeoffTool/takeoffCommandInstance.js","sourcesContent":["import { User, TakeoffCommand, GeoPoint } from '@dronesense/model';\nimport { Conversions } from '@dronesense/model/lib/common/Utility';\n\nexport interface ITakeoffCommandInstance extends ng.IScope {\n    command: TakeoffCommand;\n    user: User;\n    trackedEntity: string;\n    onTrackEntity: any;\n}\n\nclass TakeoffCommandInstance {\n\n    // The takeoff command passed in\n    command: TakeoffCommand;\n\n    // Map instance passed in\n    map: Cesium.Viewer;\n\n    // User object allows us to modify presentation of data based on user settings\n    user: User;\n\n    // On delete callback\n    onDelete: any;\n\n    // Currently tracked entity passed in from command viewer\n    trackedEntity: string;\n\n    // Called to notify command viewer of a request for tracking\n    onTrackEntity: any;\n\n    // Visual representation of command\n    entity: Cesium.Entity;\n\n    // Flag to indicate if command is being edited in map\n    isEditing: boolean = false;\n\n    // Editing handler reference\n    editingHandler: Cesium.ScreenSpaceEventHandler;\n\n    flightSpeed: number;\n\n    climbSpeed: number;\n\n    position: GeoPoint;\n\n    altitude: number;\n\n    // Handle on blur property change\n    UpdateAltitude(): void {\n\n        // Setup terrain provider\n        var terrainProvider: any = new Cesium.CesiumTerrainProvider({\n            url: 'https://www.cesiumcontent.com/api/terrain/world?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkMTM4ZDE2OS05NWYwLTQ0YmItOWY3YS0yNjEwOGE5Y2Y3NjYiLCJpZCI6NywiaWF0IjoxNDU1MjkyNzg5fQ.NDKlrwQZE_04ntDuL89hvatEmuycQo5llhtz3Mi6Wo0'\n        });\n\n        // Create positions object for terrain query\n        var positions: Array<Cesium.Cartographic> = [\n            Cesium.Cartographic.fromDegrees(this.position.lng, this.position.lat)\n        ];\n\n        // Call async sampleTerrain TODO - This will fail if we don't have the terrain tile either from the server or in cache\n        // TODO - Move this to common function\n        Cesium.sampleTerrain(terrainProvider, 15, positions).then((updatedPositions: any): void => {\n\n            // Save property on model\n            this.command.UpdateProperties({\n                Altitude: this.altitude,\n                GroundElevationMSL: updatedPositions[0].height,\n                GroundElevationHAE: updatedPositions[0].height,\n                AltitudeMSL: updatedPositions[0].height + this.altitude,\n                AltitudeHAE: updatedPositions[0].height + this.altitude\n            });\n        });\n    }\n\n    UpdatePosition(): void {\n\n        // Save property on model\n        this.command.SaveProperty(this.position, 'Position');\n\n        this.UpdateAltitude();\n\n    }\n\n    // Remove self from map then call viewer for removal\n    Delete(): void {\n\n        // Remove UI from map\n        this.map.entities.remove(this.entity);\n\n        // Call parent delete function\n        this.onDelete({commandId: this.command.handle.id });\n    }\n\n    // Fly camera to this command\n    FlyTo(): void {\n        this.map.flyTo(this.entity);\n    }\n\n    // Toggle visibility on map\n    HideShow(): void {\n        this.entity.show = !this.entity.show;\n    }\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'db'\n    ];\n\n    constructor(public bindings: ITakeoffCommandInstance,\n                public db: any) {\n\n        // Create copy for UI binding\n        this.SetupViewData();\n\n        // Add UI to map\n        this.generateMapUI();\n\n        // Listen for model changes\n        this.command.on('propertyChanged', (name: string, value: any): void => {\n\n            this.bindings.$applyAsync();\n        });\n\n        this.bindings.$on('$destroy', (): void => {\n\n            // watchers are automatically destroyed\n\n            // destruction code here\n            this.user.off();\n\n            this.command.off();\n\n            // Clean up editing handler\n            this.editingHandler.destroy();\n        });\n\n        // Update camera track changes\n        this.bindings.$watch(() => { return this.trackedEntity; }, (newValue: string, oldValue: string): void => {\n\n            this.trackedFlag = (this.entity.id === newValue);\n\n        });\n\n        this.SetupEditingHandlers();\n    }\n\n    // Bind two way fields that are also update\n    SetupViewData(): void {\n\n        this.flightSpeed = this.command.FlightSpeed;\n\n        this.bindings.$watch(() => { return this.command.FlightSpeed; }, (newValue: number, oldValue: number) => {\n            this.flightSpeed = this.command.FlightSpeed;\n        });\n\n        this.climbSpeed = this.command.ClimbSpeed;\n\n        this.bindings.$watch(() => { return this.command.ClimbSpeed; }, (newValue: number, oldValue: number) => {\n            this.climbSpeed = this.command.ClimbSpeed;\n        });\n\n        this.position = this.command.Position;\n\n        this.bindings.$watch(() => { return this.command.Position; }, (newValue: GeoPoint, oldValue: GeoPoint) => {\n            this.position = this.command.Position;\n        });\n\n        this.altitude = this.command.Altitude;\n\n        this.bindings.$watch(() => { return this.command.Altitude; }, (newValue: number, oldValue: number) => {\n            this.altitude = this.command.Altitude;\n        });\n\n    }\n\n    SetupEditingHandlers(): void {\n        this.editingHandler = new Cesium.ScreenSpaceEventHandler(this.map.canvas);\n    }\n\n    // </editor-fold>\n\n    // <editor-fold desc=\"Map UI Generation Code\">\n\n    generateMapUI(): void {\n        this.entity = this.map.entities.add({\n            name: this.command.Name,\n            id: this.command.handle.id,\n            polyline: {\n                positions: new Cesium.CallbackProperty( (): any => {\n                    return Cesium.Cartesian3.fromDegreesArrayHeights(\n                        [this.position.lng, this.position.lat, this.command.GroundElevationHAE,\n                            this.position.lng, this.position.lat, this.altitude + this.command.GroundElevationHAE]);\n                }, false),\n                width: 10,\n                material: new Cesium.PolylineGlowMaterialProperty({\n                    glowPower: 0.1,\n                    color: Cesium.Color.fromBytes(81, 184, 72, 255)\n                })\n            },\n            position: new Cesium.CallbackProperty( (): any => {\n                return Cesium.Cartesian3.fromDegrees(this.position.lng, this.position.lat, this.altitude + this.command.GroundElevationHAE);\n            }, false) ,\n            point: {\n                pixelSize: 10,\n                color: Cesium.Color.fromBytes(81, 184, 72, 255)\n            }\n        });\n    }\n\n    // </editor-fold>\n\n    // <editor-fold desc=\"Map Edit Code\">\n\n    Edit(): void {\n        if (this.isEditing) {\n            this.isEditing = false;\n            // Turn off editing and make appropriate updates\n\n            this.editingHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOWN);\n            this.editingHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_UP);\n            this.editingHandler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n\n        } else {\n            // Turn on editing and wire up event listening\n\n            this.isEditing = true;\n            var dragging: any;\n\n            // Wire up handler to listen for left mouse down event\n            this.editingHandler.setInputAction( (click: any): void => {\n\n                // Check to see what the mouse has selected\n                var pickedObject: any = this.map.scene.pick(click.position);\n\n                // Check to make sure we are only grabbing the entity we are editing\n                if (Cesium.defined(pickedObject) && pickedObject.id === this.entity) {\n                    dragging = pickedObject;\n\n                    // Turn off rotation so we only move the entity\n                    this.map.scene.screenSpaceCameraController.enableRotate = false;\n\n                    // Turn off depth testing so we can see the feature around terrain\n                    this.map.scene.globe.depthTestAgainstTerrain = false;\n                }\n            }, Cesium.ScreenSpaceEventType.LEFT_DOWN);\n\n            // Wire up handler to listen for left mouse up event\n            this.editingHandler.setInputAction( (): void => {\n\n                // Check if dragging entity is defined\n                if (Cesium.defined(dragging)) {\n\n                    // Reset to undefined\n                    dragging = undefined;\n\n                    // Renable rotation\n                    this.map.scene.screenSpaceCameraController.enableRotate = true;\n\n                    // Turn depth testing back on\n                    this.map.scene.globe.depthTestAgainstTerrain = true;\n\n                    this.UpdatePosition();\n                }\n            }, Cesium.ScreenSpaceEventType.LEFT_UP);\n\n            // Wire up handler for each mouse move while entity is being dragged\n            this.editingHandler.setInputAction( (movement: any): void => {\n\n                // Return immediately if we are not dragging anything\n                if (!dragging) {\n                    return;\n                }\n\n                // Use ray pick to get position and convert\n                var ray: any = this.map.camera.getPickRay(movement.endPosition);\n                var position: any = this.map.scene.globe.pick(ray, this.map.scene);\n\n                // Check to see if the position is defined\n                if (!Cesium.defined(position) || !dragging) {\n                    return;\n                }\n\n                var positionCartographic: any = this.map.scene.globe.ellipsoid.cartesianToCartographic(position);\n                positionCartographic.height = 0;\n                //position = this.map.scene.globe.ellipsoid.cartographicToCartesian(positionCartographic);\n\n                //var cartographic: Cesium.Cartographic = Cesium.Cartographic.fromCartesian(position);\n                var longitude: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.longitude), 8);\n                var latitude: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.latitude), 8);\n\n                this.position.lng = longitude;\n                this.position.lat = latitude;\n\n                this.bindings.$applyAsync();\n\n            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n        }\n    }\n\n    // </editor-fold>\n\n    trackedFlag: boolean = false;\n\n    TrackEntity(): void {\n        this.onTrackEntity({id: this.entity.id });\n    }\n\n}\n\n// Register component with Angular\nexport default angular.module('DroneSense.Web.Tools.TakeoffCommandInstance', [\n\n] ).component('dsTakeoffCommandInstance', {\n    transclude: true,\n    bindings: {\n        command: '<',\n        onCommandChange: '&',\n        map: '<',\n        user: '<',\n        onDelete: '&',\n        trackedEntity: '<',\n        onTrackEntity: '&'\n    },\n    controller: TakeoffCommandInstance,\n    templateUrl: './app/components/tools/takeoffTool/takeoffCommandInstance.html'\n});\n\n"],"sourceRoot":"/source/"}