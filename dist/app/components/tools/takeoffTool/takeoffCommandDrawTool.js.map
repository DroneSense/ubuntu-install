{"version":3,"sources":["components/tools/takeoffTool/takeoffCommandDrawTool.ts"],"names":[],"mappings":"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","file":"components/tools/takeoffTool/takeoffCommandDrawTool.js","sourcesContent":["import { IDrawTool } from '../IDrawTool';\nimport { Conversions } from '@dronesense/model/lib/common/Utility';\nimport { GeoPoint } from '@dronesense/model'\n\nexport class TakeoffCommandDrawTool implements IDrawTool {\n\n    map: Cesium.Viewer;\n    _mouseHandler: Cesium.ScreenSpaceEventHandler;\n\n    IconPath: string = './app/components/tools/takeoffTool/images/takeoff.svg';\n    ToolTip: string = 'Add Takeoff';\n    Selected: boolean;\n\n    constructor(viwer: Cesium.Viewer, public callback: Function) {\n        this.map = viwer;\n    }\n\n    StartEdit(): void {\n\n        // Check if tool is already turned on if so turn off\n        if (this.Selected) {\n            this.StopEdit();\n            return;\n        }\n\n        this.Selected = true;\n\n        // wire up left mouse click event\n        this._mouseHandler = new Cesium.ScreenSpaceEventHandler(this.map.canvas, false);\n\n        this._mouseHandler.setInputAction((click: any) => {\n                var ray: any = this.map.camera.getPickRay(click.position);\n                var position: any = this.map.scene.globe.pick(ray, this.map.scene);\n                console.log(position);\n                if (Cesium.defined(position)) {\n                    // Make the height of the position = 0 so it works with groundPrimitive\n                    var positionCartographic: Cesium.Cartographic = this.map.scene.globe.ellipsoid.cartesianToCartographic(position);\n                    positionCartographic.height = 0;\n                    //position = this.map.scene.globe.ellipsoid.cartographicToCartesian(positionCartographic);\n\n                    //var cartographic: Cesium.Cartographic = Cesium.Cartographic.fromCartesian(position);\n                    var longitudeString: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.longitude), 8);\n                    var latitudeString: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.latitude), 8);\n\n                    var terrainProvider: any = new Cesium.CesiumTerrainProvider({\n                        url: 'https://www.cesiumcontent.com/api/terrain/world?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkMTM4ZDE2OS05NWYwLTQ0YmItOWY3YS0yNjEwOGE5Y2Y3NjYiLCJpZCI6NywiaWF0IjoxNDU1MjkyNzg5fQ.NDKlrwQZE_04ntDuL89hvatEmuycQo5llhtz3Mi6Wo0'\n                    });\n                    var positions: Array<Cesium.Cartographic> = [\n                        Cesium.Cartographic.fromDegrees(longitudeString, latitudeString)\n                    ];\n\n                    // Get terrain height at click location before adding takeoff point\n                    Cesium.sampleTerrain(terrainProvider, 15, positions).then((updatedPositions: any): void => {\n\n                        //this._viewer.entities.add({\n                        //    name: 'Takeoff',\n                        //    //polyline: {\n                        //    //    positions: Cesium.Cartesian3.fromDegreesArrayHeights(\n                        //    //        [longitudeString, latitudeString, updatedPositions[0].height,\n                        //    //            longitudeString, latitudeString, updatedPositions[0].height + 100]),\n                        //    //    width: 10,\n                        //    //    material: new Cesium.PolylineGlowMaterialProperty({\n                        //    //        glowPower: 0.1,\n                        //    //        color: Cesium.Color.fromBytes(242, 101, 34, 255)\n                        //    //    })\n                        //    //},\n                        //    position: Cesium.Cartesian3.fromDegrees(longitudeString, latitudeString, updatedPositions[0].height),\n                        //    point: {\n                        //        pixelSize: 10,\n                        //        color: Cesium.Color.YELLOW\n                        //    }\n                        //});\n\n                        //console.log(updatedPositions);\n                        //console.log(positions[0]);\n                        //this.create3DModel('/components/cesiumMap/models/freedom.glb', longitudeString, latitudeString, updatedPositions[0].height);\n\n                        var takeoffCommand: Object = {\n                            Position: new GeoPoint(latitudeString, longitudeString),\n                            Altitude: 50,\n                            GroundElevationMSL: updatedPositions[0].height,\n                            GroundElevationHAE: updatedPositions[0].height,\n                            AltitudeMSL: updatedPositions[0].height + 50,\n                            AltitudeHAE: updatedPositions[0].height + 50,\n                            ClimbSpeed: 5,\n                            FlightSpeed: 5,\n                            Name: 'Takeoff',\n                            Type: 'Takeoff',\n                            Expanded: true\n                        };\n\n                        this.callback(takeoffCommand);\n                    });\n\n                    this.StopEdit();\n                }\n            },\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\n        );\n    }\n\n    StopEdit(): void {\n        this._mouseHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK);\n        this.Selected = false;\n    }\n}\n"],"sourceRoot":"/source/"}