{"version":3,"sources":["components/tools/sensorCaptureTool/sensorCaptureToolInstance.ts"],"names":[],"mappings":"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","file":"components/tools/sensorCaptureTool/sensorCaptureToolInstance.js","sourcesContent":["import { User, SensorCaptureCommand, Camera, GeoPoint, FlightPlan  } from '@dronesense/model';\nimport { Conversions } from '@dronesense/model/lib/common/Utility';\nimport commandHeader from '../../../components/commandHeader/commandHeader';\nimport formatter from '../../../components/formatters/infoFormatter';\nimport readableElevation from '../../../common/readableElevation';\nimport unitString from '../../../components/formatters/unitString';\n\nimport MapService from '../../../services/mapService';\nimport { IMapService } from '../../../services/mapService';\n\nexport interface ISensorCaptureInstance extends ng.IScope {\n\n}\n\nenum EditMode {\n    AGL,\n    MSL,\n    GSD\n}\n\n// Represents a position in space to capture sensor data\nclass SensorCaptureInstance {\n\n    // Enum to indicate what edit mode we are in.\n    editMode: EditMode;\n\n    // The waypoint command passed in\n    command: SensorCaptureCommand;\n\n    // Map instance passed in\n    map: Cesium.Viewer;\n\n    // User object allows us to modify presentation of data based on user settings\n    user: User;\n\n    // On delete callback\n    onDelete: any;\n\n    // Currently tracked entity passed in from command viewer\n    trackedEntity: string;\n\n    // Called to notify command viewer of a request for tracking\n    onTrackEntity: any;\n\n    // Camera object for sensor visualization\n    camera: Camera;\n\n    // Visual representation of command\n    entity: Cesium.Entity;\n\n    // Flag to indicate if command is being edited in map\n    isEditing: boolean = false;\n\n    // Editing handler reference\n    editingHandler: Cesium.ScreenSpaceEventHandler;\n\n    // All properties that can be edited in the command.\n    flightSpeed: number;\n\n    position: GeoPoint;\n\n    altitude: number;\n\n    altitudeMSL: number;\n\n    heading: number;\n\n    pitch: number;\n\n    roll: number;\n\n    gsd: number;\n\n    flightPlan: FlightPlan;\n\n    // Handle on blur property change\n    UpdateAltitude(positionChanged: boolean): void {\n\n        var groundElevationMSL: number;\n        var groundElevationHAE: number;\n\n        // If position changed we need to query the elevation service\n        if (positionChanged) {\n\n            // Make call to get elevation\n            this.mapService.getElevation(this.position.lat, this.position.lng).then((terrainElevation: number): void => {\n\n                groundElevationMSL = terrainElevation;\n                groundElevationHAE = terrainElevation;\n\n                this.UpdateDBAltitudes(groundElevationMSL, groundElevationHAE);\n\n            });\n        // no need to use elevation service if the position hasn't changed just use existing values\n        } else {\n\n            groundElevationMSL = this.command.GroundElevationMSL;\n            groundElevationHAE = this.command.GroundElevationHAE;\n\n            this.UpdateDBAltitudes(groundElevationMSL, groundElevationHAE);\n        }\n\n        this.drawSensor();\n    }\n\n    // There are three values here that need to change.  1) AltitudeAGL 2) AltitudeMSL and GSD\n    // On is input and the other two are calculated.\n    // First we need to figure out what mode we are in and calculate the other two.\n    UpdateDBAltitudes(groundElevationMSL: number, groundElevationHAE: number): void {\n        // If we are in AGL mode then altitudeMSL must be calculated\n\n        switch (this.editMode) {\n\n            // Set agl and calculate msl and gsd\n            case EditMode.AGL:\n                this.command.UpdateProperties({\n                    Altitude: this.altitude,\n                    GroundElevationMSL: groundElevationMSL,\n                    GroundElevationHAE: groundElevationHAE,\n                    AltitudeMSL: groundElevationMSL + this.altitude,\n                    AltitudeHAE: groundElevationHAE + this.altitude,\n                    GSD: this.camera.getGSD(this.altitude)\n                });\n            break;\n\n            // Set MSL and calculate agl and gsd.\n            case EditMode.MSL:\n                this.command.UpdateProperties({\n                    Altitude: this.altitudeMSL - this.command.GroundElevationMSL,\n                    GroundElevationMSL: groundElevationMSL,\n                    GroundElevationHAE: groundElevationHAE,\n                    AltitudeMSL: this.altitudeMSL,\n                    AltitudeHAE: this.altitudeMSL,\n                    GSD: this.camera.getGSD(this.altitudeMSL - this.command.GroundElevationMSL)\n                });\n            break;\n\n            // Set GSD and calculate agl and msl\n            case EditMode.GSD:\n                this.command.UpdateProperties({\n                    Altitude: this.altitudeMSL - this.command.GroundElevationMSL,\n                    GroundElevationMSL: groundElevationMSL,\n                    GroundElevationHAE: groundElevationHAE,\n                    AltitudeMSL: this.altitudeMSL,\n                    AltitudeHAE: this.altitudeMSL,\n                    GSD: this.gsd\n                });\n            break;\n\n            default:\n            break;\n        }\n    }\n\n    UpdatePosition(): void {\n\n        // Save property on model\n        this.command.SaveProperty(this.position, 'Position');\n\n        // Update new position altitude\n        this.UpdateAltitude(true);\n\n    }\n\n    // Remove self from map then call viewer for removal\n    Delete(): void {\n\n        // Remove UI from map\n        this.map.entities.remove(this.entity);\n\n        // Clean up primitives from map\n        if (this.map.scene.primitives.contains(this.sensor)) {\n            this.map.scene.primitives.remove(this.sensor);\n        }\n\n        // Call parent delete function\n        this.onDelete({commandId: this.command.handle.id });\n    }\n\n    // Fly camera to this command\n    FlyTo(): void {\n        this.map.flyTo(this.entity);\n    }\n\n    // Toggle visibility on map\n    HideShow(): void {\n        this.entity.show = !this.entity.show;\n    }\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'db',\n        'mapService'\n    ];\n\n    constructor(public bindings: ISensorCaptureInstance,\n                public db: any,\n                public mapService: IMapService) {\n\n        // Create copy for UI binding\n        this.SetupViewData();\n\n        // Add UI to map\n        this.generateMapUI();\n\n        // Listen for model changes\n        this.command.on('propertyChanged', (propName: string, propValue: any) => {\n            this.bindings.$applyAsync();\n        });\n\n        this.bindings.$on('$destroy', (): void => {\n\n            // watchers are automatically destroyed\n\n            // destruction code here\n            this.user.off();\n\n            this.command.off();\n\n            // Clean up editing handler\n            this.editingHandler.destroy();\n        });\n\n        // Update camera track changes\n        this.bindings.$watch(() => { return this.trackedEntity; }, (newValue: string, oldValue: string): void => {\n\n            this.trackedFlag = (this.entity.id === newValue);\n\n        });\n\n        // Update camera track changes\n        this.bindings.$watch(() => { return this.camera; }, (newValue: Camera, oldValue: Camera): void => {\n\n            this.drawSensor();\n\n        });\n\n        this.SetupEditingHandlers();\n\n        // Set current edit mode based on the flight plan settings object.\n        this.editMode = this.flightPlan.DefaultAltitudeMSL ? EditMode.MSL : EditMode.AGL;\n    }\n\n    // Bind two way fields that are also update\n    SetupViewData(): void {\n\n        this.flightSpeed = this.command.FlightSpeed;\n\n        this.bindings.$watch(() => { return this.command.FlightSpeed; }, (newValue: number, oldValue: number) => {\n            this.flightSpeed = this.command.FlightSpeed;\n        });\n\n        this.position = this.command.Position;\n\n        this.bindings.$watch(() => { return this.command.Position; }, (newValue: GeoPoint, oldValue: GeoPoint) => {\n            this.position = this.command.Position;\n        });\n\n        this.altitude = this.command.Altitude;\n\n        this.bindings.$watch(() => { return this.command.Altitude; }, (newValue: number, oldValue: number) => {\n            this.altitude = this.command.Altitude;\n        });\n\n        this.altitudeMSL = this.command.AltitudeMSL;\n\n        this.bindings.$watch(() => { return this.command.AltitudeMSL; }, (newValue: number, oldValue: number) => {\n            this.altitudeMSL = this.command.AltitudeMSL;\n        });\n\n        this.gsd = this.command.GSD;\n\n        this.bindings.$watch(() => { return this.command.GSD; }, (newValue: number, oldValue: number) => {\n            this.gsd = this.command.GSD;\n        });\n\n        this.heading = this.command.Heading;\n\n        this.bindings.$watch(() => { return this.command.Heading; }, (newValue: number, oldValue: number) => {\n            this.heading = this.command.Heading;\n        });\n\n        this.pitch = this.command.Pitch;\n\n        this.bindings.$watch(() => { return this.command.Pitch; }, (newValue: number, oldValue: number) => {\n            this.pitch = this.command.Pitch;\n        });\n\n        this.roll = this.command.Roll;\n\n        this.bindings.$watch(() => { return this.command.Roll; }, (newValue: number, oldValue: number) => {\n            this.roll = this.command.Roll;\n        });\n    }\n\n    SetupEditingHandlers(): void {\n        this.editingHandler = new Cesium.ScreenSpaceEventHandler(this.map.canvas);\n    }\n\n    EditMode(modeName: string): boolean {\n        if (EditMode[this.editMode] === modeName) {\n            return true;\n        } else if (EditMode[this.editMode] === modeName) {\n            return true;\n        } else if (EditMode[this.editMode] === modeName) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Sensor object on map\n    sensor: Cesium.RectangularSensor;\n\n    drawSensor(): void {\n\n        if (!this.camera) {\n            return;\n        }\n\n        // check to see if exists on map\n        if (this.map.scene.primitives.contains(this.sensor)) {\n            this.map.scene.primitives.remove(this.sensor);\n        }\n\n        this.sensor = new Cesium.RectangularSensor();\n\n        this.sensor.modelMatrix = Cesium.Transforms.headingPitchRollToFixedFrame(\n            Cesium.Cartesian3.fromDegrees(this.position.lng, this.position.lat, this.altitudeMSL),\n            Conversions.toRadians(this.heading),\n            Conversions.toRadians(this.pitch),\n            Conversions.toRadians(this.roll));\n\n        // Figure out this calculation\n        this.sensor.radius = 10000;\n        this.sensor.xHalfAngle = this.camera.getHalfAngleX();\n        this.sensor.yHalfAngle = this.camera.getHalfAngleY();\n        this.sensor.showIntersection = true;\n\n        // var material = new Cesium.GridMaterialProperty({\n        //     color : Cesium.Color.WHITE,\n        //     cellAlpha : 0.1,\n        //     lineCount : new Cesium.Cartesian2(8, 8),\n        //     lineThickness: new Cesium.Cartesian2(1.0, 1.0),\n        //     lineOffset: new Cesium.Cartesian2(0.0, 0.0)\n        // });\n\n        //var material: Cesium.GridMaterialProperty = new Cesium.GridMaterialProperty();\n\n        //this.sensor.lateralSurfaceMaterial = material;\n\n        this.sensor.lateralSurfaceMaterial = Cesium.Material.fromType('Grid', {\n            // color : new Cesium.Color.fromBytes(7, 215, 68),\n            // cellAlpha : 0.3,\n            // lineCount : new Cesium.Cartesian2(11, 11),\n            // lineThickness: new Cesium.Cartesian2(1.0, 1.0),\n            // lineOffset: new Cesium.Cartesian2(0.0, 0.0)\n        });\n        //this.sensor.lateralSurfaceMaterial.color = new Cesium.Color(1, 1, 1, 0.7);\n        //this.sensor.lateralSurfaceMaterial.uniforms.color = new Cesium.Color(1.0, 1.0, 1.0, 0.8);\n        this.map.scene.primitives.add(this.sensor);\n    }\n\n    generateMapUI(): void {\n        this.drawSensor();\n\n        // create the svg image string\n        var svgDataDeclare: string = 'data:image/svg+xml,';\n        var svgCircle: string = '<path style=\"fill:#ffffff\" d=\"M12,23.9L0.1,12L12,0.1L23.9,12L12,23.9z M4.4,12l7.6,7.6l7.6-7.6L12,4.4L4.4,12z\"/>';\n        var svgPrefix: string = '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 24 24\" xml:space=\"preserve\">';\n        var svgSuffix: string = '</svg>';\n        var svgString: string = svgPrefix + svgCircle + svgSuffix;\n\n        // create the cesium entity\n        var svgEntityImage: any = svgDataDeclare + svgString;\n\n    //  var entity = viewer.entities.add({\n    //      position: Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883, 10),\n    //      billboard: {\n    //          image: svgEntityImage\n    //      }\n    //  });\n\n        this.entity = this.map.entities.add({\n            name: this.command.Name,\n            id: this.command.handle.id,\n            polyline: {\n                positions: new Cesium.CallbackProperty( (): any => {\n                    return Cesium.Cartesian3.fromDegreesArrayHeights(\n                        [this.position.lng, this.position.lat, this.command.GroundElevationHAE,\n                            this.position.lng, this.position.lat, this.altitude + this.command.GroundElevationHAE]);\n                }, false) ,\n                width: 2,\n                material: Cesium.Color.fromBytes(255, 255, 255, 255)\n            },\n            position: new Cesium.CallbackProperty( (): any => {\n                return Cesium.Cartesian3.fromDegrees(this.position.lng, this.position.lat, this.altitude + this.command.GroundElevationHAE);\n            }, false),\n            billboard: {\n                    image: svgEntityImage,\n                    sizeInMeters : false\n            }\n            // point: {\n            //     pixelSize: 10,\n            //     color: Cesium.Color.fromBytes(255, 255, 255, 0),\n            //     outlineColor: Cesium.Color.fromBytes(255, 255, 255, 255),\n            //     outlineWidth: 2\n            // }\n        });\n    }\n\n    Edit(): void {\n        if (this.isEditing) {\n            this.isEditing = false;\n            // Turn off editing and make appropriate updates\n\n            this.editingHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOWN);\n            this.editingHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_UP);\n            this.editingHandler.removeInputAction(Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n\n        } else {\n            // Turn on editing and wire up event listening\n\n            this.isEditing = true;\n            var dragging: any;\n\n            // Wire up handler to listen for left mouse down event\n            this.editingHandler.setInputAction( (click: any): void => {\n\n                // Check to see what the mouse has selected\n                var pickedObject: any = this.map.scene.pick(click.position);\n\n                // Check to make sure we are only grabbing the entity we are editing\n                if (Cesium.defined(pickedObject) && pickedObject.id === this.entity) {\n                    dragging = pickedObject;\n\n                    // Turn off rotation so we only move the entity\n                    this.map.scene.screenSpaceCameraController.enableRotate = false;\n\n                    // Turn off depth testing so we can see the feature around terrain\n                    this.map.scene.globe.depthTestAgainstTerrain = false;\n                }\n            }, Cesium.ScreenSpaceEventType.LEFT_DOWN);\n\n            // Wire up handler to listen for left mouse up event\n            this.editingHandler.setInputAction( (): void => {\n\n                // Check if dragging entity is defined\n                if (Cesium.defined(dragging)) {\n\n                    // Reset to undefined\n                    dragging = undefined;\n\n                    // Renable rotation\n                    this.map.scene.screenSpaceCameraController.enableRotate = true;\n\n                    // Turn depth testing back on\n                    this.map.scene.globe.depthTestAgainstTerrain = true;\n\n                    this.UpdatePosition();\n                }\n            }, Cesium.ScreenSpaceEventType.LEFT_UP);\n\n            // Wire up handler for each mouse move while entity is being dragged\n            this.editingHandler.setInputAction( (movement: any): void => {\n\n                // Return immediately if we are not dragging anything\n                if (!dragging) {\n                    return;\n                }\n\n                // Use ray pick to get position and convert\n                var ray: any = this.map.camera.getPickRay(movement.endPosition);\n                var position: any = this.map.scene.globe.pick(ray, this.map.scene);\n\n                // Check to see if the position is defined\n                if (!Cesium.defined(position) || !dragging) {\n                    return;\n                }\n\n                var positionCartographic: any = this.map.scene.globe.ellipsoid.cartesianToCartographic(position);\n                positionCartographic.height = 0;\n                //position = this.map.scene.globe.ellipsoid.cartographicToCartesian(positionCartographic);\n\n                //var cartographic: Cesium.Cartographic = Cesium.Cartographic.fromCartesian(position);\n                var longitude: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.longitude), 8);\n                var latitude: number = Conversions.formatCoordinate(Cesium.Math.toDegrees(positionCartographic.latitude), 8);\n\n                this.position.lng = longitude;\n                this.position.lat = latitude;\n\n                this.bindings.$applyAsync();\n\n            }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n        }\n    }\n\n    trackedFlag: boolean = false;\n\n    TrackEntity(): void {\n        this.onTrackEntity({id: this.entity.id });\n    }\n}\n\n// Register component with Angular\nexport default angular.module('DroneSense.Web.SensorCaptureInstance', [\n    commandHeader.name,\n    formatter.name,\n    readableElevation.name,\n    unitString.name,\n    MapService.name\n]).component('dsSensorCaptureInstance', {\n    transclude: true,\n    bindings: {\n        command: '<',\n        onCommandChange: '&',\n        map: '<',\n        user: '<',\n        onDelete: '&',\n        trackedEntity: '<',\n        onTrackEntity: '&',\n        camera: '<',\n        flightPlan: '<'\n    },\n    controller: SensorCaptureInstance,\n    templateUrl: './app/components/tools/sensorCaptureTool/sensorCaptureToolInstance.html'\n});\n"],"sourceRoot":"/source/"}