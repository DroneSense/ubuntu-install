{"version":3,"sources":["components/video/video.ts"],"names":[],"mappings":"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","file":"components/video/video.js","sourcesContent":["\nexport interface IVideo extends ng.IScope {\n}\n\nclass Video {\n\n    videoViewer: any;\n\n    subscriber: any;\n\n    player: any;\n\n    playerWidth: string = '469px';\n    playerHeight: string = '264px';\n    top: string = '115px';\n    right: string = '64px';\n    zindex: string = '0';\n\n    ip: string = '104.198.243.2';\n\n    port: string = '1935';\n\n    streamName: string;\n\n    buffer: number = 0;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        '$interval'\n    ];\n\n    constructor(public bindings: IVideo,\n                public stateService: angular.ui.IStateService,\n                public $interval: angular.IIntervalService) {\n\n        if (stateService.params['ip']) {\n            this.ip = stateService.params['ip'];\n        }\n        if (stateService.params['port']) {\n            this.port = stateService.params['port'];\n        }\n        if (stateService.params['name']) {\n            this.streamName = stateService.params['name'];\n        }\n        if (stateService.params['buffer']) {\n            this.buffer = stateService.params['buffer'];\n        }\n    }\n\n    $onInit(): void {\n        try {\n            \n            /* !web-start */\n            // Create a view instance based on video element id.\n            this.videoViewer = new red5prosdk.PlaybackView('red5pro-video');\n\n            // Create a new instance of the Flash/RTMP subcriber.\n            this.subscriber = new red5prosdk.RTMPSubscriber();\n            // Attach the subscriber to the view.\n            this.videoViewer.attachSubscriber(this.subscriber);\n\n            // Initialize\n            this.subscriber.init({\n                protocol: 'rtmp',\n                host: this.ip,\n                port: this.port,\n                app: 'live',\n                streamName: this.streamName.replace(' ', '-'),\n                mimeType: 'rtmp/flv',\n                //swf: 'node_modules/red5pro-video-js.swf',\n                useVideoJS: false,\n                //swfobjectURL: 'node_modules/swfobject.js',\n                width: '100%',\n                height: '100%',\n                swf: 'node_modules/red5pro-subscriber.swf',\n                swfobjectURL: 'node_modules/swfobject.js',\n                buffer: this.buffer\n            })\n            .then((player: any) => {\n                // `player` is the WebRTC Player instance.\n                // Invoke the play action.\n                player.play();\n                //this.player = player;\n\n                setTimeout(() => {\n                    this.showLoadingWindow = false;\n                    this.bindings.$applyAsync();\n                }, this.buffer * 1000);\n\n                this.$interval(() => {\n                    this.progressValue += 1;\n                }, (this.buffer * 1000) / 100, 10000 / this.buffer, true);\n\n            })\n            .catch((error: any) => {\n                // A fault occurred while trying to initialize and playback the stream.\n                console.error(error);\n            });\n            /* !web-stop */\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    progressValue: number = 0;\n\n    showLoadingWindow: boolean = true;\n\n    $onDestroy(): void {\n\n    }\n}\n\nexport default angular.module('DroneSense.Web.Video', [\n\n]).component('dsVideo', {\n    bindings: {\n    },\n    controller: Video,\n    templateUrl: './app/components/video/video.html'\n});\n"],"sourceRoot":"/source/"}