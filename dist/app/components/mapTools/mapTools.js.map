{"version":3,"sources":["components/mapTools/mapTools.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA0BA,8EAA8E;YAC9E;gBA4CI,gCAAgC;gBAChC,kBAAmB,QAAmB,EAAS,EAAO;oBAAnC,aAAQ,GAAR,QAAQ,CAAW;oBAAS,OAAE,GAAF,EAAE,CAAK;oBAElD,IAAI,KAAK,GAAa,IAAI,CAAC;oBAE3B,wBAAwB;oBACxB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;oBAE9B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;oBAE7B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBAEvB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;oBAE9B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;oBAE1B,IAAI,CAAC,OAAO,GAAG,UAAC,OAAY;wBACxB,KAAK,CAAC,YAAY,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;oBAC3C,CAAC,CAAC;oBAEN,yGAAyG;oBACzG,kCAAkC;oBAClC,UAAU;oBAEN,eAAe;oBACf,IAAI,CAAC,UAAU,EAAE,CAAC;gBACtB,CAAC;gBAED,iBAAiB;gBACjB,6BAAU,GAAV;oBAEI,IAAI,QAAQ,GAAiB,IAAI,+BAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBACtE,IAAI,UAAU,GAAmB,IAAI,mCAAc,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC5E,IAAI,YAAY,GAA4B,IAAI,iDAAuB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;oBACjH,IAAI,QAAQ,GAA2B,IAAI,+CAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1F,IAAI,UAAU,GAA0B,IAAI,6CAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1F,IAAI,WAAW,GAAoB,IAAI,kCAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/E,IAAI,SAAS,GAAc,IAAI,yBAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjE,IAAI,WAAW,GAAgB,IAAI,6BAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBACvE,IAAI,aAAa,GAAkB,IAAI,iCAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC7E,IAAI,UAAU,GAAsB,IAAI,yCAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClF,IAAI,aAAa,GAAkB,IAAI,iCAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC7E,IAAI,YAAY,GAAiB,IAAI,+BAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1E,IAAI,QAAQ,GAAa,IAAI,uBAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9D,IAAI,WAAW,GAAgB,IAAI,6BAAW,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAEvE,IAAI,aAAa,GAAsB,IAAI,yCAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;oBAEtG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACxC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAE1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACzC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACxC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAE5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAEnC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC3C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAC7C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAE5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE3C,CAAC;gBA1ED,cAAc;gBACP,gBAAO,GAAkB;oBAC5B,QAAQ;oBACR,IAAI;iBACP,CAAC;gBAuEN,eAAC;YAAD,CAjHA,AAiHC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,yBAAyB,EAAE,EAExD,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE;gBACvB,QAAQ,EAAE;oBACN,GAAG,EAAE,GAAG;oBACR,mBAAmB;oBACnB,iBAAiB;oBACjB,YAAY,EAAE,GAAG;oBACjB,UAAU,EAAE,GAAG;iBAClB;gBACD,UAAU,EAAE,QAAQ;gBACpB,WAAW,EAAE,yCAAyC;aACzD,CAAC,EAAC","file":"components/mapTools/mapTools.js","sourcesContent":["import { IDrawTool } from '../tools/IDrawTool';\nimport { FlightPlan } from '@dronesense/model';\n\nimport { WaypointCommandDrawTool } from '../tools/waypointTool/waypointCommandDrawTool';\nimport { GeofenceTool } from '../tools/geofenceTool/geofenceDrawTool';\nimport { RallyPointTool } from '../tools/rallyPointTool/rallyPointDrawTool';\nimport { TakeoffCommandDrawTool } from '../tools/takeoffTool/takeoffCommandDrawTool';\nimport { SurveyCommandDrawTool } from '../tools/surveyTool/surveyCommandDrawTool';\nimport { Model3DDrawTool } from '../tools/3dModelTool/3dModelDrawTool';\nimport { OrbitTool } from '../tools/orbitTool/orbitDrawTool';\nimport { MeasureTool } from '../tools/measureTool/measureDrawTool';\nimport { ElevationTool } from '../tools/elevationTool/elevationDrawTool';\nimport { VolumeMeasureTool } from '../tools/volumeMeasureTool/volumeMeasureDrawTool';\nimport { Polygon3DTool } from '../tools/polygon3DTool/polygon3DDrawTool';\nimport { Circle3DTool } from '../tools/circle3DTool/circle3DDrawTool';\nimport { NoteTool } from '../tools/noteTool/noteDrawTool';\nimport { WarningTool } from '../tools/warningTool/warningDrawTool';\nimport { SensorCaptureTool } from '../tools/sensorCaptureTool/sensorCaptureDrawTool';\n\nexport interface IMapTools extends ng.IScope {\n    map: Cesium.Viewer;\n    onDrawStart(): void;\n    onDrawEnd(): void;\n    onAddCommand(command: any): void;\n}\n\n// Map tools are the Draw Handlers for various commands that add UI to the map\nclass MapTools {\n\n    // Collection of single instance tools\n    singleInstanceTools: Array<IDrawTool>;\n\n    // Multi instance tools\n    multiInstanceTools: Array<IDrawTool>;\n\n    // Measure tools\n    measureTools: Array<IDrawTool>;\n\n    // 3D creation tools\n    threeDCreationTools: Array<IDrawTool>;\n\n    // Annotation Tools\n    annotationTools: Array<IDrawTool>;\n\n    // Map reference\n    map: Cesium.Viewer;\n\n    // Flight Plan ID\n    flightPlanId: string;\n\n    // Call back from draw tool handlers\n    drawEnd: any;\n\n    // Bindings interface method\n    onAddCommand: any;\n\n    // Bindings interface method\n    onDrawStart: any;\n\n    // Binding interface method\n    onDrawEnd: any;\n\n    // Binding Property\n    flightPlan: FlightPlan;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'db'\n    ];\n\n    // Take a list of tools and load\n    constructor(public bindings: IMapTools, public db: any) {\n\n        var $ctrl: MapTools = this;\n\n        // Initialize tool array\n        this.singleInstanceTools = [];\n\n        this.multiInstanceTools = [];\n\n        this.measureTools = [];\n\n        this.threeDCreationTools = [];\n\n        this.annotationTools = [];\n\n        this.drawEnd = (command: any) => {\n            $ctrl.onAddCommand({command: command});\n        };\n\n    //    this.bindings.$watch(() => { return this.camera; }, (newValue: Camera, oldValue: Camera): void => {\n    //         this.camera = newValue;\n    //     });\n\n        // add DS tools\n        this.AddDSTools();\n    }\n\n    // Load all tools\n    AddDSTools(): void {\n\n        var geofence: GeofenceTool = new GeofenceTool(this.map, this.drawEnd);\n        var rallyPoint: RallyPointTool = new RallyPointTool(this.map, this.drawEnd);\n        var waypointTool: WaypointCommandDrawTool = new WaypointCommandDrawTool(this.map, this.drawEnd, this.flightPlan);\n        var takeTool: TakeoffCommandDrawTool = new TakeoffCommandDrawTool(this.map, this.drawEnd);\n        var surveyTool: SurveyCommandDrawTool = new SurveyCommandDrawTool(this.map, this.drawEnd);\n        var model3DTool: Model3DDrawTool = new Model3DDrawTool(this.map, this.drawEnd);\n        var orbitTool: OrbitTool = new OrbitTool(this.map, this.drawEnd);\n        var measureTool: MeasureTool = new MeasureTool(this.map, this.drawEnd);\n        var elevationTool: ElevationTool = new ElevationTool(this.map, this.drawEnd);\n        var volumeTool: VolumeMeasureTool = new VolumeMeasureTool(this.map, this.drawEnd);\n        var polygon3DTool: Polygon3DTool = new Polygon3DTool(this.map, this.drawEnd);\n        var circle3DTool: Circle3DTool = new Circle3DTool(this.map, this.drawEnd);\n        var noteTool: NoteTool = new NoteTool(this.map, this.drawEnd);\n        var warningTool: WarningTool = new WarningTool(this.map, this.drawEnd);\n\n        var sensorCapture: SensorCaptureTool = new SensorCaptureTool(this.map, this.drawEnd, this.flightPlan);\n\n        this.singleInstanceTools.push(geofence);\n        this.singleInstanceTools.push(rallyPoint);\n\n        this.multiInstanceTools.push(takeTool);\n        this.multiInstanceTools.push(waypointTool);\n        this.multiInstanceTools.push(surveyTool);\n        this.multiInstanceTools.push(orbitTool);\n        this.multiInstanceTools.push(sensorCapture);\n\n        this.measureTools.push(measureTool);\n        this.measureTools.push(elevationTool);\n        this.measureTools.push(volumeTool);\n\n        this.threeDCreationTools.push(model3DTool);\n        this.threeDCreationTools.push(polygon3DTool);\n        this.threeDCreationTools.push(circle3DTool);\n\n        this.annotationTools.push(noteTool);\n        this.annotationTools.push(warningTool);\n\n    }\n}\n\nexport default angular.module('DroneSense.Web.MapTools', [\n\n]).component('dsMapTools', {\n    bindings: {\n        map: '<',\n        //onDrawStart: '&',\n        //onDrawEnd: '&',\n        onAddCommand: '&',\n        flightPlan: '<'\n    },\n    controller: MapTools,\n    templateUrl: './app/components/mapTools/mapTools.html'\n});\n\n"],"sourceRoot":"/source/"}