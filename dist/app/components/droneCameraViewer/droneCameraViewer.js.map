{"version":3,"sources":["components/droneCameraViewer/droneCameraViewer.ts"],"names":[],"mappings":"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","file":"components/droneCameraViewer/droneCameraViewer.js","sourcesContent":["import { Drone, Camera } from '@dronesense/model';\nimport { FrameType } from '@dronesense/model/lib/common/Enums';\nimport { EnumEx } from '@dronesense/model/lib/common/Enums';\nimport { BatteryType } from '@dronesense/model/lib/common/Enums';\n\nexport interface IDroneCameraViewer extends ng.IScope {\n\n}\n\nclass DroneCameraViewer {\n\n    drone: Drone;\n\n    camera: Camera;\n\n    // flag to indicate that the drone is read only mode\n    droneReadOnly: boolean = true;\n\n    // flag to indicate that the camera is read only mode\n    cameraReadOnly: boolean = true;\n\n    // flag to indicate that the drone is in edit mode\n    droneEditMode: boolean = false;\n\n    // flag to indicate that the camera is in edit mode\n    cameraEditMode: boolean = false;\n\n    // flag to indicate that the form is in add drone mode\n    addUserDroneMode: boolean = false;\n\n    // flag to indicate that the form is in add camera mode\n    addUserCameraMode: boolean = false;\n\n    // Flag to indicate if selected drone is a catalog drone\n    isCatalogDrone: boolean;\n\n    // Flag to indicate if selected camera is from catalog\n    isCatalogCamera: boolean;\n\n    // List of loaded user drones\n    UserDrones: Array<Drone> = [];\n\n    // List of loaded catalog drones\n    CatalogDrones: Array<Drone> = [];\n\n    // List of loaded catalog cameras\n    CatalogCameras: Array<Object> = [];\n\n    // List of loaded user cameras\n    UserCameras: Array<Camera> = [];\n\n    onSaveCamera: any;\n\n    onSaveDrone: any;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$q',\n        'db'\n    ];\n    constructor(public bindings: ng.IScope,\n                public $q: ng.IQService,\n                public db: any) {\n\n    }\n\n    $onInit(): void {\n\n        this.bindings.$watch(() => { return this.camera; }, (newValue: any, oldValue: any): void => {\n\n            this.isCatalogCamera = this.camera.Type.toLowerCase() === 'catalog';\n\n            console.log(this.isCatalogCamera);\n\n        });\n\n        this.bindings.$watch(() => { return this.drone; }, (newValue: any, oldValue: any): void => {\n\n            this.isCatalogDrone = this.drone.Type.toLowerCase() === 'catalog';\n\n        });\n\n        this.LoadUserAndCatalogDronesAndCameras();\n    }\n\n    LoadUserAndCatalogDronesAndCameras(): void {\n        var catalogDrones: any = this.db.drones.getCatalogDrones();\n        var userDrones: any = this.db.drones.getDronesForUser();\n\n        var catalogCameras: any = this.db.cameras.getCatalogCameras();\n        var userCameras: any = this.db.cameras.getCamerasForUser();\n\n        catalogDrones.on(catalogDrones.EVENTS.LIST_CHANGED, (drones: any): void => {\n            this.CatalogDrones = [];\n            drones.forEach((droneHandle: any): void => {\n                this.CatalogDrones.push(new Drone(droneHandle.id, droneHandle.handle));\n            });\n        });\n\n        catalogCameras.on(catalogCameras.EVENTS.LIST_CHANGED, (cameras: any): void => {\n            this.CatalogCameras = [];\n            cameras.forEach((cameraHandle: any): void => {\n                this.CatalogCameras.push(new Camera(cameraHandle.id, cameraHandle.handle, cameraHandle.type));\n            });\n        });\n\n        userDrones.on(userDrones.EVENTS.LIST_CHANGED, (drones: any): void => {\n            this.UserDrones.splice(0, this.UserDrones.length);\n            drones.forEach((droneHandle: any): void => {\n                this.UserDrones.push(new Drone(droneHandle.id, droneHandle.handle));\n            });\n            this.bindings.$applyAsync();\n        });\n\n        userCameras.on(userCameras.EVENTS.LIST_CHANGED, (cameras: any): void => {\n            this.UserCameras.splice(0, this.UserCameras.length);\n            cameras.forEach((cameraHandle: any): void => {\n                this.UserCameras.push(new Camera(cameraHandle.id, cameraHandle.handle, cameraHandle.type));\n            });\n\n            this.bindings.$applyAsync();\n        });\n\n\n    }\n\n    saveCamera(): void {\n        this.onSaveCamera({\n            camera: this.camera\n        });\n    }\n\n    saveDrone(): void {\n        this.onSaveDrone({\n            drone: this.drone\n        });\n    }\n\n    GetFrameTypes(): Array<string> {\n        return EnumEx.getNames(FrameType);\n    }\n\n    GetFrameValue(frameType: any): any {\n        return FrameType[frameType];\n    }\n\n    GetBatteryTypes(): Array<string> {\n        return EnumEx.getNames(BatteryType);\n    }\n\n    GetBatteryValue(batteryType: any): any {\n        return BatteryType[batteryType];\n    }\n\n    GetFlightControllerTypes(): Array<string> {\n        return ['DJI', 'APM'];\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.DroneCameraViewer', [\n\n]).component('dsDroneCameraViewer', {\n    bindings: {\n        camera: '<',\n        drone: '<',\n        onSaveCamera: '&',\n        onSaveDrone: '&'\n    },\n    controller: DroneCameraViewer,\n    templateUrl: './app/components/droneCameraViewer/droneCameraViewer.html'\n});\n"],"sourceRoot":"/source/"}