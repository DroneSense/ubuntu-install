{"version":3,"sources":["components/videoPlayer/videoPlayer.ts"],"names":[],"mappings":"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","file":"components/videoPlayer/videoPlayer.js","sourcesContent":["import { FlightControlSettings } from '../flightControlViewer/flightControlSettings';\n\nexport interface IVideoPlayer extends ng.IScope {\n\n}\n\nclass VideoPlayer {\n\n    videoViewer: any;\n\n    subscriber: any;\n\n    showingVideo: boolean = false;\n\n    showMap: boolean = true;\n\n    playerInitialized: boolean = false;\n\n    playerWidth: string = '469px';\n    playerHeight: string = '264px';\n    top: string = '115px';\n    right: string = '64px';\n    zindex: string = '0';\n\n    onExitFullScreen: () => {};\n    onFullScreen: () => {};\n\n    settings: FlightControlSettings;\n\n    sessionName: string;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope'\n    ];\n    constructor(public bindings: IVideoPlayer) {\n\n    }\n\n    $onInit(): void {\n        /* !web-start */\n        this.initializePlayer();\n        /* !web-stop */\n    }\n\n    initializePlayer(): void {\n        try {\n\n            if (this.playerInitialized) {\n                return;\n            }\n\n            /* !web-start */\n            // Create a view instance based on video element id.\n            this.videoViewer = new red5prosdk.PlaybackView('red5pro-video');\n\n            // Create a new instance of the Flash/RTMP subcriber.\n            this.subscriber = new red5prosdk.RTMPSubscriber();\n            // Attach the subscriber to the view.\n            this.videoViewer.attachSubscriber(this.subscriber);\n\n            // Initialize\n            this.subscriber.init({\n                protocol: 'rtmp',\n                host: this.settings.localVideoServerIP,\n                port: 1935,\n                app: 'live',\n                //context: 'room1',\n                streamName: this.sessionName.replace(' ', '-'),\n                mimeType: 'rtmp/flv',\n                //swf: 'node_modules/red5pro-video-js.swf',\n                useVideoJS: false,\n                buffer: 0.2,\n                swf: 'node_modules/red5pro-subscriber.swf',\n                swfobjectURL: 'node_modules/swfobject.js',\n                width: '100%',\n                height: '100%'\n\n            })\n            .then((player: any) => {\n                // `player` is the WebRTC Player instance.\n                // Invoke the play action.\n                // player.play();\n                this.player = player;\n\n                this.playerInitialized = true;\n            })\n            .catch((error: any) => {\n                // A fault occurred while trying to initialize and playback the stream.\n                console.error(error);\n            });\n            /* !web-stop */\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    player: any;\n\n    showVideoPreview(): void {\n\n        try {\n\n            // check if in full screen mode by looking at map visibility flag\n            if (!this.showMap) {\n                this.showMap = true;\n\n\n                /* !web-start */\n                this.playerWidth = '469px';\n                this.playerHeight = '264px';\n                this.right = '64px';\n                this.top = '115px';\n                this.zindex = '0';\n                this.onExitFullScreen();\n                this.player.stop();\n                this.showingVideo = false;\n                /* !web-stop */\n\n                return;\n            }\n\n            // Check if \n            if (this.showingVideo) {\n                this.showingVideo = false;\n\n                /* !web-start */\n                this.player.stop();\n                /* !web-stop */\n\n\n            } else {\n                this.showingVideo = true;\n\n\n                /* !web-start */\n                this.player.play();\n                /* !web-stop */\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    showFullScreen(): void {\n        \n        try {\n\n\n            /* !web-start */\n            this.playerWidth = '100%';\n            this.playerHeight = '100%';\n            this.right = '0px';\n            this.top = '0px';\n            this.zindex = '-1';\n            this.onFullScreen();\n            this.showMap = false;\n            /* !web-stop */\n        \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.VideoPlayer', [\n\n]).component('dsVideoPlayer', {\n    bindings: {\n        onFullScreen: '&',\n        onExitFullScreen: '&',\n        settings: '<',\n        sessionName: '<'\n    },\n    controller: VideoPlayer,\n    templateUrl: './app/components/videoPlayer/videoPlayer.html'\n});\n"],"sourceRoot":"/source/"}