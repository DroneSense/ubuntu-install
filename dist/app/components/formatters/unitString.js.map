{"version":3,"sources":["components/formatters/unitString.ts"],"names":[],"mappings":";;;;;;;YAEA;gBAWI,uBAAmB,QAAmB;oBAX1C,iBA+BC;oBApBsB,aAAQ,GAAR,QAAQ,CAAW;oBAClC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;wBACjB,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC;oBACpC,CAAC,EAAE,UAAC,QAAgB,EAAE,QAAgB;wBAElC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;4BACvB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;gCAC9B,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;4BACzB,CAAC;4BAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC;gCACjC,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC;4BACtB,CAAC;wBACL,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;gCAC9B,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;4BACvB,CAAC;4BAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC;gCACjC,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;4BACvB,CAAC;wBACL,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;gBAvBM,qBAAO,GAAkB;oBAC5B,QAAQ;iBACX,CAAC;gBAsBN,oBAAC;YAAD,CA/BA,AA+BC,IAAA;YAGD,oBAAe,OAAO,CAAC,MAAM,CAAC,2BAA2B,EAAE,EAE1D,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE;gBACzB,QAAQ,EAAE;oBACN,IAAI,EAAE,GAAG;oBACT,MAAM,EAAE,GAAG;iBACd;gBACD,UAAU,EAAE,aAAa;gBACzB,QAAQ,EAAE,iDAAiD;aAC9D,CAAC,EAAC","file":"components/formatters/unitString.js","sourcesContent":["import { User } from '@dronesense/model';\n\nclass UnitFormatter {\n\n    user: User;\n    format: string;\n\n    unit: string;\n\n    static $inject: Array<string> = [\n        '$scope'\n    ];\n\n    constructor(public bindings: ng.IScope) {\n        this.bindings.$watch(() => {\n            return this.user.UnitPreference;\n        }, (newValue: string, oldValue: string) => {\n\n            if (this.user.isMetric()) {\n                if (this.format === 'elevation') {\n                    this.unit = 'meters';\n                } else if (this.format === 'speed') {\n                    this.unit = 'm/s';\n                }\n            } else {\n                if (this.format === 'elevation') {\n                    this.unit = 'feet';\n                } else if (this.format === 'speed') {\n                    this.unit = 'ft/s';\n                }\n            }\n        });\n    }\n}\n\n// Register component with Angular\nexport default angular.module('DroneSense.Web.UnitString', [\n\n]).component('dsUnitString', {\n    bindings: {\n        user: '<',\n        format: '@'\n    },\n    controller: UnitFormatter,\n    template: ' <div class=\"input-unit\">{{ $ctrl.unit }}</div>'\n});\n"],"sourceRoot":"/source/"}