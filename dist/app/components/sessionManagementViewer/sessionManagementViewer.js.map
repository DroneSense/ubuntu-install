{"version":3,"sources":["components/sessionManagementViewer/sessionManagementViewer.ts"],"names":[],"mappings":";;;;;;;YAOA;gBAwBI,iCAAmB,QAAkC;oBAAlC,aAAQ,GAAR,QAAQ,CAA0B;oBAlBrD,0BAAqB,GAAY,KAAK,CAAC;oBAEvC,0BAAqB,GAAY,KAAK,CAAC;oBACvC,wBAAmB,GAAY,KAAK,CAAC;oBACrC,gBAAW,GAAY,KAAK,CAAC;oBAC7B,mBAAc,GAAY,KAAK,CAAC;oBAe5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC;oBACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC;oBAC1I,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,CAAC;oBAExD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC;wBACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC;wBACxD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBACpC,CAAC;oBAED,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,OAAwB;wBACzE,8BAA8B;oBAClC,CAAC,CAAC,CAAC;oBAEH,mFAAmF;oBAEnF,MAAM;gBACV,CAAC;gBAED,8CAAY,GAAZ,UAAa,OAAmB;oBAC5B,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;gBACvD,CAAC;gBAED,qDAAmB,GAAnB,UAAoB,OAAmB;oBACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACrB,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;oBACxD,CAAC;gBACL,CAAC;gBAED,4CAAU,GAAV;oBACI,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;gBAC9D,CAAC;gBAtCD,cAAc;gBACP,+BAAO,GAAkB;oBAC5B,QAAQ;iBACX,CAAC;gBAsCN,8BAAC;YAAD,CA7DA,AA6DC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,wCAAwC,EAAE,EAEvE,CAAC,CAAC,SAAS,CAAC,2BAA2B,EAAE;gBACtC,QAAQ,EAAE;oBACN,iBAAiB,EAAE,GAAG;oBACtB,aAAa,EAAE,GAAG;iBACrB;gBACD,UAAU,EAAE,uBAAuB;gBACnC,WAAW,EAAE,uEAAuE;aACvF,CAAC,EAAC","file":"components/sessionManagementViewer/sessionManagementViewer.js","sourcesContent":["import { SessionController } from '../flightControlViewer/sessionController';\nimport { MapSession, OwnerMapSession } from '../flightControlViewer/mapSession';\n\nexport interface ISessionManagementViewer extends ng.IScope {\n\n}\n\nclass SessionManagementViewer {\n\n    sessionController: SessionController;\n\n    ownerSession: OwnerMapSession;\n\n    showSessionManagement: boolean = false;\n\n    currentSessionVisible: boolean = false;\n    guestSessionVisible: boolean = false;\n    chatVisible: boolean = false;\n    waypointCollab: boolean = false;\n\n    name: string;\n\n    server: string;\n\n    owner: string;\n    color: string;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope'\n    ];\n    constructor(public bindings: ISessionManagementViewer) {\n\n        this.name = this.sessionController.activeSession.name;\n        this.server = this.sessionController.activeSession.serverConnection.ip + ':' + this.sessionController.activeSession.serverConnection.port;\n        this.color = this.sessionController.activeSession.color;\n\n        if (this.sessionController.ownerSession) {\n            this.ownerSession = this.sessionController.ownerSession;\n            this.currentSessionVisible = true;\n        } else {\n            this.guestSessionVisible = true;\n        }\n\n        this.sessionController.eventing.on('session-added', (session: OwnerMapSession) => {\n            //this.ownerSession = session;\n        });\n\n        // this.sessionController.eventing.on('session-changed', (session: MapSession) => {\n\n        // });\n    }\n\n    leaveSession(session: MapSession): void {\n        this.sessionController.removeGuestSession(session);\n    }\n\n    changeActiveSession(session: MapSession): void {\n        if (!this.ownerSession) {\n            this.sessionController.changeActiveSession(session);\n        }\n    }\n\n    endSession(): void {\n        this.sessionController.activeSession.session.endSession();\n    }\n\n\n}\n\nexport default angular.module('DroneSense.Web.SessionManagementViewer', [\n\n]).component('dsSessionManagementViewer', {\n    bindings: {\n        sessionController: '<',\n        onJoinSession: '&'\n    },\n    controller: SessionManagementViewer,\n    templateUrl: './app/components/sessionManagementViewer/sessionManagementViewer.html'\n});\n"],"sourceRoot":"/source/"}