{"version":3,"sources":["components/sessionCard/sessionCard.ts"],"names":[],"mappings":";;;;;;;;;;;YAMA;gBAwBI,qBAAmB,QAAsB,EACtB,YAAsC,EACtC,QAAqC,EACrC,EAAO;oBAHP,aAAQ,GAAR,QAAQ,CAAc;oBACtB,iBAAY,GAAZ,YAAY,CAA0B;oBACtC,aAAQ,GAAR,QAAQ,CAA6B;oBACrC,OAAE,GAAF,EAAE,CAAK;oBAjB1B,gBAAW,GAAW,OAAO,CAAC;oBAC9B,iBAAY,GAAW,OAAO,CAAC;oBAC/B,QAAG,GAAW,OAAO,CAAC;oBACtB,UAAK,GAAW,MAAM,CAAC;oBACvB,WAAM,GAAW,GAAG,CAAC;gBAerB,CAAC;gBAED,6BAAO,GAAP;oBAAA,iBAuCC;oBAtCG,IAAI,CAAC;wBAED,gBAAgB;wBAChB,oDAAoD;wBACpD,IAAI,CAAC,WAAW,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;wBAEhE,qDAAqD;wBACrD,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,cAAc,EAAE,CAAC;wBAClD,qCAAqC;wBACrC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAEnD,aAAa;wBACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;4BACjB,QAAQ,EAAE,MAAM;4BAChB,IAAI,EAAE,eAAe;4BACrB,IAAI,EAAE,IAAI;4BACV,GAAG,EAAE,MAAM;4BACX,mBAAmB;4BACnB,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;4BACvD,QAAQ,EAAE,UAAU;4BACpB,GAAG,EAAE,mCAAmC;4BACxC,UAAU,EAAE,IAAI;yBACnB,CAAC;6BACD,IAAI,CAAC,UAAC,MAAW;4BACd,0CAA0C;4BAC1C,0BAA0B;4BAC1B,gBAAgB;4BAChB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;wBACzB,CAAC,CAAC;6BACD,KAAK,CAAC,UAAC,KAAU;4BACd,uEAAuE;4BACvE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACzB,CAAC,CAAC,CAAC;oBAGP,CAAE;oBAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC;gBACL,CAAC;gBAED,gCAAU,GAAV;gBAEA,CAAC;gBAED,iCAAW,GAAX;oBACI,IAAI,CAAC;wBAED,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBAEvB,CAAE;oBAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC;gBACL,CAAC;gBAED,+BAAS,GAAT;oBACI,MAAM,CAAC,IAAI,CAAC,qEAAqE,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACnH,CAAC;gBAxED,cAAc;gBACP,mBAAO,GAAkB;oBAC5B,QAAQ;oBACR,QAAQ;oBACR,WAAW;oBACX,IAAI;iBACP,CAAC;gBAmEN,kBAAC;YAAD,CAzFA,AAyFC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,4BAA4B,EAAE;gBACxD,oBAAU,CAAC,IAAI;aAClB,CAAC,CAAC,SAAS,CAAC,eAAe,EAAE;gBAC1B,QAAQ,EAAE;oBACN,OAAO,EAAE,GAAG;iBACf;gBACD,UAAU,EAAE,WAAW;gBACvB,WAAW,EAAE,+CAA+C;aAC/D,CAAC,EAAC","file":"components/sessionCard/sessionCard.js","sourcesContent":["import UserAvatar from '../userAvatar/userAvatar';\nimport { RedProStream } from '../../services/redProService';\n\nexport interface ISessionCard extends ng.IScope {\n}\n\nclass SessionCard {\n\n    session: RedProStream;\n\n    videoViewer: any;\n\n    subscriber: any;\n\n    player: any;\n\n    playerWidth: string = '469px';\n    playerHeight: string = '264px';\n    top: string = '115px';\n    right: string = '64px';\n    zindex: string = '0';\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        '$mdDialog',\n        'db'\n    ];\n\n    constructor(public bindings: ISessionCard,\n                public stateService: angular.ui.IStateService,\n                public mdDialog: ng.material.MDDialogService,\n                public db: any) {\n\n    }\n\n    $onInit(): void {\n        try {\n\n            /* !web-start */\n            // Create a view instance based on video element id.\n            this.videoViewer = new red5prosdk.PlaybackView('red5pro-video');\n\n            // Create a new instance of the Flash/RTMP subcriber.\n            this.subscriber = new red5prosdk.RTMPSubscriber();\n            // Attach the subscriber to the view.\n            this.videoViewer.attachSubscriber(this.subscriber);\n\n            // Initialize\n            this.subscriber.init({\n                protocol: 'rtmp',\n                host: '192.168.0.115',\n                port: 1935,\n                app: 'live',\n                //context: 'room1',\n                streamName: this.session.publish_name.replace(' ', '-'),\n                mimeType: 'rtmp/flv',\n                swf: 'node_modules/red5pro-video-js.swf',\n                useVideoJS: true\n            })\n            .then((player: any) => {\n                // `player` is the WebRTC Player instance.\n                // Invoke the play action.\n                //player.play();\n                this.player = player;\n            })\n            .catch((error: any) => {\n                // A fault occurred while trying to initialize and playback the stream.\n                console.error(error);\n            });\n            /* !web-stop */\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    $onDestroy(): void {\n\n    }\n\n    showPreview(): void {\n        try {\n\n            this.player.play();\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    showVideo(): void {\n        window.open('http://192.168.0.115:5080/live/flash.jsp?host=192.168.0.115&stream=' + this.session.publish_name);\n    }\n}\n\nexport default angular.module('DroneSense.Web.SessionCard', [\n    UserAvatar.name\n]).component('dsSessionCard', {\n    bindings: {\n        session: '<'\n    },\n    controller: SessionCard,\n    templateUrl: './app/components/sessionCard/sessionCard.html'\n});\n"],"sourceRoot":"/source/"}