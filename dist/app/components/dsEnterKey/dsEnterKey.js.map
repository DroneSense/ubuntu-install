{"version":3,"sources":["components/dsEnterKey/dsEnterKey.ts"],"names":[],"mappings":";;;;;;;YACA;gBAOI;oBAHA,aAAQ,GAAW,GAAG,CAAC;oBACvB,UAAK,GAAY,KAAK,CAAC;oBAGnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5C,CAAC;gBAED,uCAAW,GAAX,UAAY,KAAqB,EAAE,OAAY,EAAE,UAAe;oBAC5D,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAS,KAAU;wBAChD,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;4BACrB,KAAK,CAAC,MAAM,CAAC;gCACT,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;4BACrC,CAAC,CAAC,CAAC;4BAEH,KAAK,CAAC,cAAc,EAAE,CAAC;4BAEvB,OAAO,CAAC,IAAI,EAAE,CAAC;wBACnB,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEM,0BAAQ,GAAf;oBAEI,IAAI,SAAS,GAA8B,cAAM,OAAA,IAAI,iBAAiB,EAAE,EAAvB,CAAuB,CAAC;oBACzE,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;oBACvB,MAAM,CAAC,SAAS,CAAC;gBACrB,CAAC;gBAEL,wBAAC;YAAD,CAhCA,AAgCC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,yBAAyB,EAAE,EAExD,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,iBAAiB,CAAC,QAAQ,EAAE,CAAC,EAAC","file":"components/dsEnterKey/dsEnterKey.js","sourcesContent":["\nclass KeyEnterDirective implements angular.IDirective {\n\n    public link: angular.IDirectiveLinkFn;\n\n    restrict: string = 'A';\n    scope: boolean = false;\n\n    constructor() {\n        this.link = this.unboundLink.bind(this);\n    }\n\n    unboundLink(scope: angular.IScope, element: any, attributes: any): any {\n        element.bind('keydown keypress', function(event: any): void {\n            if (event.which === 13) {\n                scope.$apply(function (): void {\n                    scope.$eval(attributes.keyEnter);\n                });\n\n                event.preventDefault();\n\n                element.blur();\n            }\n        });\n    }\n\n    static instance(): angular.IDirectiveFactory {\n\n        var directive: angular.IDirectiveFactory = () => new KeyEnterDirective();\n        directive.$inject = [];\n        return directive;\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.KeyEnter', [\n    \n]).directive('keyEnter', KeyEnterDirective.instance());\n"],"sourceRoot":"/source/"}