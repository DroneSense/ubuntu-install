{"version":3,"sources":["components/manageViewer/manageViewer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;YASA;gBAeI,sBACW,QAAuB,EACvB,YAAsC,EACtC,WAAyB;oBAlBxC,iBAoEC;oBApDc,aAAQ,GAAR,QAAQ,CAAe;oBACvB,iBAAY,GAAZ,YAAY,CAA0B;oBACtC,gBAAW,GAAX,WAAW,CAAc;oBAEhC,IAAI,CAAC,YAAY,EAAE,CAAC;oBAEpB,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAU;wBAClC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;wBAEjB,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAC,OAAgB;4BAClD,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;wBAClC,CAAC,CAAC,CAAC;oBAEP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;wBACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;oBAEH,0CAA0C;oBAC1C,mCAAmC;oBACnC,MAAM;gBACV,CAAC;gBAED,kCAAkC;gBAClC,mCAAY,GAAZ;oBAEI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,iBAAiB,CAAC,CAAC,CAAC;wBACvD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,oBAAoB,CAAC,CAAC,CAAC;wBACjE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,iBAAiB,CAAC,CAAC,CAAC;wBAC9D,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACzB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC;wBAC7D,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;oBAC1B,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC;wBAC7D,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;oBAC1B,CAAC;gBACL,CAAC;gBAED,sDAAsD;gBACtD,2BAAI,GAAJ,UAAK,KAAa;oBACd,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAChC,CAAC;gBAED,kCAAW,GAAX;oBACI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAChC,CAAC;gBAED,8BAAO,GAAP;oBACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBAC7B,CAAC;gBA1DD,cAAc;gBACP,oBAAO,GAAkB;oBAC5B,QAAQ;oBACR,QAAQ;oBACR,aAAa;iBAChB,CAAC;gBAuDN,mBAAC;YAAD,CApEA,AAoEC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE;gBACzD,yBAAS,CAAC,IAAI;gBACd,oBAAQ,CAAC,IAAI;aAChB,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE;gBACrB,QAAQ,EAAE,EACT;gBACD,UAAU,EAAE,YAAY;gBACxB,WAAW,EAAE,iDAAiD;aACjE,CAAC,EAAC","file":"components/manageViewer/manageViewer.js","sourcesContent":["import dashboard from '../dashboardViewer/dashboardViewer';\n\nimport lazyShow from '../../common/ngLazyShow';\nimport { User, Account } from '@dronesense/model';\nimport { IDataService } from '../../services/dataService';\n\nexport interface IManageViewer extends ng.IScope {\n}\n\nclass ManageViewer {\n\n    selectedTab: number;\n\n    user: User;\n\n    currentAccount: Account;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        'dataService'\n    ];\n\n    constructor(\n        public bindings: IManageViewer,\n        public stateService: angular.ui.IStateService,\n        public dataService: IDataService) {\n        \n        this.setActiveTab();\n\n        dataService.getUser().then((user: User) => {\n            this.user = user;\n\n            dataService.getCurrentAccount().then((account: Account) => {\n                this.currentAccount = account;\n            });\n\n        }).catch((error): void => {\n            console.log(error);\n        });\n\n        // this.user.ModelUpdated.on((): void => {\n        //     this.bindings.$applyAsync();\n        // });\n    }\n\n    // Set the active tab based on URL\n    setActiveTab(): void {\n        \n        if (this.stateService.current.name === 'manage.sessions') {\n            this.selectedTab = 1;\n        } else if (this.stateService.current.name === 'manage.flightplans') {\n            this.selectedTab = 2;\n        } else if (this.stateService.current.name === 'manage.hardware') {\n            this.selectedTab = 3;\n        } else if (this.stateService.current.name === 'manage.profile') {\n            this.selectedTab = -1;\n        } else if (this.stateService.current.name === 'manage.account') {\n            this.selectedTab = -1;\n        }\n    }\n\n    // Transition to new state defined in the app.ts file.\n    goTo(state: string): void {\n        this.stateService.go(state);\n    }\n\n    loadProfile(): void {\n        console.log('load profile');\n    }\n\n    signOut(): void {\n        this.dataService.logout();\n        this.dataService.login();\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.ManageViewer', [\n    dashboard.name,\n    lazyShow.name\n]).component('dsManage', {\n    bindings: {\n    },\n    controller: ManageViewer,\n    templateUrl: './app/components/manageViewer/manageViewer.html'\n});\n\n"],"sourceRoot":"/source/"}