{"version":3,"sources":["components/commandViewer/commandViewer.ts"],"names":[],"mappings":"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","file":"components/commandViewer/commandViewer.js","sourcesContent":["import { Command } from '@dronesense/model';\nimport { IUIStateService } from '../../services/uiStateService';\n\nimport { WaypointCommand, SensorCaptureCommand, TakeoffCommand } from '@dronesense/model';\n\nimport WaypointCommandInstance from '../tools/waypointTool/waypointCommandInstance';\nimport SensorCommandInstance from '../tools/sensorCaptureTool/sensorCaptureToolInstance';\n\nimport BnRepeatSwitch from '../../common/dsRepeatSwitch';\n\nexport interface ICommandViewer extends ng.IScope {\n    flightPlanId: string;\n    map: Cesium.Viewer;\n}\n\nclass CommandViewer {\n\n    // Passed in flight plan id\n    flightPlanId: string;\n\n    // The flight plan model object\n    commands: Array<Command>;\n\n    // Handle to current flight plan\n    commandsHandle: any;\n\n    uiStateService: IUIStateService;\n\n    map: Cesium.Viewer;\n\n    // Id of currently tracked command entity\n    trackedEntityId: string;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'db'\n    ];\n\n    constructor(public bindings: ICommandViewer,\n                public db: any) {\n\n        // Initialize command array\n        this.commands = [];\n\n        // Load flight plan\n        this.loadCommands();\n\n        try {\n\n            this.map.entities.add({\n                name: 'Flight Path',\n                polyline: {\n                    // TODO - move to static property and manually trigger the redraw for trigger changes.\n                    positions: new Cesium.CallbackProperty( (): any => {\n\n                        //console.log('command viewer property callback');\n\n                        var degreesArray: Array<Cesium.Cartesian3> = [];\n\n                        this.commands.forEach((command: Command): void => {\n                            degreesArray.push(Cesium.Cartesian3.fromDegrees((<WaypointCommand>command).Position.lng, (<WaypointCommand>command).Position.lat, (<WaypointCommand>command).AltitudeHAE));\n                        });\n\n                        return degreesArray;\n\n                    }, false),\n                    width: 2,\n                    material: Cesium.Color.fromCssColorString('#07eae4')\n                }//,\n                // wall: {\n                //     positions: new Cesium.CallbackProperty( (): any => {\n\n                //         var degreesArray: Array<Cesium.Cartesian3> = [];\n\n                //         this.commands.forEach((command: Command): void => {\n                //             degreesArray.push(Cesium.Cartesian3.fromDegrees((<WaypointCommand>command).Position.lng, (<WaypointCommand>command).Position.lat, (<WaypointCommand>command).AltitudeHAE));\n                //         });\n\n                //         return degreesArray;\n\n                //     }, false) ,\n                //     material: Cesium.Color.fromBytes(10, 146, 234, 100)\n                // }\n            });\n\n        } catch (exception) {\n            console.log(exception);\n        }\n    }\n\n    loadCommands(): void {\n\n        // Load all commands and add to UI\n        this.commandsHandle = this.db.commands.getCommandsForFlightPlanWithId(this.flightPlanId);\n\n        this.commandsHandle.on(this.commandsHandle.EVENTS.LIST_CHANGED, (data: any): void => {\n\n            // Handle inbound command list change\n            this.HandleListChanged(data);\n\n        });\n\n    }\n\n    // Handles any firebase callbacks that the commands list has been updated by a reorder, add or delete\n    HandleListChanged(data: any): void {\n\n        // first check for delete by comparing length\n        if (data.length < this.commands.length) {\n\n            var deleteList: Array<Command> = [];\n\n            this.commands.forEach((command: Command): void => {\n                if (_.findIndex(data, (handle: any): boolean => {\n                        return command.handle.id === handle.id;\n                    }) === -1) {\n                    deleteList.push(command);\n                }\n            });\n\n            deleteList.forEach((command: Command): void => {\n                this.DeleteCommand(command);\n            });\n\n            // Reorder as necessary\n            this.SetCommandOrderDB();\n\n            return;\n        }\n\n        // figure out if it is a add, delete, re-order\n        data.forEach((handle: any, index: number): void => {\n            var position: number = _.findIndex(this.commands, (command: Command): boolean => {\n                return command.handle.id === handle.id;\n            });\n\n            // add if it doesn't exist in command\n            if (position === -1) {\n                this.AddCommand(handle);\n                return;\n            }\n\n            // check if index has changed\n            if (index !== position) {\n                this.MoveCommand(position, index);\n            }\n        });\n\n        // Reorder as necessary\n        this.SetCommandOrderDB();\n    }\n\n    // Add command from database callback event\n    AddCommand(data: any): void {\n\n        var command: Command;\n\n        switch (data.handle.data.type.toLowerCase()) {\n            case 'takeoff':\n\n                //command = new TakeoffCommand(data.id, data.handle);\n\n                break;\n            case 'waypoint':\n\n                command = new WaypointCommand('waypoint', data.id, data.handle, false);\n\n                break;\n            case 'sensor':\n\n                command = new SensorCaptureCommand('sensor', data.id, data.handle, false);\n\n                break;\n            case 'survey':\n\n                //command = new SurveyCommandView(data.id, data.handle);\n\n                break;\n            case 'poi':\n                //command = new OrbitCommand(data.id, data.handle);\n\n                break;\n            default:\n                break;\n        }\n\n        var newIndex: number = this.commands.push(command);\n\n        this.bindings.$applyAsync();\n\n        // Make sure to add takeoff at index 0\n        if (command.Type.toLowerCase() === 'takeoff') {\n\n            if (newIndex - 1 > 0) {\n                //this.commandsHandle.moveCommandWithIdBeforeCommandWithId(command.id, this.commands[0].id);\n            }\n        }\n    }\n\n    // Delete command from database callback event\n    DeleteCommand(command: Command): void {\n\n        // Unwire events\n        command.RemoveHandle();\n\n        // TODO - Review where this belongs for survey command\n        //if (command.Type.toLowerCase() === 'survey') {\n        //    // call delete on survey data service for command\n        //    this.surveyDataService.deleteSurveyData(this.surveyDataService.getSurveyDataById(command.Uid));\n        //    this.map.removeLayer(command.MasterLayer);\n        //}\n\n        var index: number = _.findIndex(this.commands, (com: any): boolean => {\n            return command.handle.id === com.id;\n        });\n\n        if (index === -1) {\n            throw 'Command not found for delete.';\n        }\n\n        this.commands.splice(index, 1);\n\n        // TODO - how to remove from map here\n        //this.map.removeLayer(command.MapLayer.layer);\n\n        // command.ModelUpdated.off((): void => {\n        // });\n\n        // Call apply to update list\n        this.bindings.$applyAsync();\n\n    }\n\n    // Handle command reorder database callback\n    MoveCommand(oldIndex: number, newIndex: number): void {\n        while (oldIndex < 0) {\n            oldIndex += this.commands.length;\n        }\n        while (newIndex < 0) {\n            newIndex += this.commands.length;\n        }\n        if (newIndex >= this.commands.length) {\n            var k: number = newIndex - this.commands.length;\n            while ((k--) + 1) {\n                this.commands.push(undefined);\n            }\n        }\n        this.commands.splice(newIndex, 0, this.commands.splice(oldIndex, 1)[0]);\n\n    }\n\n    // Update command order property after add, delete or move\n    SetCommandOrderDB(): void {\n\n        this.commands.forEach((cv: Command, index: number): void => {\n            //cv.Command.Order = index + 1;\n            cv.SaveOrder(index + 1);\n        });\n\n        // TODO - Figure out high level redraw\n        //this.GenerateVisualFlightPath();\n    }\n\n    reorderCommands(): void {\n\n    }\n\n    // Trigger Delete command in DB\n    DeleteCommandDB(id: string): void {\n        this.db.commands.deleteCommandWithIdFromFlightPlanWithId(id, this.flightPlanId);\n    }\n\n    // Manages what command entity is currently tracked\n    TrackEntity(id: string): void {\n\n        // first check to see if current tracked entity is requesting to be turned off\n        if (this.trackedEntityId === id) {\n            this.map.trackedEntity = undefined;\n            this.trackedEntityId = undefined;\n            return;\n        }\n\n        this.map.trackedEntity = this.map.entities.getById(id);\n        this.trackedEntityId = id;\n    }\n}\n\nexport default angular.module('DroneSense.Web.CommandViewer', [\n    BnRepeatSwitch.name,\n    WaypointCommandInstance.name,\n    SensorCommandInstance.name\n]).component('dsCommandViewer', {\n    transclude: true,\n    bindings: {\n        flightPlanId: '<',\n        map: '<',\n        user: '<',\n        camera: '<',\n        settings: '<'\n    },\n    controller: CommandViewer,\n    templateUrl: './app/components/commandViewer/commandViewer.html'\n});\n\n"],"sourceRoot":"/source/"}