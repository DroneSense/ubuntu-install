{"version":3,"sources":["components/flightPlanCardDetail/flightPlanCardDetail.ts"],"names":[],"mappings":";;;;;;;YAMA;gBAyBI,8BAAmB,QAA+B,EAC/B,YAAsC,EACtC,WAAyB;oBACpC,8CAA8C;oBA5B1D,iBAyEC;oBAhDsB,aAAQ,GAAR,QAAQ,CAAuB;oBAC/B,iBAAY,GAAZ,YAAY,CAA0B;oBACtC,gBAAW,GAAX,WAAW,CAAc;oBAzB5C,eAAU,GAAY,IAAI,CAAC;oBAM3B,WAAM,GAAgB,EAAE,CAAC;oBAIzB,cAAS,GAAY,KAAK,CAAC;oBAkBnB,qDAAqD;oBACrD,gCAAgC;oBAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBAEvB,CAAC;oBAED,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC,UAAC,IAAgB;wBAC9D,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAC,OAAgB;wBACvD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBAG3B,CAAC,CAAC,CAAC;gBACX,CAAC;gBAED,wCAAS,GAAT,UAAU,IAAY;oBACpB,IAAI,OAAO,GAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC5E,MAAM,CAAC,OAAO,CAAC;gBACjB,CAAC;gBAED,8CAAe,GAAf,UAAgB,IAAY;oBAC1B,IAAI,cAAc,GAAW,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBAErD,MAAM,CAAC,kBAAkB,GAAQ;wBAC/B,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;oBAChE,CAAC,CAAC;gBAEJ,CAAC;gBAED,oCAAK,GAAL;gBAEA,CAAC;gBAED,kCAAG,GAAH;oBACI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBACpC,CAAC;gBAED,mCAAI,GAAJ;oBACI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;gBACvC,CAAC;gBArDD,cAAc;gBACP,4BAAO,GAAkB;oBAC5B,QAAQ;oBACR,QAAQ;oBACR,aAAa;iBAChB,CAAC;gBAkDN,2BAAC;YAAD,CAzEA,AAyEC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,qCAAqC,EAAE,EAEpE,CAAC,CAAC,SAAS,CAAC,wBAAwB,EAAE;gBACnC,QAAQ,EAAE;oBACN,UAAU,EAAE,GAAG;iBAClB;gBACD,UAAU,EAAE,oBAAoB;gBAChC,WAAW,EAAE,iEAAiE;aACjF,CAAC,EAAC","file":"components/flightPlanCardDetail/flightPlanCardDetail.js","sourcesContent":["import { FlightPlan, Account, User, Tag } from '@dronesense/model';\nimport { IDataService } from '../../services/dataService';\n\nexport interface IFlightPlanCardDetail extends ng.IScope {\n}\n\nclass FlightPlanCardDetail {\n\n    flightInfo: boolean = true;\n\n    flightPlan: FlightPlan;\n\n    account: Account;\n\n    owners: Array<User> = [];\n\n    tags: Array<Tag>;\n\n    editNotes: boolean = false;\n\n    tagSearchText: string;\n\n    tagSelectedSearch: any;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        'dataService'\n    ];\n\n    constructor(public bindings: IFlightPlanCardDetail,\n                public stateService: angular.ui.IStateService,\n                public dataService: IDataService) {\n            // TODO: retrieve flight plan from dataService\n\n            // Check to see if a flight plan has been passed in, \n            // else load it from dataService\n            if (!this.flightPlan) {\n                //this.flightPlan = this.dataService.getFlightPlan(id);\n            }\n\n            this.dataService.getAccountFlightPlanTags().then((tags: Array<Tag>): void => {\n                this.tags = tags;\n            });\n\n            this.dataService.getCurrentAccount().then((account: Account): void => {\n                this.account = account;\n\n\n            });\n    }\n\n    tagSearch(text: string): void {\n      let results: any = text ? this.tags.filter(this.createFilterFor(text)) : [];\n      return results;\n    }\n\n    createFilterFor(text: string): any {\n      var lowercaseQuery: string = angular.lowercase(text);\n\n      return function filterFn(tag: Tag): boolean {\n        return (tag.Name.toLowerCase().indexOf(lowercaseQuery) === 0);\n      };\n\n    }\n\n    close(): void {\n\n    }\n\n    fly(): void {\n        this.stateService.go('control');\n    }\n\n    plan(): void {\n        this.stateService.go('flightplan');\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.FlightPlanCardDetail', [\n\n]).component('dsFlightPlanCardDetail', {\n    bindings: {\n        flightPlan: '<'\n    },\n    controller: FlightPlanCardDetail,\n    templateUrl: './app/components/flightPlanCardDetail/FlightPlanCardDetail.html'\n});\n"],"sourceRoot":"/source/"}