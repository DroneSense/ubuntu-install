{"version":3,"sources":["components/accountViewer/accountViewer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;YAOA;gBAiBI,uBACW,QAAwB,EACxB,YAAsC,EACtC,WAAyB;oBApBxC,iBAsCC;oBApBc,aAAQ,GAAR,QAAQ,CAAgB;oBACxB,iBAAY,GAAZ,YAAY,CAA0B;oBACtC,gBAAW,GAAX,WAAW,CAAc;oBAhBpC,mBAAc,GAAY,KAAK,CAAC;oBAEhC,cAAS,GAAQ,uBAAU,CAAC,SAAS,CAAC;oBAEtC,WAAM,GAAQ,uBAAU,CAAC,MAAM,CAAC;oBAc5B,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAC,OAAgB;wBAClD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,4CAAoB,GAApB;oBACI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;wBACtB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;oBACxD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,eAAO,EAAE,CAAC;oBAC7C,CAAC;gBACL,CAAC;gBAED,4BAAI,GAAJ,UAAK,KAAa;oBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvB,CAAC;gBA3BD,cAAc;gBACP,qBAAO,GAAkB;oBAC5B,QAAQ;oBACR,QAAQ;oBACR,aAAa;iBAChB,CAAC;gBAuBN,oBAAC;YAAD,CAtCA,AAsCC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAE7D,CAAC,CAAC,SAAS,CAAC,iBAAiB,EAAE;gBAC5B,QAAQ,EAAE,EACT;gBACD,UAAU,EAAE,aAAa;gBACzB,WAAW,EAAE,mDAAmD;aACnE,CAAC,EAAC","file":"components/accountViewer/accountViewer.js","sourcesContent":["import { IDataService } from '../../services/dataService';\nimport { Account, Address } from '@dronesense/model';\nimport { CommonData } from '../../services/commonData';\n\nexport interface IAccountViewer extends ng.IScope {\n}\n\nclass AccountViewer {\n\n    account: Account;\n\n    useMailForBill: boolean = false;\n\n    countries: any = CommonData.countries;\n\n    states: any = CommonData.states;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        'dataService'\n    ];\n\n    constructor(\n        public bindings: IAccountViewer,\n        public stateService: angular.ui.IStateService,\n        public dataService: IDataService) {\n\n        dataService.getCurrentAccount().then((account: Account) => {\n            this.account = account;\n        });\n    }\n\n    setOrClearMailToBill(): void {\n        if (this.useMailForBill) {\n            this.account.BillAddress = this.account.MailAddress;\n        } else {\n            this.account.BillAddress = new Address();\n        }\n    }\n\n    test(value: string): void {\n        console.log(value);\n    }\n}\n\nexport default angular.module('DroneSense.Web.AccountViewer', [\n\n]).component('dsAccountViewer', {\n    bindings: {\n    },\n    controller: AccountViewer,\n    templateUrl: './app/components/accountViewer/accountViewer.html'\n});\n"],"sourceRoot":"/source/"}