{"version":3,"sources":["components/flightControlViewer/flightControlViewer.ts"],"names":[],"mappings":"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","file":"components/flightControlViewer/flightControlViewer.js","sourcesContent":["\nimport ControlToolbar from '../controlToolbar/controlToolbar';\nimport ControlTelemetry from '../controlTelemetry/controlTelemetry';\nimport ISession from '@dronesense/core/lib/common/ISession';\nimport ControlConnect from '../controlConnect/controlConnect';\nimport StartSession from '../startSession/startSession';\nimport JoinSession from '../joinSession/joinSession';\nimport ServerConnection from './serverConnection';\nimport { SessionController } from './sessionController';\nimport { MapSession } from './mapSession';\nimport { OwnerMapSession } from './ownerMapSession';\nimport FlightControlMode from '../flightControlMode/flightControlMode';\nimport { MapMode } from './mapMode';\nimport BackboneEvents from 'backbone-events-standalone';\nimport SessionManagementViewer from '../sessionManagementViewer/sessionManagementViewer';\nimport WaypointListViewer from '../waypointListViewer/waypointListViewer';\nimport MayLayers from '../mapLayers/mapLayers';\nimport { FlightControlSettings } from './flightControlSettings';\nimport VideoPlayer from '../videoPlayer/videoPlayer';\nimport MultiVideoPlayer from '../multiVideoPlayer/multiVideoPlayer';\nimport { IEventEmitter } from '@dronesense/core/lib/common/IEventEmitter';\n\nexport interface IFlightControlViewerEvents extends IEventEmitter {\n    on(eventName: string, callback?: Function, context?: any): any;\n    on(eventName: 'locating-drone', callback?: (username: string) => void, context?: any): any;\n    on(eventName: 'drone-located', callback?: (username: string) => void, context?: any): any;\n    on(eventName: 'guest-connect-request', callback?: (username: string, cb: (accepted: boolean) => {} ) => void, context?: any): any;\n    on(eventName: 'session-added', callback?: (session: OwnerMapSession) => void, context?: any): any;\n    on(eventName: 'session-removed', callback?: (session: MapSession) => void, context?: any): any;\n    on(eventName: 'map-loaded', callback?: () => void, context?: any): any;\n    on(eventName: 'session-changed', callback?: (session: MapSession) => void, context?: any): any;\n    on(eventName: 'server-disconnected', callback?: (serverConnection: ServerConnection) => void, context?: any): any;\n    on(eventName: 'waypoint-error', callback?: (name: string) => void, context?: any): any;\n}\n\nexport class FlightControlViewerEventing implements IFlightControlViewerEvents {\n    \n    on: (eventName: string, callback?: Function, context?: any) => any;\n    once: (events: string, callback: Function, context?: any) => any;\n    off: (eventName?: string, callback?: Function, context?: any) => any;\n    trigger: (eventName: string, ...args: any[]) => any;\n\n    constructor() {\n\n    }\n}\n\nBackboneEvents.mixin(FlightControlViewerEventing.prototype);\n\nexport interface IFlightControlViewer extends ng.IScope {\n    map: Cesium.Viewer;\n}\n\nclass FlightControlViewer {\n    \n    // List of server that are currently connected\n    connectedServers: Array<ServerConnection> = [];\n\n    // Current server connection to use for dialogs\n    currentServerConnection: ServerConnection;\n\n    // Flag to pass to controller connect component\n    newFlightSession: boolean;\n\n    // Flag to indicate if a guest user request has been made and \n    // show the dialog\n    guestUserRequest: boolean = false;\n\n    // Username of the guest join request\n    guestUserRequestName: string;\n\n    // Session controller manages all sessions\n    sessionController: SessionController;\n\n    // eventing object for UI messages from objects\n    eventing: FlightControlViewerEventing;\n\n    // Save callback from guest request\n    guestRequestCallback: any;\n\n    // Dialog to show while drone is being locating\n    locatingDroneDialog: boolean = false;\n\n    // Flag to hide connect buttons\n    hideButtons: boolean = false;\n\n    flightControlSettings: FlightControlSettings;\n\n    hasLoadedMap: boolean = false;\n\n    hideBackground: boolean = false;\n\n    lockCamera: boolean = true;\n\n    firstSessionLoaded: boolean = false;\n\n    serverDisconnect: boolean = false;\n\n    waypointError: boolean = false;\n    waypointErrorName: string = '';\n\n    showMap: boolean = true;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        '$mdDialog',\n        '$log'\n    ];\n\n    constructor(\n        public bindings: IFlightControlViewer,\n        public stateService: angular.ui.IStateService,\n        public mdDialog: angular.material.MDDialogService,\n        public $log: angular.ILogService) {\n\n    }\n\n    $onInit(): void {\n\n        // Create new for now, eventually load from profile\n        this.flightControlSettings = new FlightControlSettings();\n\n        this.eventing = new FlightControlViewerEventing();\n\n        this.sessionController = new SessionController(this.eventing, this.$log);\n        \n        this.eventing.on('locating-drone', () => {\n            this.locatingDroneDialog = true;\n            this.bindings.$applyAsync();\n        });\n\n        this.eventing.on('drone-located', () => {\n            this.locatingDroneDialog = false;\n\n            this.firstSessionLoaded = true;\n\n            this.initCamera();\n\n            this.bindings.$applyAsync();\n        });\n\n        this.eventing.on('guest-connect-request', (username: string, cb: any) => {\n            \n            // Set call so we can call from dialog return\n            this.guestRequestCallback = cb; \n            \n            // Set username\n            this.guestUserRequestName = username;\n\n            // Show dialog\n            this.guestUserRequest = true;\n            \n            // Update user interface\n            this.bindings.$applyAsync();\n\n            this.$log.log({ message: 'Guest connect request from ' + username });\n        });\n\n        this.eventing.on('server-disconnected', (serverConnection: ServerConnection) => {\n            \n            if (this.sessionController.ownerSession) {\n                this.serverDisconnect = true;\n                \n                // Update user interface\n                this.bindings.$applyAsync();\n            }\n\n            // Add to active connections if does not already exist.\n            if (this.connectedServers.filter((connection: ServerConnection) => {\n                if (connection.ip === serverConnection.ip && connection.port === serverConnection.port) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }).length === 1) {\n                this.connectedServers.splice(this.connectedServers.indexOf(serverConnection), 1);\n            };\n            \n            this.$log.log({ message: 'Server Disconnected' });\n        });\n\n        // Only wire up to event if ownerSession\n        if (this.sessionController.ownerSession) {\n            this.eventing.on('waypoint-error', (name: string) => {\n                this.waypointError = true;\n                this.waypointErrorName = name;\n                this.$log.error({ message: 'Waypoint Error', name: name });\n            });\n        }\n    }\n\n    // Start new flight button clicked on main screen\n    startNewFlight(): void {\n        // Get local server connection settings\n        this.getServerSettings(true);\n\n        this.$log.log({ message: 'Start New Flight' });\n    }\n\n    // Join existing flight button clicked on main screen\n    joinExistingFlight(serverConnection: ServerConnection): void {\n        // Get local server connection settings\n        this.getServerSettings(false);\n\n        this.$log.log({ message: 'Join Existing Flight' });\n    }\n\n    // Launch the control connect dialog to get the connection\n    getServerSettings(newFlight: boolean): void {\n        \n        // set flag if this is a new session request or a join\n        this.newFlightSession = newFlight;\n\n        // Launch dialog\n        this.mdDialog.show({\n            template: '<ds-control-connect new-flight-session=\"$ctrl.newFlightSession\" connected-servers=\"$ctrl.connectedServers\" on-connect=\"$ctrl.controllerConnected(serverConnection, useExisting);\" on-cancel=\"$ctrl.cancelDialog()\"></ds-control-connect>',\n            scope: this.bindings,\n            preserveScope: true,\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: true\n        });\n    }\n\n    // Connection has been made and passed back\n    controllerConnected(serverConnection: ServerConnection, useExisting: boolean): void {\n           \n        // Close connection dialog\n        this.mdDialog.hide();\n        \n        // Check if user is using an existing connection or a new one\n        // if (!useExisting) {\n        //     this.connectedServers.push(serverConnection);\n        // }\n\n        // Add to active connections if does not already exist.\n        if (this.connectedServers.filter((connection: ServerConnection) => {\n            if (connection.ip === serverConnection.ip && connection.port === serverConnection.port) {\n                return true;\n            } else {\n                return false;\n            }\n        }).length === 0) {\n            serverConnection.eventing = this.eventing;\n            this.connectedServers.push(serverConnection);\n        };\n        \n        // check if this is a new flight or join exisitng session\n        if (this.newFlightSession) {\n            this.getNewSession(serverConnection);\n        } else {\n            this.joinExistingSession(serverConnection);\n        }\n        \n    }\n\n    // Launch start new flight dialog and get the session object back\n    getNewSession(serverConnection: ServerConnection): void {\n\n        // Necessary for component consumption\n        this.currentServerConnection = serverConnection;\n\n        this.mdDialog.show({\n            template: '<ds-start-session server-connection=\"$ctrl.currentServerConnection\" on-start=\"$ctrl.ownerSessionCreated(session, allowAllGuests, startRecording);\" on-cancel=\"$ctrl.cancelDialog()\"></ds-control-connect>',\n            scope: this.bindings,\n            preserveScope: true,\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: true\n        });\n    }\n\n    // Launch start new flight dialog and get the session object back\n    joinExistingSession(serverConnection: ServerConnection): void {\n\n        // Necessary for component consumption\n        this.currentServerConnection = serverConnection;\n\n        this.mdDialog.show({\n            template: '<ds-join-session server-connection=\"$ctrl.currentServerConnection\" session-controller=\"$ctrl.sessionController\" on-join=\"$ctrl.guestSessionJoined(session);\" on-cancel=\"$ctrl.cancelDialog()\"></ds-control-connect>',\n            scope: this.bindings,\n            preserveScope: true,\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: true\n        });\n    }\n\n    // Add to list of guest sessions\n    guestSessionJoined(session: ISession): void {\n        \n        // Close dialog\n        this.mdDialog.hide();\n\n        // Hide bg image\n        this.hideBackground = true;\n\n        // Remove buttons after session returns\n        this.hideButtons = true;\n\n        // Pass to session controller as guest\n        this.sessionController.addGuestSession(session, this.currentServerConnection, MapMode.ThreeDimensional);\n\n    }\n\n    // Call back from start new flight dialog that returns a session\n    ownerSessionCreated(session: ISession, allowAllGuests: boolean, startRecording: boolean): void {\n\n        // Close dialog\n        this.mdDialog.hide();\n\n        // Hide background image\n        this.hideBackground = true;\n\n        // Remove buttons after session returns\n        this.hideButtons = true;\n\n        this.sessionController.addOwnerSession(session, this.currentServerConnection, MapMode.ThreeDimensional, allowAllGuests, startRecording);\n    }\n\n    // Return true if user accepts\n    acceptGuestRequest(): void {\n        this.guestRequestCallback(true);\n        \n        // Hide dialog\n        this.guestUserRequest = false;\n\n        this.$log.log({ message: 'Accepted guest join request.' });\n    }\n\n    // Return false if user rejects\n    denyGuestRequest(): void {\n        this.guestRequestCallback(false);\n\n        // Hide dialog\n        this.guestUserRequest = false;\n\n        this.$log.log({ message: 'Denied guest join request.' });\n    }\n    \n    // Close dialog\n    cancelDialog(): void {\n        this.mdDialog.hide();\n    }\n\n    toggleLockCamera(): void {\n        if (this.lockCamera) {\n            this.sessionController.map.trackedEntity = this.sessionController.activeSession.mapDrone.droneEntity;\n            setTimeout(() => {\n                //this.loadCameraView();\n                this.sessionController.map.camera.zoomOut(40);\n            }, 250);\n            \n        } else {\n            //this.saveCameraView();\n            this.sessionController.map.trackedEntity = null;\n        }\n    }\n\n    position: any;\n    heading: any;\n    pitch: any;\n    roll: any;\n    transform: any;\n    saveCameraView(): void {\n        this.position = Cesium.Cartesian3.clone(this.sessionController.map.camera.positionWC, this.position);\n        this.heading = this.sessionController.map.camera.heading;\n        this.pitch = this.sessionController.map.camera.pitch;\n        this.roll = this.sessionController.map.camera.roll;\n        this.transform = Cesium.Matrix4.clone(this.sessionController.map.camera.transform, this.transform);\n    }\n\n    loadCameraView(): void {\n        let newPosition: Cesium.Cartesian3 = Cesium.Cartesian3.fromDegrees(this.sessionController.activeSession.mapDrone.currentLng, this.sessionController.activeSession.mapDrone.currentLat, this.sessionController.activeSession.mapDrone.currentAlt);\n        newPosition.z = this.position.z;\n        this.sessionController.map.camera.setView({\n            destination : newPosition,\n                orientation: {\n                    heading : this.heading,\n                    pitch : this.pitch,\n                    roll : this.roll\n            }\n        });\n    }\n\n    zoomIn(): void {\n        this.sessionController.map.cesiumNavigation.navigationViewModel.controls[0].activate();\n    }\n\n    zoomOut(): void {\n        this.sessionController.map.cesiumNavigation.navigationViewModel.controls[2].activate();\n    }\n\n    lookDownBoundingBox(): void {\n        this.sessionController.map.flyTo(this.sessionController.activeSession.mapEntityCollection);\n        this.lockCamera = false;\n    }\n\n    isRecording: boolean = false;\n    cameraInit: boolean = false;\n    recordIndicatorVisible: boolean = false;\n    toggleRecording(): void {\n        this.recordIndicatorVisible = true;\n\n        if (!this.cameraInit) {\n            this.initCamera();\n        }\n        if (this.isRecording) {\n            this.sessionController.ownerSession.mapDrone.drone.Camera.stopRecording().then(() => {\n                this.$log.log({ message: 'Stop Recording Requested' });\n            }).catch((error) => {\n                this.$log.error({ message: 'Error: stop recording call.', error: error });\n            });\n        } else {\n            this.sessionController.ownerSession.mapDrone.drone.Camera.startRecording().then(() => {\n                this.$log.log({ message: 'Start Recording Requested' });\n            }).catch((error) => {\n                this.$log.error({ message: 'Error: start recording call.', error: error });\n            });\n        }\n    }\n    initCamera(): void {\n        if (this.sessionController.ownerSession) {\n            this.isRecording = this.sessionController.ownerSession.mapDrone.drone.Camera.IsRecording;\n\n            this.sessionController.ownerSession.mapDrone.drone.Camera.on('recording-started', () => {\n                this.isRecording = true;\n                this.recordIndicatorVisible = false;\n                this.$log.log({ message: 'Recording Started' });\n            });\n            this.sessionController.ownerSession.mapDrone.drone.Camera.on('recording-stopped', () => {\n                this.isRecording = false;\n                this.recordIndicatorVisible = false;\n                this.$log.log({ message: 'Recording Stopped' });\n            });\n            this.sessionController.ownerSession.mapDrone.drone.Camera.on('take-picture-finished', () => {\n                this.takePictureComplete = true;\n                this.$log.log({ message: 'Take picture finished' });\n            });\n            this.cameraInit = true;\n        }\n    }\n    takePictureComplete: boolean = true;\n    takePicture(): void {\n        if (!this.cameraInit) {\n            this.initCamera();\n        }\n        this.takePictureComplete = false;\n        this.sessionController.ownerSession.mapDrone.drone.Camera.takePicture().then(() => {\n            this.$log.log({ message: 'Take picture Requested' });\n        }).catch((error) => {\n            this.$log.error({ message: 'Error: take picture request.', error: error });\n        });\n    }\n}\n\nexport default angular.module('DroneSense.Web.FlightControlViewer', [\n    ControlToolbar.name,\n    ControlConnect.name,\n    JoinSession.name,\n    StartSession.name,\n    ControlTelemetry.name,\n    FlightControlMode.name,\n    SessionManagementViewer.name,\n    WaypointListViewer.name,\n    MayLayers.name,\n    VideoPlayer.name,\n    MultiVideoPlayer.name\n]).component('dsFlightControlViewer', {\n    bindings: {\n\n    },\n    controller: FlightControlViewer,\n    templateUrl: './app/components/flightControlViewer/flightControlViewer.html'\n});\n"],"sourceRoot":"/source/"}