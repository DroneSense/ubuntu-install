{"version":3,"sources":["components/flightControlViewer/ownerMapSession.ts"],"names":[],"mappings":"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","file":"components/flightControlViewer/ownerMapSession.js","sourcesContent":["import ISession from '@dronesense/core/lib/common/ISession';\nimport IDrone from '@dronesense/core/lib/common/IDrone';\nimport ServerConnection from './serverConnection';\nimport { MapDrone } from './mapDrone';\nimport { FlightControlViewerEventing } from './flightControlViewer';\nimport { MapMode } from './mapMode';\nimport { MapWaypoints } from './mapWaypoints';\nimport { MapSession } from './mapSession';\n\n// Represents\nexport class OwnerMapSession extends MapSession {\n\n    // Flag to indicate whether the user created the session allowing all guests without\n    // prompting for permission\n    allowAllGuestsWithoutPrompt: boolean = false;\n\n    // Auto start recording on takeoff\n    startRecording: boolean;\n\n    // List of guests that are connected\n    connectedGuests: Array<string> = [];\n\n    constructor(public $log: angular.ILogService) {\n        super($log);\n    }\n\n    initializeOwnerSession(eventing: FlightControlViewerEventing, session: ISession, serverConnection: ServerConnection, map: Cesium.Viewer, mapMode: MapMode, allowAllGuestsWithoutPrompt: boolean, startRecording: boolean): Promise<OwnerMapSession> {\n\n        return new Promise<OwnerMapSession>((resolve) => {\n\n            this.map = map;\n            this.session = session;\n            this.serverConnection = serverConnection;\n            this.mapMode =  mapMode;\n            this.name = this.session.Name;\n            this.eventing = eventing;\n            this.allowAllGuestsWithoutPrompt = allowAllGuestsWithoutPrompt;\n            this.color = this.session.Color;\n            this.id = this.session.Id;\n            this.startRecording = startRecording;\n            \n            // WARNING BAD CODE (Robert made me do this!) - drone index 0 is hardcoded here\n            this.session.getDrones().then((drones: Array<IDrone>) => {\n            \n                this.mapDrone = new MapDrone(this.mapEntityCollection, this.$log);\n\n                this.mapDrone.initializeDrone(this.eventing, drones[0], this.map, this.color, true).then((mapDrone: MapDrone) => {\n                    this.mapDrone = mapDrone;\n\n                    this.setupEvents();\n\n                    // Initialize waypoints for guided mode\n                    this.mapWaypoints = new MapWaypoints(this.mapDrone, this.map, this.color, this.id, this.mapEntityCollection, this.eventing, this.$log);\n\n                    resolve(this);\n                });                \n            });\n\n        });\n\n    }\n\n    setupEvents(): void {\n\n        this.session.on('slave-connected', (username: string) => {\n            \n            // Add username\n            this.connectedGuests.push(username);\n\n            this.$log.log({ message: 'Slave Connected.', username: username});\n        });\n\n        this.session.on('slave-disconnected', (username: string) => {\n\n            try {\n                // Remove username\n                _.remove<string>(this.connectedGuests, (name: string) => {\n                    return username.toLowerCase() === name.toLowerCase() ? true : false;\n                });\n            } catch (error) {\n                this.$log.error({ message: 'Slave Disconnected Error.', error: error});\n            }\n\n            this.$log.log({ message: 'Slave Disconnected.', username: username});\n        });\n\n        // Wire up slave connection request\n        this.session.on('slave-requesting-connection', (username: string, cb: (accepted: boolean) => { }) => {\n            \n            // check allow all guests flag and return true and exit\n            if (this.allowAllGuestsWithoutPrompt) {\n                cb(true);\n                return;\n            }\n\n            this.eventing.trigger('guest-connect-request', username, cb);\n            this.$log.log({ message: 'Guest Connect Request', username: username});\n        });\n\n    }\n\n    remove(): void {\n        // First call remove on the drone\n        this.mapDrone.remove();\n\n        this.session.off('slave-connected');\n\n        this.session.off('slave-disconnected');\n\n        this.session.off('slave-requesting-connection');\n    }\n}"],"sourceRoot":"/source/"}