{"version":3,"sources":["components/flightControlViewer/sessionController.ts"],"names":[],"mappings":"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","file":"components/flightControlViewer/sessionController.js","sourcesContent":["import ISession from '@dronesense/core/lib/common/ISession';\nimport ServerConnection from './serverConnection';\nimport BackboneEvents from 'backbone-events-standalone';\nimport { MapMode } from './mapMode';\nimport { MapSession } from './mapSession';\nimport { OwnerMapSession } from './ownerMapSession';\nimport { FlightControlViewerEventing } from './flightControlViewer';\n\nexport class SessionController {\n\n    // Map reference passed to us from the map component\n    map: Cesium.Viewer;\n\n    // The owner session bound to the UI\n    ownerSession: OwnerMapSession;\n\n    // Guest sessions Array\n    guestSession: Array<MapSession> = [];\n\n    eventing: FlightControlViewerEventing;\n\n    // Currently active session for all UI to wire up\n    activeSession: MapSession;\n\n    constructor(eventing: FlightControlViewerEventing, public $log: angular.ILogService) {\n        this.eventing = eventing;\n    }\n   \n    addOwnerSession(session: ISession, serverConnection: ServerConnection, mapMode: MapMode, allowAllGuestsWithoutPrompt: boolean, startRecording: boolean): void {\n\n        try {\n            this.initializeMap(mapMode);\n\n            this.ownerSession = new OwnerMapSession(this.$log);\n\n            this.map.dataSources.add(this.ownerSession.mapEntityCollection);\n\n            // TODO: make static call\n            this.ownerSession.initializeOwnerSession(this.eventing, session, serverConnection, this.map, mapMode, allowAllGuestsWithoutPrompt, startRecording).then((ownerSession: OwnerMapSession) => {\n                \n                // Set returned owner session\n                this.ownerSession = ownerSession;\n\n                // Set as tracked entity\n                this.map.trackedEntity = ownerSession.mapDrone.droneEntity;\n\n                // Fly to\n                ownerSession.mapDrone.flyToDroneOn3DMap();\n\n                this.activeSession = ownerSession;\n\n                // Start video stream if drone is connected and this is an owner session\n\n                this.eventing.trigger('session-added', this.ownerSession);\n\n                this.$log.log({ message: 'Owner session initialized.' });\n            });\n        } catch (error) {\n            this.$log.error({ message: 'Error adding owner session.', error: error });\n        }\n\n    }\n\n    addGuestSession(session: ISession, serverConnection: ServerConnection, mapMode: MapMode): void {\n\n        try {\n            // check if map is loaded\n            this.initializeMap(mapMode);\n\n            let mapSessionInstance: MapSession = new MapSession(this.$log);\n\n            this.map.dataSources.add(mapSessionInstance.mapEntityCollection);\n\n            // TODO: Make static call on mapsession\n            mapSessionInstance.initializeSession(this.eventing, session, serverConnection, this.map, mapMode).then((mapSession: MapSession) => {\n                this.guestSession.push(mapSession);\n\n                // If we don't have an owner session then fly to the drone\n                if (!this.ownerSession) {\n\n                        // Set as the tracked entity\n                        this.map.trackedEntity = mapSession.mapDrone.droneEntity;\n\n                        // Only do fly to animation if it's the first guest session\n                        if (this.guestSession.length === 0) {\n                            mapSession.mapDrone.flyToDroneOn3DMap();\n                        }\n\n                        this.activeSession = mapSession;\n\n                        this.eventing.trigger('session-added', mapSession);\n\n                        setTimeout(() => {\n                            this.map.camera.zoomOut(40);\n                        }, 250);\n                }\n\n                // Start video stream if drone is connected and this is an owner session\n\n                this.$log.log({ message: 'Guest session initialized.' });\n            });\n        } catch (error) {\n            this.$log.error({ message: 'Error adding guest session.', error: error });\n        }\n\n    }\n\n    changeActiveSession(session: MapSession): void {\n\n        try {\n            if (this.activeSession === session) {\n                return;\n            }\n            \n            this.activeSession = session;\n\n            this.map.trackedEntity = session.mapDrone.droneEntity;\n\n            // Start video stream if drone is connected and this is an owner session\n\n            this.eventing.trigger('session-changed', session);\n\n            this.$log.log({ message: 'Change active session.' });\n\n            setTimeout(() => {\n                this.map.camera.zoomOut(40);\n            }, 250);\n        } catch (error) {\n            this.$log.error({ message: 'Error changing active session.', error: error });\n        }\n    }\n\n    removeGuestSession(session: MapSession): void {\n        \n        try {\n\n            // There are two paths for removing guests\n            if (this.ownerSession) {\n\n            } else {\n                this.activeSession = null;\n\n                this.map.trackedEntity = null;\n\n                this.eventing.trigger('session-removed', session);\n\n                this.$log.log({ message: 'Remove guest session.' });\n            }\n\n            // suspend this collections events\n            session.mapEntityCollection.entities.suspendEvents();\n\n            // remove and destroy\n            this.map.dataSources.remove(session.mapEntityCollection, true);\n\n            // resumt map events\n            session.mapEntityCollection.entities.resumeEvents();\n\n            session.session.leaveSession();\n\n            this.guestSession.splice(this.guestSession.indexOf(session), 1);\n\n        } catch (error) {\n            this.$log.error({ message: 'Error removing guest session.', error: error });\n        }\n    };\n\n    // Creates map object with selected mode\n    initializeMap(mapMode: MapMode): void {\n        //'//assets.agi.com/stk-terrain/world'\n        // https://cesiumjs.org/Cesium/Build/Documentation/Viewer.html\n\n        try {\n\n            // Only initialize map if it doesn't exist.\n            if (this.map) {\n                return;\n            }\n\n            // By default Cesium uses the location of the Cesium.js file as the location where the rest of the files are stored. You can either set a global CESIUM_BASE_URL variable or just call Cesium.buildModuleUrl.setBaseUrl to point it at a different location.\n            Cesium.BingMapsApi.defaultKey = 'AiGfGytmoPZ6lnYVDiRzKe08ZI_kzjHTjhVrcuj3pPrpC9BmxvFP_vfGT8fB9z-T';\n\n            let sceneMode: any = mapMode === MapMode.ThreeDimensional ? Cesium.SceneMode.SCENE3D : Cesium.SceneMode.SCENE2D;\n\n            this.map = new Cesium.Viewer(document.getElementById('cesiumContainer'), {\n                terrainProvider : new Cesium.CesiumTerrainProvider({\n                    url : 'https://www.cesiumcontent.com/api/terrain/world?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkMTM4ZDE2OS05NWYwLTQ0YmItOWY3YS0yNjEwOGE5Y2Y3NjYiLCJpZCI6NywiaWF0IjoxNDU1MjkyNzg5fQ.NDKlrwQZE_04ntDuL89hvatEmuycQo5llhtz3Mi6Wo0',\n                    requestWaterMask : false,\n                    requestVertexNormals : false\n                }),\n                // imageryProvider : new Cesium.ArcGisMapServerImageryProvider({\n                //     url : \"//services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer\"\n                // }),\n                // terrainProvider : new Cesium.CesiumTerrainProvider({\n                //     url : '//assets.agi.com/stk-terrain/world',\n                //     requestWaterMask : true,\n                //     requestVertexNormals : true\n                // }),\n                // imageryProvider: new Cesium.MapboxImageryProvider({\n                //     mapId: 'digitalglobe.nmnghj3m',\n                //     // sat with streets: digitalglobe.nmnghj3m\n                //     // sat only: digitalglobe.nmmnloo2\n                //     //Get your DigitalGlobe Maps API Access Token here: http://developer.digitalglobe.com/maps-api\n                //     accessToken: 'pk.eyJ1IjoiZGlnaXRhbGdsb2JlIiwiYSI6ImNpZnB2bWUzNDZoczlzaWtxMmd2bDc3ZHQifQ.AHiF6mR5aXL0rdI4eLz2dA',\n                //     credit: 'DigitalGlobe Maps API'\n                // }),\n                // imageryProvider: new Cesium.MapboxImageryProvider({\n                //     mapId: 'chriseyhorn.3sjrlik9',\n                //     // sat with streets: digitalglobe.nmnghj3m\n                //     // sat only: digitalglobe.nmmnloo2\n                //     //Get your DigitalGlobe Maps API Access Token here: http://developer.digitalglobe.com/maps-api\n                //     accessToken: 'pk.eyJ1IjoiY2hyaXNleWhvcm4iLCJhIjoiaDFPdEM2ZyJ9.m41bT4PKxsjLH3MgC-pGCw'\n                // }),\n                baseLayerPicker: false,\n                fullscreenButton: false,\n                homeButton: false,\n                sceneModePicker: false,\n                selectionIndicator: false,\n                timeline: false,\n                animation: false,\n                geocoder: false,\n                navigationHelpButton: false,\n                infobox: false,\n                scene3DOnly: false,\n                sceneMode: sceneMode//,\n                //dataSources: this.mapDataSourceCollection\n                // shadows : true,\n                // terrainShadows : Cesium.ShadowMode.ENABLED\n            });\n\n            var options: any = {};\n\n            options.enableCompass = false;\n            options.enableZoomControls = true;\n            options.enableDistanceLegend = false;\n            this.map.extend(Cesium.viewerCesiumNavigationMixin, options);\n\n            // this.map.scene.primitives.add(new Cesium.Cesium3DTileset({\n            //     url: 'https://www.cesiumcontent.com/api/assets/3/data?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkZjgxNGRiYS0wMjc0LTQ2ZWMtYTJhNC1kMzRhYzkyNDE0YjgiLCJpZCI6NSwiYXNzZXRzIjpbM10sImlhdCI6MTQ1NzQ1ODEwOX0.-kwaVNM63oY4-rqLiZHqSedHRImPCZtkizCU50SuKwA'\n            // }));\n\n            // this.map.scene.primitives.add(new Cesium.Cesium3DTileset({\n            //     url : '../newyork/'\n            // }));\n\n            // Decreases map performance but make rendering look better at distances\n            //this.map.scene.fog.enabled = true;\n\n            // This sets night/day in the scene\n            //this.map.scene.globe.enableLighting = true;\n\n            // For debug development purposes\n            this.map.scene.debugShowFramesPerSecond = false;\n\n            // Necessary for 3D models to stay in place\n            this.map.scene.globe.depthTestAgainstTerrain = true;\n\n            // Change mapping to mouse buttons so that the right mouse button will tilt and rotate.\n            this.map.scene.screenSpaceCameraController.tiltEventTypes = [Cesium.CameraEventType.RIGHT_DRAG, Cesium.CameraEventType.PINCH, {\n                eventType : Cesium.CameraEventType.LEFT_DRAG,\n                modifier : Cesium.KeyboardEventModifier.CTRL\n            }, {\n                eventType : Cesium.CameraEventType.RIGHT_DRAG,\n                modifier : Cesium.KeyboardEventModifier.CTRL\n            }];\n\n            // Remove right mouse button from zooming on hold and move\n            this.map.scene.screenSpaceCameraController.zoomEventTypes = [Cesium.CameraEventType.WHEEL, Cesium.CameraEventType.PINCH];\n\n            // this.map.imageryLayers.addImageryProvider(new Cesium.WebMapServiceImageryProvider({\n            //        url : '//mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0r.cgi?',\n            //        layers : 'nexrad-n0r',\n            //        parameters : {\n            //            transparent : 'true',\n            //            format : 'image/png'\n            //        }\n            // }));\n\n            this.eventing.trigger('map-loaded');\n\n            this.$log.log({ message: 'Map loaded.' });\n\n        } catch (error) {\n            this.$log.error({ message: 'Error initializing map.', error: error });\n        }\n    }\n\n    endSession(): void {\n        this.ownerSession.session.endSession();\n\n\n        this.$log.log({ message: 'End session.' });\n        \n    }\n\n}\n\nBackboneEvents.mixin(SessionController.prototype);\n"],"sourceRoot":"/source/"}