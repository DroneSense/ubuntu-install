{"version":3,"sources":["components/flightControlMode/flightControlMode.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;YA2EA;gBAoGI,2BAAmB,QAA4B,EAAS,cAA8B,EAAS,OAAwC;oBApG3I,iBAkiBC;oBA9bsB,aAAQ,GAAR,QAAQ,CAAoB;oBAAS,mBAAc,GAAd,cAAc,CAAgB;oBAAS,YAAO,GAAP,OAAO,CAAiC;oBAlGvI,0BAA0B;oBAC1B,qBAAgB,GAAY,KAAK,CAAC;oBAClC,wBAAmB,GAAY,KAAK,CAAC;oBAErC,kCAAkC;oBAClC,4BAAuB,GAAY,KAAK,CAAC;oBAEzC,mCAA8B,GAAY,KAAK,CAAC;oBAChD,2BAAsB,GAAY,KAAK,CAAC;oBAExC,oBAAe,GAAY,KAAK,CAAC;oBACjC,2BAAsB,GAAY,KAAK,CAAC;oBAExC,oCAA+B,GAAY,KAAK,CAAC;oBAEjD,kCAAkC;oBAClC,4BAAuB,GAAY,KAAK,CAAC;oBAEzC,oCAA+B,GAAY,KAAK,CAAC;oBAEjD,6BAA6B;oBAC7B,yBAAoB,GAAY,KAAK,CAAC;oBAEtC,sCAAsC;oBACtC,yBAAoB,GAAY,KAAK,CAAC;oBAEtC,wCAAwC;oBACxC,wBAAmB,GAAY,KAAK,CAAC;oBACrC,2BAAsB,GAAY,KAAK,CAAC;oBAExC,uCAAuC;oBACvC,uBAAkB,GAAY,KAAK,CAAC;oBACpC,0BAAqB,GAAY,KAAK,CAAC;oBAEvC,6CAA6C;oBAC7C,iCAA4B,GAAY,KAAK,CAAC;oBAE9C,0CAA0C;oBAC1C,gCAA2B,GAAY,KAAK,CAAC;oBAE7C,8BAA8B;oBAC9B,6BAAwB,GAAY,KAAK,CAAC;oBAE1C,uCAAuC;oBACvC,8BAAyB,GAAY,KAAK,CAAC;oBAE3C,iDAAiD;oBACjD,6BAAwB,GAAY,KAAK,CAAC;oBAE1C,cAAS,GAAY,KAAK,CAAC;oBAoB3B,cAAc;oBACd,eAAU,GAAe,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAE7D,cAAc;oBACd,eAAU,GAAe,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAE7D,WAAW;oBACX,YAAO,GAAY,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAEpD,aAAa;oBACb,cAAS,GAAc,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAE1D,sBAAiB,GAAY,KAAK,CAAC;oBAEnC,uBAAkB,GAAY,KAAK,CAAC;oBACpC,0BAAqB,GAAW,EAAE,CAAC;oBACnC,uBAAkB,GAAW,CAAC,CAAC;oBAC/B,qBAAgB,GAAY,KAAK,CAAC;oBAIlC,qBAAgB,GAAY,KAAK,CAAC;oBAyDlC,qCAAgC,GAAY,KAAK,CAAC;oBAClD,qCAAgC,GAAY,KAAK,CAAC;oBAClD,kCAA6B,GAAY,KAAK,CAAC;oBAC/C,oCAA+B,GAAY,KAAK,CAAC;oBAyHjD,yBAAoB,GAAY,KAAK,CAAC;oBAyBtC,oBAAe,GAAW,EAAE,CAAC;oBAC7B,2BAAsB,GAAY,KAAK,CAAC;oBA4GxC,yBAAoB,GAAY,KAAK,CAAC;oBA8HtC,mBAAc,GAAW,EAAE,CAAC;oBAC5B,iBAAY,GAAW,EAAE,CAAC;oBAC1B,oBAAe,GAAY,IAAI,CAAC;oBAChC,mBAAc,GAAW,EAAE,CAAC;oBAE5B,kBAAa,GAAkoBAC1V,kBAAa,GAAW,CAAC,CAAC;oBArbtB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,YAA6B;wBAE9E,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC;wBACvC,KAAI,CAAC,KAAK,GAAG,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC;wBACzC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;wBAClE,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC;wBAE1E,KAAI,CAAC,kBAAkB,EAAE,CAAC;wBAE1B,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAc;4BAE9D,8BAA8B;4BAC9B,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gCAE/B,iBAAiB;gCACjB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;gCAE3B,4CAA4C;gCAC5C,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oCACnB,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gCACrD,CAAC;4BACL,CAAC;4BAED,mCAAmC;4BACnC,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;gCACvC,iBAAiB;gCACjB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;gCAEnC,0BAA0B;gCAC1B,KAAI,CAAC,kBAAkB,EAAE,CAAC;4BAC9B,CAAC;4BAED,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;4BAEjC,CAAC;wBAEL,CAAC,CAAC,CAAC;wBAEH,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;oBAEhC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE;wBAC7C,KAAI,CAAC,yBAAyB,EAAE,CAAC;oBACrC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAOD,yCAAa,GAAb;oBACI,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;oBAC7C,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAE5C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAE;oBAEnE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBAEf,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,yCAAa,GAAb;oBACI,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;oBAC7C,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAE5C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAE;oBAEnE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBAEf,CAAC,CAAC,CAAC;gBACP,CAAC;gBAGD,wCAAY,GAAZ;oBACI,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;oBAC7C,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;oBAE7C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAE;oBAElE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBAEf,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,8CAAkB,GAAlB;oBAEI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;wBAC9B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;oBAChC,CAAC;oBAED,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;wBACtB,KAAK,uBAAU,CAAC,MAAM;4BAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;4BACnC,KAAK,CAAC;wBACV,KAAK,uBAAU,CAAC,SAAS;4BACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;4BACnC,KAAK,CAAC;wBACV,KAAK,uBAAU,CAAC,OAAO;4BACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;4BACnC,KAAK,CAAC;wBACV,KAAK,uBAAU,CAAC,MAAM;4BAClB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;4BACnC,KAAK,CAAC;wBACV,KAAK,uBAAU,CAAC,GAAG;4BACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;4BAChC,KAAK,CAAC;wBACV,KAAK,uBAAU,CAAC,KAAK;4BACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC;4BAClC,KAAK,CAAC;wBACV;4BACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;4BACxB,KAAK,CAAC;oBACd,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;wBACtE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;wBAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;oBAChC,CAAC;gBAEL,CAAC;gBAED,+BAAG,GAAH;oBACI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAChC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC1D,CAAC;gBAED,mCAAO,GAAP;oBACI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC9D,CAAC;gBAED,kCAAM,GAAN;oBACI,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBAC7D,CAAC;gBAED,iCAAK,GAAL;oBACI,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;oBAClC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC5D,CAAC;gBAED,wCAAY,GAAZ;oBACI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;gBACnE,CAAC;gBAED,0CAAc,GAAd;oBACI,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBACrE,CAAC;gBAED,uCAAW,GAAX;oBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;wBACxC,IAAI,CAAC,yBAAyB,EAAE,CAAC;oBACrC,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBACnC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBACnC,CAAC;gBAEL,CAAC;gBAMD,0CAAc,GAAd;oBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;wBACxC,IAAI,CAAC,yBAAyB,EAAE,CAAC;oBACrC,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBACvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;wBAC7B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;wBAClC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;wBAClG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACtG,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;wBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CACjB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;6BAChB,OAAO,CAAC,6BAA6B,CAAC;6BACtC,QAAQ,CAAC,UAAU,CAAC;6BACpB,SAAS,CAAC,IAAI,CAAC,CACnB,CAAC;oBAEN,CAAC;gBACL,CAAC;gBAKD,6CAAiB,GAAjB;oBAAA,iBAuBC;oBArBG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;wBAC3D,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;4BACrD,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;gCACpC,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gCACnC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gCACjC,IAAI,CAAC;oCACD,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,SAAkB;wCACpG,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;oCAChD,CAAC,CAAC,CAAC;gCACP,CAAE;gCAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oCACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gCACvB,CAAC;4BACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;wBACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;gBAC3C,CAAC;gBAED,qCAAS,GAAT;oBAAA,iBAkBC;oBAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;wBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;4BACrD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC;gCACnC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gCACjC,IAAI,CAAC;oCACD,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,SAAkB;wCACnG,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;wCAC5C,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;oCACxC,CAAC,CAAC,CAAC;gCACP,CAAE;gCAAA,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oCACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gCACvB,CAAC;4BACL,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;gBACL,CAAC;gBAED,yCAAa,GAAb;oBACI,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;gBAC3C,CAAC;gBAGD,4CAAgB,GAAhB;oBAAA,iBAiCC;oBA/BG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,uBAAU,CAAC,MAAM,CAAC,CAAC,CAAC;wBAEpD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;wBAE1D,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC;4BAC3C,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS;4BACnE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS;4BACnE,QAAQ,EAAE,IAAI,CAAC,mBAAmB;4BAClC,KAAK,EAAE,CAAC;4BACR,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;yBAC3B,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;wBAEd,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;4BACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACvB,CAAC,CAAC,CAAC;wBAEH,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;oBAC1C,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,KAAK,uBAAU,CAAC,KAAK,CAAC,CAAC,CAAC;wBAEnD,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,YAAY,EACnH,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC;4BAC5C,KAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;wBAC1C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;4BACX,kCAAkC;4BAClC,KAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;4BACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACvB,CAAC,CAAC,CAAC;oBAEP,CAAC;gBACL,CAAC;gBAED,gDAAoB,GAApB;oBACI,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;gBAC1C,CAAC;gBAED,+CAAmB,GAAnB;oBACI,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBACpC,CAAC;gBAED,6CAAiB,GAAjB;oBACI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBAClG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACtG,CAAC;gBAED,8CAAkB,GAAlB;oBACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAClC,CAAC;gBAGD,2CAAe,GAAf;oBAAA,iBAmBC;oBAlBG,qCAAqC;oBACrC,IAAI,EAAE,GAAW,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC;oBAE3C,uCAAuC;oBAGvC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACjC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,EAC9G,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;wBAC3B,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;wBAC9B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;wBAC7B,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;wBAClC,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACtC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;wBACX,kCAAkC;wBAClC,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;wBAClC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;gBACP,CAAC;gBAGD,qDAAyB,GAAzB;oBAAA,iBAUC;oBARO,iCAAiC;oBACrC,IAAI,CAAC,YAAY,GAAG,IAAI,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBAEjG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,UAAC,KAAU;wBACpC,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;oBACjC,CAAC,EACD,MAAM,CAAC,oBAAoB,CAAC,UAAU,CACzC,CAAC;gBACN,CAAC;gBAED,4CAAgB,GAAhB,UAAiB,KAAU;oBAEvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;wBACnD,MAAM,CAAC;oBACX,CAAC;oBAGD,wCAAwC;oBAExC,IAAI,GAAG,GAAQ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBAC5E,IAAI,QAAQ,GAAQ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACvG,wBAAwB;oBACxB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAC3B,uEAAuE;wBACvE,IAAI,oBAAoB,GAAwB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;wBACnI,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC;wBAChC,0FAA0F;wBAE1F,sFAAsF;wBACtF,IAAI,eAAe,GAAW,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;wBACpF,IAAI,cAAc,GAAW,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;wBAElF,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;4BACzB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC;gCAC3C,SAAS,EAAE,cAAc;gCACzB,SAAS,EAAE,eAAe;gCAC1B,QAAQ,EAAE,IAAI,CAAC,qBAAqB;gCACpC,KAAK,EAAE,IAAI,CAAC,kBAAkB;gCAC9B,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE;6BAC3B,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC;gCAC3B,0CAA0C;gCAE1C,uCAAuC;gCACvC,+BAA+B;gCAC/B,0CAA0C;4BAC9C,CAAC,CAAC,CAAC;wBACP,CAAC;wBAED,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;4BACvB,qFAAqF;4BACrF,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;gCAC5B,IAAI,QAAQ,GAAW,qBAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;gCAC9G,IAAI,CAAC,YAAY,GAAG,qBAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gCACrD,IAAI,CAAC,cAAc,GAAG,qBAAW,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gCAEzG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gCAClG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC;oCAC5F,QAAQ,EAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;oCACjI,OAAO,EAAG;wCACN,aAAa,EAAG,IAAI,CAAC,YAAY;wCACjC,aAAa,EAAG,IAAI,CAAC,YAAY;wCACjC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU;wCAC/D,QAAQ,EAAG,MAAM,CAAC,KAAK,CAAC,WAAW;wCACnC,OAAO,EAAG,IAAI;wCACd,YAAY,EAAG,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC;wCACzD,YAAY,EAAE,CAAC;qCAClB;iCACJ,CAAC,CAAC;gCAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BACjC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;gCAChC,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;gCACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gCAEjC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gCAClG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC;oCAC5F,QAAQ,EAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,EAAE,cAAc,EAAE,CAAC,CAAC;oCAC5E,KAAK,EAAG;wCACJ,KAAK,EAAG,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC;wCAClD,SAAS,EAAG,EAAE;wCACd,YAAY,EAAG,MAAM,CAAC,KAAK,CAAC,KAAK;wCACjC,YAAY,EAAG,CAAC;wCAChB,eAAe,EAAG,MAAM,CAAC,eAAe,CAAC,kBAAkB;qCAC9D;iCACJ,CAAC,CAAC;gCAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CACjB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;qCAChB,OAAO,CAAC,mCAAmC,CAAC;qCAC5C,QAAQ,CAAC,UAAU,CAAC;qCACpB,SAAS,CAAC,IAAI,CAAC,CACnB,CAAC;4BACN,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;gBAaD,uCAAW,GAAX;oBACI,IAAI,OAAO,GAAW,IAAI,CAAC,aAAa,CAAC;oBACzC,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBACvC,CAAC;gBAncD,cAAc;gBACP,yBAAO,GAAkB;oBAC5B,QAAQ;oBACR,eAAe;oBACf,UAAU;iBACb,CAAC;gBA+bN,wBAAC;YAAD,CAliBA,AAkiBC,IAAA;YAED,WAAK,aAAa;gBACd,uDAAO,CAAA;gBACP,+CAAG,CAAA;gBACH,qDAAM,CAAA;gBACN,mDAAK,CAAA;gBACL,iEAAY,CAAA;gBACZ,qEAAc,CAAA;gBACd,+DAAW,CAAA;YACf,CAAC,EARI,aAAa,KAAb,aAAa,QAQjB;YAYD;gBAMI,mBAAmB,iBAAqC;oBAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;gBAExD,CAAC;gBAED,8BAAU,GAAV,UAAW,YAA0B,EAAE,UAAsB,EAAE,KAAa;oBAA5E,iBAYC;oBAXG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAEnB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAc;wBAC9D,KAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC1D,KAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC;wBAE1D,KAAI,CAAC,iBAAiB,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBACrD,KAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,KAAK,CAAC;oBAC1D,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,2BAAO,GAAP;oBACI,sCAAsC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACrD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,IAAI,CAAC;oBAE3D,uCAAuC;oBACvC,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,GAAG,KAAK,CAAC;oBAC7D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAE/D,mDAAmD;oBACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE/C,CAAC;gBAED,8BAAU,GAAV;oBACI,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,KAAK,CAAC;oBACtD,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACvD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,KAAK,CAAC;oBAC5D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAChD,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,GAAG,KAAK,CAAC;oBAC3D,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAClD,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACnD,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACpD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAC/D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAC/D,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,KAAK,CAAC;oBAEtD,IAAI,CAAC,iBAAiB,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC/C,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBACxD,CAAC;gBAED,qCAAiB,GAAjB,UAAkB,MAAqB;oBAEnC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACb,KAAK,aAAa,CAAC,GAAG;4BAClB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;4BAE/D,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,oCAAoC;4BACxC,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,YAAY;4BAC3B,oDAAoD;4BACpD,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,cAAc;4BAC7B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC;4BACxG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC;4BACvD,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,KAAK;4BACpB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;4BAE7C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,MAAM;4BACrB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;4BAE9C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBAED,sCAAkB,GAAlB,UAAmB,YAA0B;oBACzC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACnB,sEAAsE;wBACtE,KAAK,2BAAY,CAAC,MAAM;4BACpB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,GAAG,IAAI,CAAC;4BAC1D,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,IAAI,CAAC;4BACjD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,IAAI,CAAC;4BAC3D,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,IAAI,CAAC;4BACrD,KAAK,CAAC;wBACV,wBAAwB;wBACxB,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,8CAA8C;wBAC9C,KAAK,2BAAY,CAAC,WAAW;4BACzB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,wEAAwE;wBACxE,KAAK,2BAAY,CAAC,QAAQ;4BACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,gIAAgI;wBAChI,KAAK,2BAAY,CAAC,SAAS;4BACvB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,uEAAuE;wBACvE,KAAK,2BAAY,CAAC,QAAQ;4BACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,kEAAkE;wBAClE,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;4BACnC,KAAK,CAAC;wBACV,0CAA0C;wBAC1C,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBAEL,gBAAC;YAAD,CA3IA,AA2IC,IAAA;YAED;gBAMI,oBAAmB,iBAAqC;oBAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;gBAExD,CAAC;gBAED,+BAAU,GAAV,UAAW,YAA0B,EAAE,UAAsB,EAAE,KAAa;oBAA5E,iBA+CC;oBA9CG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBAEnB,0GAA0G;oBAC1G,gEAAgE;oBAChE,MAAM;oBAEN,iFAAiF;oBACjF,iDAAiD;oBACjD,MAAM;oBAEN,qEAAqE;oBACrE,wCAAwC;oBACxC,MAAM;oBAEN,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,KAAc;wBAC9D,KAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;wBAC1D,KAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC;wBAE1D,KAAI,CAAC,iBAAiB,CAAC,qBAAqB,GAAG,KAAK,CAAC;wBACrD,KAAI,CAAC,iBAAiB,CAAC,sBAAsB,GAAG,KAAK,CAAC;oBAC1D,CAAC,CAAC,CAAC;oBAEH,mEAAmE;oBACnE,yDAAyD;oBACzD,yDAAyD;oBACzD,MAAM;oBAEN,oEAAoE;oBACpE,0DAA0D;oBAC1D,wDAAwD;oBACxD,MAAM;oBAEN,2FAA2F;oBAC3F,+CAA+C;oBAC/C,MAAM;oBAEN,iFAAiF;oBACjF,iDAAiD;oBACjD,MAAM;oBAEN,iFAAiF;oBACjF,iDAAiD;oBACjD,MAAM;gBAEV,CAAC;gBAED,4BAAO,GAAP;oBACI,sCAAsC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,GAAG,IAAI,CAAC;oBACtD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,GAAG,IAAI,CAAC;oBAC7D,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC;oBACvD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,IAAI,CAAC;oBAE3D,uCAAuC;oBACvC,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,GAAG,KAAK,CAAC;oBAC7D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAE/D,mDAAmD;oBACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE/C,CAAC;gBAED,+BAAU,GAAV;oBACI,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACvD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,KAAK,CAAC;oBAC5D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAChD,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,GAAG,KAAK,CAAC;oBAC3D,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAClD,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACnD,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACpD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAC/D,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,GAAG,KAAK,CAAC;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,KAAK,CAAC;oBAExD,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBACrD,CAAC;gBAED,sCAAiB,GAAjB,UAAkB,MAAqB;oBAEnC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACb,KAAK,aAAa,CAAC,GAAG;4BAClB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;4BAE/D,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,oCAAoC;4BACxC,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,YAAY;4BAC3B,oDAAoD;4BACpD,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,cAAc;4BAC7B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC;4BACxG,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC;4BACvD,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,KAAK;4BACpB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;4BAE7C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,MAAM;4BACrB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;4BAE9C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,OAAO;4BACtB,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,GAAG,IAAI,CAAC;4BACxD,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,WAAW;4BAC1B,oDAAoD;4BACpD,KAAK,CAAC;wBAEV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBAED,uCAAkB,GAAlB,UAAmB,YAA0B;oBACzC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACnB,sEAAsE;wBACtE,KAAK,2BAAY,CAAC,MAAM;4BACpB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,GAAG,IAAI,CAAC;4BAC1D,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,IAAI,CAAC;4BACjD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,IAAI,CAAC;4BAE3D,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,KAAK,CAAC;4BACpD,KAAK,CAAC;wBACV,wBAAwB;wBACxB,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,8CAA8C;wBAC9C,KAAK,2BAAY,CAAC,WAAW;4BACzB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,wEAAwE;wBACxE,KAAK,2BAAY,CAAC,QAAQ;4BACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,gIAAgI;wBAChI,KAAK,2BAAY,CAAC,SAAS;4BACvB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,uEAAuE;wBACvE,KAAK,2BAAY,CAAC,QAAQ;4BACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,kEAAkE;wBAClE,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,IAAI,CAAC;4BACnD,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;4BACnC,KAAK,CAAC;wBACV,0CAA0C;wBAC1C,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBACL,iBAAC;YAAD,CArLA,AAqLC,IAAA;YAED;gBAMI,iBAAmB,iBAAqC;oBAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;gBAExD,CAAC;gBAED,4BAAU,GAAV,UAAW,YAA0B,EAAE,UAAsB,EAAE,KAAa;oBACxE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAED,yBAAO,GAAP;oBACI,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,GAAG,KAAK,CAAC;oBACnD,sCAAsC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBAEnD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAE9D,uCAAuC;oBACvC,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,GAAG,KAAK,CAAC;oBAC7D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAE/D,mDAAmD;oBACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/C,CAAC;gBAED,4BAAU,GAAV;oBACI,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBACpD,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAElD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAC/D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;gBACnE,CAAC;gBAED,mCAAiB,GAAjB,UAAkB,MAAqB;oBACnC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACb,KAAK,aAAa,CAAC,KAAK;4BACpB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;4BAElE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACvB,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBAED,oCAAkB,GAAlB,UAAmB,YAA0B;oBACzC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACnB,sEAAsE;wBACtE,KAAK,2BAAY,CAAC,MAAM;4BACpB,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,IAAI,CAAC;4BACjD,KAAK,CAAC;wBACV,wBAAwB;wBACxB,KAAK,2BAAY,CAAC,OAAO;4BAErB,KAAK,CAAC;wBACV,8CAA8C;wBAC9C,KAAK,2BAAY,CAAC,WAAW;4BAEzB,KAAK,CAAC;wBACV,wEAAwE;wBACxE,KAAK,2BAAY,CAAC,QAAQ;4BAEtB,KAAK,CAAC;wBACV,gIAAgI;wBAChI,KAAK,2BAAY,CAAC,SAAS;4BAEvB,KAAK,CAAC;wBACV,uEAAuE;wBACvE,KAAK,2BAAY,CAAC,QAAQ;4BAEtB,KAAK,CAAC;wBACV,kEAAkE;wBAClE,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,KAAK,CAAC;4BAClD,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;4BACnC,KAAK,CAAC;wBACV,0CAA0C;wBAC1C,KAAK,2BAAY,CAAC,OAAO;4BAErB,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBACL,cAAC;YAAD,CA/FA,AA+FC,IAAA;YAED;gBAMI,oBAAmB,iBAAqC;oBAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;gBAExD,CAAC;gBAED,+BAAU,GAAV,UAAW,YAA0B,EAAE,UAAsB,EAAE,KAAa;oBACxE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACvB,CAAC;gBAED,4BAAO,GAAP;oBACI,sCAAsC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,GAAG,IAAI,CAAC;oBACtD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,IAAI,CAAC;oBAC3D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,IAAI,CAAC;oBAC9D,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,GAAG,IAAI,CAAC;oBAE7D,uCAAuC;oBACvC,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,GAAG,KAAK,CAAC;oBAChE,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,GAAG,KAAK,CAAC;oBAC7D,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAE/D,mDAAmD;oBACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/C,CAAC;gBAED,+BAAU,GAAV;oBACI,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACvD,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,GAAG,KAAK,CAAC;oBAC5D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAChD,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,GAAG,KAAK,CAAC;oBAC/D,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,GAAG,KAAK,CAAC;gBAClE,CAAC;gBAED,sCAAiB,GAAjB,UAAkB,MAAqB;oBAEnC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACb,KAAK,aAAa,CAAC,GAAG;4BAClB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,uBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;4BAE/D,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gCACX,oCAAoC;4BACxC,CAAC,CAAC,CAAC;4BACH,KAAK,CAAC;wBACV,KAAK,aAAa,CAAC,YAAY;4BAC3B,oDAAoD;4BACpD,KAAK,CAAC;wBAEV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBAED,uCAAkB,GAAlB,UAAmB,YAA0B;oBACzC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACnB,sEAAsE;wBACtE,KAAK,2BAAY,CAAC,MAAM;4BACpB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,wBAAwB;wBACxB,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,8CAA8C;wBAC9C,KAAK,2BAAY,CAAC,WAAW;4BACzB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,wEAAwE;wBACxE,KAAK,2BAAY,CAAC,QAAQ;4BACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,gIAAgI;wBAChI,KAAK,2BAAY,CAAC,SAAS;4BACvB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC;4BAC/C,KAAK,CAAC;wBACV,uEAAuE;wBACvE,KAAK,2BAAY,CAAC,QAAQ;4BACtB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV,kEAAkE;wBAClE,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;4BACnC,KAAK,CAAC;wBACV,0CAA0C;wBAC1C,KAAK,2BAAY,CAAC,OAAO;4BACrB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,GAAG,KAAK,CAAC;4BAChD,KAAK,CAAC;wBACV;4BACI,KAAK,CAAC;oBACd,CAAC;gBACL,CAAC;gBACL,iBAAC;YAAD,CAnGA,AAmGC,IAAA;YAED,oBAAe,OAAO,CAAC,MAAM,CAAC,kCAAkC,EAAE,EAEjE,CAAC,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAChC,QAAQ,EAAE;oBACN,iBAAiB,EAAE,GAAG;iBACzB;gBACD,UAAU,EAAE,iBAAiB;gBAC7B,WAAW,EAAE,2DAA2D;aAC3E,CAAC,EAAC","file":"components/flightControlMode/flightControlMode.js","sourcesContent":["import { Conversions } from '@dronesense/model/lib/common/Utility';\nimport { SessionController } from '../flightControlViewer/sessionController';\nimport { OwnerMapSession } from '../flightControlViewer/MapSession';\nimport { IDrone } from '@dronesense/core/lib/common/IDrone';\nimport { SystemStatus } from '@dronesense/core/lib/common/enums/SystemStatus';\nimport { FlightMode } from '@dronesense/core/lib/common/enums/FlightMode';\nimport { ISystem } from '@dronesense/core/lib/common/entities/ISystem';\nimport { IGuidedWaypoint } from '@dronesense/core/lib/common/entities/IGuidedWaypoint';\nimport { IRedProService } from '../../services/redProService';\n\nexport interface IFlightControlMode extends ng.IScope {\n    $ctrl: any;\n\n    // Flag to show RTL button\n    rtlButtonVisible: boolean;\n\n    // Flag to show guided mode button\n    guidedModeButtonVisible: boolean;\n    changeToGuidedModeButtonVisible: boolean;\n\n    // Flag to show manual mode button\n    manualModeButtonVisible: boolean;\n    changeToManualModeButtonVisible: boolean;\n\n    orbitModeButtonVisible: boolean;\n    changeToOrbitModeButtonVisible: boolean;\n\n    // RTL mode button visibility\n    rtlModeButtonVisible: boolean;\n    rtlIndicatorVisible: boolean;\n\n    // Flag to show takeoff command button\n    takeoffButtonVisible: boolean;\n    takeoffIndicatorVisible: boolean;\n\n    // Flag to show the flight resume button\n    resumeButtonVisible: boolean;\n    resumeIndicatorVisible: boolean;\n\n    // Flag to show the flight pause button\n    pauseButtonVisible: boolean;\n    pauseIndicatorVisible: boolean;\n\n    // Flag to show the set new home point button\n    setNewHomePointButtonVisible: boolean;\n\n    // Flag to show the change altitude button\n    changeAltitudeButtonVisible: boolean;\n\n    // Add waypoint button visible\n    addWaypointButtonVisible: boolean;\n\n    addTargetButtonVisible: boolean;\n    targetAddActive: boolean;\n    targetLatLngAcquired: boolean;\n\n    getTakeoffAltitudeVisible: boolean;\n\n    getChangeAltitudeVisible: boolean;\n\n    changeAltitudeValue: number;\n\n    waypointAddActive: boolean;\n\n    showWaypointDialog: boolean;\n\n    manualModeChangeIndicatorVisible: boolean;\n    guidedModeChangeIndicatorVisible: boolean;\n    rtlModeChangeIndicatorVisible: boolean;\n    orbitModeChangeIndicatorVisible: boolean;\n\n    hasLanded(): void;\n\n}\n\nclass FlightControlMode {\n\n    // Flag to show RTL button\n    rtlButtonVisible: boolean = false;\n    rtlIndicatorVisible: boolean = false;\n\n    // Flag to show guided mode button\n    guidedModeButtonVisible: boolean = false;\n\n    changeToOrbitModeButtonVisible: boolean = false;\n    orbitModeButtonVisible: boolean = false;\n    \n    targetAddActive: boolean = false;\n    addTargetButtonVisible: boolean = false;\n\n    changeToGuidedModeButtonVisible: boolean = false;\n\n    // Flag to show manual mode button\n    manualModeButtonVisible: boolean = false;\n\n    changeToManualModeButtonVisible: boolean = false;\n\n    // RTL mode button visibility\n    rtlModeButtonVisible: boolean = false;\n\n    // Flag to show takeoff command button\n    takeoffButtonVisible: boolean = false;\n\n    // Flag to show the flight resume button\n    resumeButtonVisible: boolean = false;\n    resumeIndicatorVisible: boolean = false;\n\n    // Flag to show the flight pause button\n    pauseButtonVisible: boolean = false;\n    pauseIndicatorVisible: boolean = false;\n\n    // Flag to show the set new home point button\n    setNewHomePointButtonVisible: boolean = false;\n\n    // Flag to show the change altitude button\n    changeAltitudeButtonVisible: boolean = false;\n\n    // Add waypoint button visible\n    addWaypointButtonVisible: boolean = false;\n\n    // Flag whether get altitude is visible\n    getTakeoffAltitudeVisible: boolean = false;\n\n    // Flag whether change altitude dialog is visible\n    getChangeAltitudeVisible: boolean = false;\n\n    modesOpen: boolean = false;\n\n    // Current session controller\n    sessionController: SessionController;\n\n    // Current drone for session\n    drone: IDrone;\n\n    // Current drone status\n    status: SystemStatus;\n\n    // Current flight mode\n    flightMode: FlightMode;\n\n    // Flag to indicate if drone is armed\n    armed: boolean;\n\n    // Current mode state\n    currentMode: IMode;\n\n    // Manual Mode\n    manualMode: ManualMode = new ManualMode(this.bindings.$ctrl);\n\n    // Guided Mode\n    guidedMode: GuidedMode = new GuidedMode(this.bindings.$ctrl);\n\n    // RTL Mode\n    rtlMode: RTLMode = new RTLMode(this.bindings.$ctrl);\n\n    // Orbit Mode\n    orbitMode: OrbitMode = new OrbitMode(this.bindings.$ctrl);\n\n    waypointAddActive: boolean = false;\n\n    showWaypointDialog: boolean = false;\n    waypointAltitudeValue: number = 50;\n    waypointSpeedValue: number = 5;\n    waypointFlyToNow: boolean = false;\n\n    sessionColor: string;\n\n    showTargetDialog: boolean = false;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        'redProService',\n        '$mdToast'\n    ];\n    constructor(public bindings: IFlightControlMode, public red5proService: IRedProService, public mdToast: angular.material.MDToastService) {\n\n        this.sessionController.eventing.on('session-added', (ownerSession: OwnerMapSession) => {\n            \n            this.sessionColor = ownerSession.color;\n            this.drone = ownerSession.mapDrone.drone;\n            this.status = this.drone.FlightController.Telemetry.System.status;\n            this.flightMode = this.drone.FlightController.Telemetry.System.flightMode;\n\n            this.setFlightModeState();\n\n            this.drone.FlightController.Telemetry.on('System', (value: ISystem) => {\n                \n                // Check if status has changed\n                if (this.status !== value.status) {\n                    \n                    // Set new status\n                    this.status = value.status;\n\n                    // Check to see if current mode has been set\n                    if (this.currentMode) {\n                        this.currentMode.handleStatusChange(this.status);\n                    }\n                }\n\n                // Check if flight mode has changed\n                if (this.flightMode !== value.flightMode) {\n                    // Set new status\n                    this.flightMode = value.flightMode;\n\n                    // Set current flight mode\n                    this.setFlightModeState();                    \n                }\n\n                if (this.armed !== value.armed) {\n\n                }\n\n            });\n\n            this.bindings.$applyAsync();\n\n        });\n\n        this.sessionController.eventing.on('map-loaded', () => {\n            this.initializeMapMouseHandler();\n        });\n    }\n\n    manualModeChangeIndicatorVisible: boolean = false;\n    guidedModeChangeIndicatorVisible: boolean = false;\n    rtlModeChangeIndicatorVisible: boolean = false;\n    orbitModeChangeIndicatorVisible: boolean = false;\n\n    setManualMode(): void {\n        this.guidedModeChangeIndicatorVisible = true;\n        this.rtlModeChangeIndicatorVisible = true;\n        this.orbitModeChangeIndicatorVisible = true;\n        \n        this.drone.FlightController.setFlightMode(FlightMode.Loiter).then( () => {\n\n        }).catch((error) => {\n\n        });\n    }\n\n    setGuidedMode(): void {\n        this.manualModeChangeIndicatorVisible = true;\n        this.rtlModeChangeIndicatorVisible = true;\n        this.orbitModeChangeIndicatorVisible = true;\n\n        this.drone.FlightController.setFlightMode(FlightMode.Guided).then( () => {\n\n        }).catch((error) => {\n\n        });\n    }\n\n\n    setOrbitMode(): void {\n        this.manualModeChangeIndicatorVisible = true;\n        this.rtlModeChangeIndicatorVisible = true;\n        this.guidedModeChangeIndicatorVisible = true;\n\n        this.drone.FlightController.setFlightMode(FlightMode.Orbit).then( () => {\n\n        }).catch((error) => {\n\n        });\n    }\n\n    setFlightModeState(): void {\n        \n        if (this.currentMode) {\n            this.currentMode.teardownUI();\n            this.bindings.$applyAsync();\n        }\n\n        switch (this.flightMode) {\n            case FlightMode.Loiter:\n                this.currentMode = this.manualMode;\n                break;\n            case FlightMode.Stabilize:\n                this.currentMode = this.manualMode;\n                break;\n            case FlightMode.AltHold:\n                this.currentMode = this.manualMode;\n                break;\n            case FlightMode.Guided:\n                this.currentMode = this.guidedMode;\n                break;\n            case FlightMode.RTL:\n                this.currentMode = this.rtlMode;\n                break;\n            case FlightMode.Orbit:\n                this.currentMode = this.orbitMode;\n                break;\n            default:\n                this.currentMode = null;\n                break;\n        }\n\n        if (this.currentMode) {\n            this.currentMode.initialize(this.status, this.flightMode, this.drone);\n            this.currentMode.setupUI();\n            this.bindings.$applyAsync();\n        }\n\n    }\n\n    rtl(): void {\n        this.rtlIndicatorVisible = true;\n        this.currentMode.handleButtonClick(ButtonActions.RTL);\n    }\n\n    takeoff(): void {\n        this.currentMode.handleButtonClick(ButtonActions.Takeoff);\n    }\n\n    resume(): void {\n        this.resumeIndicatorVisible = true;\n        this.currentMode.handleButtonClick(ButtonActions.Resume);\n    }\n\n    pause(): void {\n        this.pauseIndicatorVisible = true;\n        this.currentMode.handleButtonClick(ButtonActions.Pause);\n    }\n\n    setHomePoint(): void {\n        this.currentMode.handleButtonClick(ButtonActions.SetHomePoint);\n    }\n\n    changeAltitude(): void {\n        this.currentMode.handleButtonClick(ButtonActions.ChangeAltitude);\n    }\n\n    addWaypoint(): void {\n        if (!this.mouseHandler) {\n            console.log('initialize mouse handler');\n            this.initializeMapMouseHandler();\n        }\n\n        if (this.waypointAddActive) {\n            this.waypointAddActive = false;\n        } else {\n            this.showWaypointDialog = true;\n        }\n\n    }\n\n    targetLat: number;\n    targetLng: number;\n    targetLatLngAcquired: boolean = false;\n    \n    addOrbitTarget(): void {\n        if (!this.mouseHandler) {\n            console.log('initialize mouse handler');\n            this.initializeMapMouseHandler();\n        }\n\n        if (this.targetAddActive) {\n            this.targetAddActive = false;\n            this.targetLatLngAcquired = false;\n            this.sessionController.activeSession.mapEntityCollection.entities.remove(this.currentOrbitTarget);\n            this.sessionController.activeSession.mapEntityCollection.entities.remove(this.currentOrbitRadius);\n        } else {\n            this.targetAddActive = true;\n            this.mdToast.show(\n            this.mdToast.simple()\n                .content('Select orbit target on map.')\n                .position('top left')\n                .hideDelay(3000)\n            );\n            //this.showTargetDialog = true;\n        }\n    }\n\n    takeoffAltitude: number = 50;\n    isRecordingFromTakeoff: boolean = false;\n\n    takeoffToAltitude(): void {\n\n        this.drone.FlightController.takeoff(this.takeoffAltitude).then(() => {\n            if (this.sessionController.ownerSession.startRecording) {\n                this.drone.Camera.startRecording().then(() => {\n                    this.isRecordingFromTakeoff = true;\n                    console.log('recording started');\n                    try {\n                        this.red5proService.startVODRecording(this.sessionController.ownerSession.name).then((recording: boolean) => {\n                            console.log('server vod recording started');\n                        });\n                    } catch (error) {\n                        console.log(error);\n                    }\n                }).catch((error) => {\n                    console.log(error);\n                });\n            }\n        }).catch((error) => {\n            console.log(error);\n        });\n\n        this.getTakeoffAltitudeVisible = false;\n    }\n\n    hasLanded(): void {\n        if (this.isRecordingFromTakeoff) {\n            if (this.sessionController.ownerSession.startRecording) {\n                this.drone.Camera.stopRecording().then(() => {\n                    console.log('recording stopped');\n                    try {\n                        this.red5proService.stopVODRecording(this.sessionController.ownerSession.name).then((recording: boolean) => {\n                            console.log('server vod recording stopped');\n                            this.isRecordingFromTakeoff = false;\n                        });\n                    } catch (error) {\n                        console.log(error);\n                    }\n                }).catch((error) => {\n                    console.log(error);\n                });\n            }\n        }\n    }\n\n    cancelTakeoff(): void {\n        this.getTakeoffAltitudeVisible = false;\n    }\n\n    changeAltitudeValue: number;\n    changeAltitudeTo(): void {\n\n        if (this.currentMode.flightMode === FlightMode.Guided) {\n\n            this.drone.FlightController.Guided.setAcceptanceRadius(1);\n\n            this.drone.FlightController.Guided.addWaypoint({\n                lattitude: this.drone.FlightController.Telemetry.Position.lattitude,\n                longitude: this.drone.FlightController.Telemetry.Position.longitude,\n                altitude: this.changeAltitudeValue,\n                speed: 5,\n                name: this.getNextName()\n            }, true).then(() => {\n\n            }).catch((error) => {\n                console.log(error);\n            });\n\n            this.getChangeAltitudeVisible = false;\n        }\n\n        if (this.currentMode.flightMode === FlightMode.Orbit) {\n            \n            this.drone.FlightController.Orbit.orbit(this.targetLat, this.targetLng, this.changeAltitudeValue, this.targetRadius,\n            this.targetDirection, this.targetVelocity).then(() => {\n                this.getChangeAltitudeVisible = false;\n            }).catch((error) => {\n                // Keep dialog open and show error\n                this.getChangeAltitudeVisible = false;\n                console.log(error);\n            });\n        \n        }\n    }\n\n    cancelChangeAltitude(): void {\n        this.getChangeAltitudeVisible = false;\n    }\n\n    closeWaypointDialog(): void {\n        this.showWaypointDialog = false;\n    }\n\n    closeActiveDialog(): void {\n        this.showTargetDialog = false;\n        this.targetAddActive = false;\n        this.targetLatLngAcquired = false;\n        this.sessionController.activeSession.mapEntityCollection.entities.remove(this.currentOrbitTarget);\n        this.sessionController.activeSession.mapEntityCollection.entities.remove(this.currentOrbitRadius);\n    }\n\n    setWaypointsActive(): void {\n        this.closeWaypointDialog();\n        this.waypointAddActive = true;\n    }\n    \n    sendingTargetToDrone: boolean = false;\n    setTargetActive(): void {\n        // Convert time into angular velocity\n        let av: number = 360 / this.targetVelocity;\n\n        // Check if number exceeds max velocity\n        \n        \n        this.sendingTargetToDrone = true;\n        this.drone.FlightController.Orbit.orbit(this.targetLat, this.targetLng, this.targetAltitude, this.targetRadius,\n        this.targetDirection, av).then(() => {\n            this.showTargetDialog = false;\n            this.targetAddActive = false;\n            this.targetLatLngAcquired = false;\n            this.sendingTargetToDrone = false;\n        }).catch((error) => {\n            // Keep dialog open and show error\n            this.sendingTargetToDrone = false;\n            console.log(error);\n        });\n    }\n\n    mouseHandler: Cesium.ScreenSpaceEventHandler;\n    initializeMapMouseHandler(): void {\n\n            // wire up left mouse click event\n        this.mouseHandler = new Cesium.ScreenSpaceEventHandler(this.sessionController.map.canvas, false);\n\n        this.mouseHandler.setInputAction((click: any) => {\n                this.handleMouseClick(click);\n            },\n            Cesium.ScreenSpaceEventType.LEFT_CLICK\n        );\n    }\n\n    handleMouseClick(click: any): void {\n\n        if (!this.waypointAddActive && !this.targetAddActive) {\n            return;\n        }\n\n        \n        //let start: any = new Date().getTime();\n\n        var ray: any = this.sessionController.map.camera.getPickRay(click.position);\n        var position: any = this.sessionController.map.scene.globe.pick(ray, this.sessionController.map.scene);\n        //console.log(position);\n        if (Cesium.defined(position)) {\n            // Make the height of the position = 0 so it works with groundPrimitive\n            var positionCartographic: Cesium.Cartographic = this.sessionController.map.scene.globe.ellipsoid.cartesianToCartographic(position);\n            positionCartographic.height = 0;\n            //position = this.map.scene.globe.ellipsoid.cartographicToCartesian(positionCartographic);\n\n            //var cartographic: Cesium.Cartographic = Cesium.Cartographic.fromCartesian(position);\n            var longitudeString: number = Cesium.Math.toDegrees(positionCartographic.longitude);\n            var latitudeString: number = Cesium.Math.toDegrees(positionCartographic.latitude);\n\n            if (this.waypointAddActive) {\n                this.drone.FlightController.Guided.addWaypoint({\n                    lattitude: latitudeString,\n                    longitude: longitudeString,\n                    altitude: this.waypointAltitudeValue,\n                    speed: this.waypointSpeedValue,\n                    name: this.getNextName()\n                }, this.waypointFlyToNow).then(() => {\n                    // console.log('waypoing added callback');\n\n                    // let end: any = new Date().getTime();\n                    // let time: any = end - start;\n                    // console.log('Execution time: ' + time);\n                });\n            }\n\n            if (this.targetAddActive) {\n                // If we have a target orbit point then calculate the radius distance and show dialog\n                if (this.targetLatLngAcquired) {\n                    let distance: number = Conversions.distance2(this.targetLat, this.targetLng, latitudeString, longitudeString);\n                    this.targetRadius = Conversions.roundToTwo(distance);\n                    this.targetAltitude = Conversions.roundToTwo(this.sessionController.ownerSession.mapDrone.currentAGLAlt);\n\n                    this.sessionController.activeSession.mapEntityCollection.entities.remove(this.currentOrbitRadius);\n                    this.currentOrbitRadius = this.sessionController.activeSession.mapEntityCollection.entities.add({\n                        position : Cesium.Cartesian3.fromDegrees(this.targetLng, this.targetLat, this.sessionController.ownerSession.mapDrone.currentAlt),\n                        ellipse : {\n                            semiMinorAxis : this.targetRadius,\n                            semiMajorAxis : this.targetRadius,\n                            height: this.sessionController.ownerSession.mapDrone.currentAlt,\n                            material : Cesium.Color.TRANSPARENT,\n                            outline : true,\n                            outlineColor : Cesium.Color.fromCssColorString('#0a92ea'),\n                            outlineWidth: 3\n                        }\n                    });\n\n                    this.showTargetDialog = true;\n                } else {\n                    this.targetLat = latitudeString;\n                    this.targetLng = longitudeString;\n                    this.targetLatLngAcquired = true;\n                    \n                    this.sessionController.activeSession.mapEntityCollection.entities.remove(this.currentOrbitTarget);\n                    this.currentOrbitTarget = this.sessionController.activeSession.mapEntityCollection.entities.add({\n                        position : Cesium.Cartesian3.fromDegrees(longitudeString, latitudeString, 1),\n                        point : {\n                            color : Cesium.Color.fromCssColorString('#0a92ea'),\n                            pixelSize : 10,\n                            outlineColor : Cesium.Color.WHITE,\n                            outlineWidth : 3,\n                            heightReference : Cesium.HeightReference.RELATIVE_TO_GROUND\n                        }\n                    });\n\n                    this.mdToast.show(\n                    this.mdToast.simple()\n                        .content('Select orbit radius point on map.')\n                        .position('top left')\n                        .hideDelay(3000)\n                    );\n                }\n            }\n        }\n    }\n\n    currentOrbitTarget: any;\n    currentOrbitRadius: any;\n\n    targetAltitude: number = 50;\n    targetRadius: number = 10;\n    targetDirection: boolean = true;\n    targetVelocity: number = 20;\n\n    wayPointNames: Array<string> = ['A', 'B', 'C', 'D', 'E', 'F', 'G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z', 'AA', 'AB', 'AC', 'AD', 'AE', 'AF', 'AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ', 'BA', 'BB', 'BC', 'BC', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ'];\n    nextNameIndex: number = 0;\n\n    getNextName(): string {\n        let current: number = this.nextNameIndex;\n        this.nextNameIndex++;\n        return this.wayPointNames[current];\n    }\n}\n\nenum ButtonActions {\n    Takeoff,\n    RTL,\n    Resume,\n    Pause,\n    SetHomePoint,\n    ChangeAltitude,\n    AddWaypoint\n}\n\ninterface IMode {\n\n    setupUI(): void;\n    teardownUI(): void;\n    handleButtonClick(button: ButtonActions): void;\n    handleStatusChange(systemStatus: SystemStatus): void;\n    initialize(systemStatus: SystemStatus, flightMode: FlightMode, drone: IDrone): void;\n    flightMode: FlightMode;\n}\n\nclass OrbitMode implements IMode {\n    \n    systemStatus: SystemStatus;\n    flightMode: FlightMode;\n    drone: IDrone;\n\n    constructor(public flightControlMode: IFlightControlMode) {\n\n    }\n\n    initialize(systemStatus: SystemStatus, flightMode: FlightMode, drone: IDrone): void {\n        this.systemStatus = systemStatus;\n        this.flightMode = flightMode;\n        this.drone = drone;\n\n        this.drone.FlightController.Telemetry.on('System', (value: ISystem) => {\n            this.flightControlMode.pauseButtonVisible = !value.paused;\n            this.flightControlMode.resumeButtonVisible = value.paused;\n\n            this.flightControlMode.pauseIndicatorVisible = false;\n            this.flightControlMode.resumeIndicatorVisible = false;\n        }); \n    }\n\n    setupUI(): void {\n        // Turn on primary mode on/off buttons\n        this.flightControlMode.orbitModeButtonVisible = true;\n        this.flightControlMode.changeToManualModeButtonVisible = true;\n        this.flightControlMode.changeToGuidedModeButtonVisible = true;\n        this.flightControlMode.setNewHomePointButtonVisible = true;\n\n        // Turn off indicators from mode change\n        this.flightControlMode.manualModeChangeIndicatorVisible = false;\n        this.flightControlMode.guidedModeChangeIndicatorVisible = false;\n        this.flightControlMode.rtlModeChangeIndicatorVisible = false;\n        this.flightControlMode.orbitModeChangeIndicatorVisible = false;\n\n        // Let status change handle status specific buttons\n        this.handleStatusChange(this.systemStatus);\n\n    }\n\n    teardownUI(): void {\n        this.flightControlMode.orbitModeButtonVisible = false;\n        this.flightControlMode.guidedModeButtonVisible = false;\n        this.flightControlMode.setNewHomePointButtonVisible = false;\n        this.flightControlMode.rtlButtonVisible = false;\n        this.flightControlMode.changeAltitudeButtonVisible = false;\n        this.flightControlMode.pauseButtonVisible = false;\n        this.flightControlMode.resumeButtonVisible = false;\n        this.flightControlMode.takeoffButtonVisible = false;\n        this.flightControlMode.changeToManualModeButtonVisible = false;\n        this.flightControlMode.changeToGuidedModeButtonVisible = false;\n        this.flightControlMode.addTargetButtonVisible = false;\n\n        this.flightControlMode.targetAddActive = false;\n        this.flightControlMode.targetLatLngAcquired = false;\n    }\n\n    handleButtonClick(button: ButtonActions): void {\n\n        switch (button) {\n            case ButtonActions.RTL:\n                this.drone.FlightController.setFlightMode(FlightMode.RTL).then(() => {\n\n                }).catch((error) => {\n                    // TODO: handle error changing modes\n                });\n                break;\n            case ButtonActions.SetHomePoint:\n                //this.drone.FlightController.setHomePoint(lat/lng);\n                break;\n            case ButtonActions.ChangeAltitude:\n                this.flightControlMode.changeAltitudeValue = this.drone.FlightController.Telemetry.Position.altitudeAGL;\n                this.flightControlMode.getChangeAltitudeVisible = true;\n                break;\n            case ButtonActions.Pause:\n                this.drone.FlightController.pause(true).then(() => {\n                    \n                }).catch((error) => {\n                    console.log(error);\n                });\n                break;\n            case ButtonActions.Resume:\n                this.drone.FlightController.pause(false).then(() => {\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n                break;        \n            default:\n                break;\n        }\n    }\n\n    handleStatusChange(systemStatus: SystemStatus): void {\n        switch (systemStatus) {\n            // System is active and might be already airborne. Motors are engaged.\n            case SystemStatus.Active:\n                this.flightControlMode.rtlButtonVisible = true;\n                this.flightControlMode.changeAltitudeButtonVisible = true;\n                this.flightControlMode.pauseButtonVisible = true;\n                this.flightControlMode.setNewHomePointButtonVisible = true;\n                this.flightControlMode.addTargetButtonVisible = true;\n                break;\n            // System is booting up.\n            case SystemStatus.Booting:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is calibrating and not flight-ready.\n            case SystemStatus.Calibrating:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is in a non-normal flight mode. It can however still navigate.\n            case SystemStatus.Critical:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.\n            case SystemStatus.Emergency:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System just initialized its power-down sequence, will shut down now.\n            case SystemStatus.PowerOff:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is grounded and on standby. It can be launched any time.\n            case SystemStatus.Standby:\n                this.flightControlMode.rtlButtonVisible = false;\n                this.flightControlMode.hasLanded();\n                break;\n            // Uninitialized system, state is unknown.\n            case SystemStatus.Unknown:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            default:\n                break;\n        }\n    }\n\n}\n\nclass GuidedMode implements IMode {\n    \n    systemStatus: SystemStatus;\n    flightMode: FlightMode;\n    drone: IDrone;\n\n    constructor(public flightControlMode: IFlightControlMode) {\n\n    }\n\n    initialize(systemStatus: SystemStatus, flightMode: FlightMode, drone: IDrone): void {\n        this.systemStatus = systemStatus;\n        this.flightMode = flightMode;\n        this.drone = drone;\n\n        // this.drone.FlightController.Guided.on('waypoint-added', (wayPoint: IGuidedWaypoint, index: number) => {\n        //     console.log('waypoint-added: ' + index + ':' + wayPoint);\n        // });\n\n        // this.drone.FlightController.Guided.on('waypoint-removed', (index: number) => {\n        //     console.log('waypoint-removed: ' + index);\n        // });\n\n        // this.drone.FlightController.Guided.on('waypoints-changed', () => {\n        //     console.log('waypoints-changed');\n        // });\n\n        this.drone.FlightController.Telemetry.on('System', (value: ISystem) => {\n            this.flightControlMode.pauseButtonVisible = !value.paused;\n            this.flightControlMode.resumeButtonVisible = value.paused;\n\n            this.flightControlMode.pauseIndicatorVisible = false;\n            this.flightControlMode.resumeIndicatorVisible = false;\n        });\n\n        // this.drone.FlightController.Guided.on('playback-paused', () => {\n        //     this.flightControlMode.pauseButtonVisible = false;\n        //     this.flightControlMode.resumeButtonVisible = true;\n        // });\n\n        // this.drone.FlightController.Guided.on('playback-resumed', () => {\n        //     this.flightControlMode.resumeButtonVisible = false;\n        //     this.flightControlMode.pauseButtonVisible = true;\n        // });\n\n        // this.drone.FlightController.Guided.on('waypoint-error', (index: number, error: any) => {\n        //     console.log('waypoint-error: ' + index);\n        // });\n\n        // this.drone.FlightController.Guided.on('waypoint-started', (index: number) => {\n        //     console.log('waypoint-started: ' + index);\n        // });\n\n        // this.drone.FlightController.Guided.on('waypoint-reached', (index: number) => {\n        //     console.log('waypoint-reached: ' + index);\n        // });\n        \n    }\n\n    setupUI(): void {\n        // Turn on primary mode on/off buttons\n        this.flightControlMode.guidedModeButtonVisible = true;\n        this.flightControlMode.changeToManualModeButtonVisible = true;\n        this.flightControlMode.changeToOrbitModeButtonVisible = true;\n        this.flightControlMode.addWaypointButtonVisible = true;\n        this.flightControlMode.setNewHomePointButtonVisible = true;\n\n        // Turn off indicators from mode change\n        this.flightControlMode.manualModeChangeIndicatorVisible = false;\n        this.flightControlMode.guidedModeChangeIndicatorVisible = false;\n        this.flightControlMode.rtlModeChangeIndicatorVisible = false;\n        this.flightControlMode.orbitModeChangeIndicatorVisible = false;\n\n        // Let status change handle status specific buttons\n        this.handleStatusChange(this.systemStatus);\n\n    }\n\n    teardownUI(): void {\n        this.flightControlMode.guidedModeButtonVisible = false;\n        this.flightControlMode.setNewHomePointButtonVisible = false;\n        this.flightControlMode.rtlButtonVisible = false;\n        this.flightControlMode.changeAltitudeButtonVisible = false;\n        this.flightControlMode.pauseButtonVisible = false;\n        this.flightControlMode.resumeButtonVisible = false;\n        this.flightControlMode.takeoffButtonVisible = false;\n        this.flightControlMode.changeToManualModeButtonVisible = false;\n        this.flightControlMode.changeToOrbitModeButtonVisible = false;\n        this.flightControlMode.addWaypointButtonVisible = false;\n\n        this.flightControlMode.waypointAddActive = false;\n    }\n\n    handleButtonClick(button: ButtonActions): void {\n\n        switch (button) {\n            case ButtonActions.RTL:\n                this.drone.FlightController.setFlightMode(FlightMode.RTL).then(() => {\n\n                }).catch((error) => {\n                    // TODO: handle error changing modes\n                });\n                break;\n            case ButtonActions.SetHomePoint:\n                //this.drone.FlightController.setHomePoint(lat/lng);\n                break;\n            case ButtonActions.ChangeAltitude:\n                this.flightControlMode.changeAltitudeValue = this.drone.FlightController.Telemetry.Position.altitudeAGL;\n                this.flightControlMode.getChangeAltitudeVisible = true;\n                break;\n            case ButtonActions.Pause:\n                this.drone.FlightController.pause(true).then(() => {\n                    \n                }).catch((error) => {\n                    console.log(error);\n                });\n                break;\n            case ButtonActions.Resume:\n                this.drone.FlightController.pause(false).then(() => {\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n                break;\n            case ButtonActions.Takeoff:\n                this.flightControlMode.getTakeoffAltitudeVisible = true;\n                break;\n            case ButtonActions.AddWaypoint:\n                // handled in flight control mode controller for now\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    handleStatusChange(systemStatus: SystemStatus): void {\n        switch (systemStatus) {\n            // System is active and might be already airborne. Motors are engaged.\n            case SystemStatus.Active:\n                this.flightControlMode.rtlButtonVisible = true;\n                this.flightControlMode.changeAltitudeButtonVisible = true;\n                this.flightControlMode.pauseButtonVisible = true;\n                this.flightControlMode.setNewHomePointButtonVisible = true;\n\n                this.flightControlMode.takeoffButtonVisible = false;\n                break;\n            // System is booting up.\n            case SystemStatus.Booting:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is calibrating and not flight-ready.\n            case SystemStatus.Calibrating:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is in a non-normal flight mode. It can however still navigate.\n            case SystemStatus.Critical:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.\n            case SystemStatus.Emergency:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System just initialized its power-down sequence, will shut down now.\n            case SystemStatus.PowerOff:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is grounded and on standby. It can be launched any time.\n            case SystemStatus.Standby:\n                this.flightControlMode.rtlButtonVisible = false;\n                this.flightControlMode.takeoffButtonVisible = true;\n                this.flightControlMode.hasLanded();\n                break;\n            // Uninitialized system, state is unknown.\n            case SystemStatus.Unknown:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nclass RTLMode implements IMode {\n\n    systemStatus: SystemStatus;\n    flightMode: FlightMode;\n    drone: IDrone;\n\n    constructor(public flightControlMode: IFlightControlMode) {\n\n    }\n\n    initialize(systemStatus: SystemStatus, flightMode: FlightMode, drone: IDrone): void {\n        this.systemStatus = systemStatus;\n        this.flightMode = flightMode;\n        this.drone = drone;\n    }\n\n    setupUI(): void {\n        this.flightControlMode.rtlIndicatorVisible = false;\n        // Turn on primary mode on/off buttons\n        this.flightControlMode.rtlModeButtonVisible = true;\n\n        this.flightControlMode.changeToManualModeButtonVisible = true;\n        this.flightControlMode.changeToGuidedModeButtonVisible = true;\n\n        // Turn off indicators from mode change\n        this.flightControlMode.manualModeChangeIndicatorVisible = false;\n        this.flightControlMode.guidedModeChangeIndicatorVisible = false;\n        this.flightControlMode.rtlModeChangeIndicatorVisible = false;\n        this.flightControlMode.orbitModeChangeIndicatorVisible = false;\n\n        // Let status change handle status specific buttons\n        this.handleStatusChange(this.systemStatus);\n    }\n\n    teardownUI(): void {\n        this.flightControlMode.rtlModeButtonVisible = false;\n        this.flightControlMode.pauseButtonVisible = false;\n\n        this.flightControlMode.changeToManualModeButtonVisible = false;\n        this.flightControlMode.changeToGuidedModeButtonVisible = false;\n    }\n\n    handleButtonClick(button: ButtonActions): void {\n        switch (button) {\n            case ButtonActions.Pause:\n                this.drone.FlightController.setFlightMode(FlightMode.Guided).then(() => {\n\n                }).catch((error) => {\n                    console.log(error);\n                });\n                break;        \n            default:\n                break;\n        }\n    }\n\n    handleStatusChange(systemStatus: SystemStatus): void {\n        switch (systemStatus) {\n            // System is active and might be already airborne. Motors are engaged.\n            case SystemStatus.Active:\n                this.flightControlMode.pauseButtonVisible = true;\n                break;\n            // System is booting up.\n            case SystemStatus.Booting:\n\n                break;\n            // System is calibrating and not flight-ready.\n            case SystemStatus.Calibrating:\n\n                break;\n            // System is in a non-normal flight mode. It can however still navigate.\n            case SystemStatus.Critical:\n\n                break;\n            // System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.\n            case SystemStatus.Emergency:\n\n                break;\n            // System just initialized its power-down sequence, will shut down now.\n            case SystemStatus.PowerOff:\n\n                break;\n            // System is grounded and on standby. It can be launched any time.\n            case SystemStatus.Standby:\n                this.flightControlMode.pauseButtonVisible = false;\n                this.flightControlMode.hasLanded();\n                break;\n            // Uninitialized system, state is unknown.\n            case SystemStatus.Unknown:\n\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nclass ManualMode implements IMode {\n\n    systemStatus: SystemStatus;\n    flightMode: FlightMode;\n    drone: IDrone;\n\n    constructor(public flightControlMode: IFlightControlMode) {\n\n    }\n\n    initialize(systemStatus: SystemStatus, flightMode: FlightMode, drone: IDrone): void {\n        this.systemStatus = systemStatus;\n        this.flightMode = flightMode;\n        this.drone = drone;\n    }\n\n    setupUI(): void {\n        // Turn on primary mode on/off buttons\n        this.flightControlMode.manualModeButtonVisible = true;\n        this.flightControlMode.setNewHomePointButtonVisible = true;\n        this.flightControlMode.changeToGuidedModeButtonVisible = true;\n        this.flightControlMode.changeToOrbitModeButtonVisible = true;\n\n        // Turn off indicators from mode change\n        this.flightControlMode.manualModeChangeIndicatorVisible = false;\n        this.flightControlMode.guidedModeChangeIndicatorVisible = false;\n        this.flightControlMode.rtlModeChangeIndicatorVisible = false;\n        this.flightControlMode.orbitModeChangeIndicatorVisible = false;\n\n        // Let status change handle status specific buttons\n        this.handleStatusChange(this.systemStatus);\n    }\n\n    teardownUI(): void {\n        this.flightControlMode.manualModeButtonVisible = false;\n        this.flightControlMode.setNewHomePointButtonVisible = false;\n        this.flightControlMode.rtlButtonVisible = false;\n        this.flightControlMode.changeToGuidedModeButtonVisible = false;\n        this.flightControlMode.changeToOrbitModeButtonVisible = false;\n    }\n\n    handleButtonClick(button: ButtonActions): void {\n\n        switch (button) {\n            case ButtonActions.RTL:\n                this.drone.FlightController.setFlightMode(FlightMode.RTL).then(() => {\n\n                }).catch((error) => {\n                    // TODO: handle error changing modes\n                });\n                break;\n            case ButtonActions.SetHomePoint:\n                //this.drone.FlightController.setHomePoint(lat/lng);\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    handleStatusChange(systemStatus: SystemStatus): void {\n        switch (systemStatus) {\n            // System is active and might be already airborne. Motors are engaged.\n            case SystemStatus.Active:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System is booting up.\n            case SystemStatus.Booting:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is calibrating and not flight-ready.\n            case SystemStatus.Calibrating:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is in a non-normal flight mode. It can however still navigate.\n            case SystemStatus.Critical:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.\n            case SystemStatus.Emergency:\n                this.flightControlMode.rtlButtonVisible = true;\n                break;\n            // System just initialized its power-down sequence, will shut down now.\n            case SystemStatus.PowerOff:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            // System is grounded and on standby. It can be launched any time.\n            case SystemStatus.Standby:\n                this.flightControlMode.rtlButtonVisible = false;\n                this.flightControlMode.hasLanded();\n                break;\n            // Uninitialized system, state is unknown.\n            case SystemStatus.Unknown:\n                this.flightControlMode.rtlButtonVisible = false;\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport default angular.module('DroneSense.Web.FlightControlMode', [\n\n]).component('dsFlightControlMode', {\n    bindings: {\n        sessionController: '<'\n    },\n    controller: FlightControlMode,\n    templateUrl: './app/components/flightControlMode/flightControlMode.html'\n});\n"],"sourceRoot":"/source/"}