{"version":3,"sources":["components/flightPlansViewer/flightPlansViewer.ts"],"names":[],"mappings":"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","file":"components/flightPlansViewer/flightPlansViewer.js","sourcesContent":["import flightPlanCard from '../flightPlanCard/flightPlanCard';\nimport flightPlanCardDetail from '../flightPlanCardDetail/flightPlanCardDetail';\nimport viewerToolbar from '../viewerToolbar/viewerToolbar';\nimport ngLazyShow from '../../common/ngLazyShow';\nimport { FlightPlan, User, Tag } from '@dronesense/model';\nimport _ from 'lodash';\nimport { IDataService } from '../../services/dataService';\nimport DataService from '../../services/dataService';\n\nexport interface IFlightPlansViewer extends ng.IScope {\n}\n\nclass FlightPlansViewer {\n\n    gridVisible: boolean;\n\n    flightPlans: Array<FlightPlan> = [];\n\n    searchText: string;\n\n    masterTagList: Array<Tag> = [];\n\n    filter: {tags: Array<Tag>, option: string } = {\n        tags: [],\n        option: ''\n    };\n\n    sort: {options: Array<string>, orderType: string, orderDirection: boolean} = {\n        options: [],\n        orderType: '',\n        orderDirection: false\n    };\n\n    flightPlansHandle: any;\n\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$state',\n        '$mdDialog',\n        'dataService',\n        'db'\n    ];\n\n    constructor(public bindings: IFlightPlansViewer,\n                public stateService: angular.ui.IStateService,\n                public mdDialog: ng.material.MDDialogService,\n                public dataService: IDataService,\n                public db: any) {\n\n        if (stateService.params['id']) {\n            this.showFlightPlanCard(stateService.params['id']);\n        }\n\n        // Make grid the default view\n        this.gridVisible = true;\n\n        // Define sort options to give the viewer toolbar\n        this.sort.options.push('Name: A-Z');\n        this.sort.options.push('Name: Z-A');\n        this.sort.options.push('Location: A-Z');\n        this.sort.options.push('Location: Z-A');\n        this.sort.options.push('Created: Newest');\n        this.sort.options.push('Created: Oldest');\n        this.sort.options.push('Scheduled: Newest');\n        this.sort.options.push('Scheduled: Oldest');\n\n        // Set default view sort order\n        this.sort.orderType = 'Created';\n        this.sort.orderDirection = true;\n\n        // Load the flight plans from data service\n        this.dataService.getUserFlightPlans().then((flightPlans: Array<FlightPlan>): void => {\n            this.flightPlans = flightPlans;\n\n            this.bindings.$watchCollection<Array<FlightPlan>>('this.flightPlans', (newValue, oldValue): void => {\n                this.bindings.$applyAsync();\n            });\n        });\n\n        this.dataService.getAccountFlightPlanTags().then((tags: Array<Tag>) => {\n            this.masterTagList = tags;\n        });\n    }\n\n    showFlightPlanCard(id: string): void {\n        this.mdDialog.show({\n            template: '<ds-flight-plan-card-detail></ds-flight-plan-card-detail>',\n            parent: angular.element(document.body),\n            clickOutsideToClose: true,\n            escapeToClose: true\n        });\n    }\n\n    showListView(): void {\n        this.gridVisible = false;\n    }\n\n    showGridView(): void {\n        this.gridVisible = true;\n    }\n\n    addFlightPlan(): void {\n        this.stateService.go('flightplan');\n    }\n\n    // Apply selected sort from viewer toolbar component\n    sortSelected(sortItem: string): void {\n        switch (sortItem) {\n            case 'Name: A-Z':\n                this.sort.orderType = 'Name';\n                this.sort.orderDirection = false;\n                break;\n            case 'Name: Z-A':\n                this.sort.orderType = 'Name';\n                this.sort.orderDirection = true;\n                break;\n            case 'Location: A-Z':\n                this.sort.orderType = 'Location';\n                this.sort.orderDirection = false;\n                break;\n            case 'Location: Z-A':\n                this.sort.orderType = 'Location';\n                this.sort.orderDirection = true;\n                break;\n            case 'Created: Newest':\n                this.sort.orderType = 'Created';\n                this.sort.orderDirection = true;\n                break;\n            case 'Created: Oldest':\n                this.sort.orderType = 'Created';\n                this.sort.orderDirection = false;\n                break;\n            case 'Scheduled: Newest':\n                this.sort.orderType = 'Scheduled';\n                this.sort.orderDirection = true;\n                break;\n            case 'Scheduled: Oldest':\n                this.sort.orderType = 'Scheduled';\n                this.sort.orderDirection = false;\n                break;\n            default:\n                this.sort.orderType = '';\n                break;\n        }\n\n    }\n\n    searchFlightPlans(search: string): void {\n        this.searchText = search;\n    }\n\n    applyTagFilter(tags: Array<Tag>, option: string): void {\n        this.filter.tags = tags;\n        this.filter.option = option;\n    }\n\n    // TODO - Review this with tag array changes\n    tagMatches(fp: FlightPlan): boolean {\n        if (this.filter.tags.length === 0) {\n            return true;\n        } else {\n            // This filter only looks for one tag match to include in results\n            if (this.filter.option === 'any') {\n\n                if (_.intersection(fp.Tags, this.filter.tags).length > 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            // This filter makes sure that the FP contains all tags selected\n            } else {\n                if (_.without.apply(this, [this.filter.tags].concat(fp.Tags)).length === 0) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n        }\n\n\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.FlightPlansViewer', [\n    flightPlanCard.name,\n    flightPlanCardDetail.name,\n    viewerToolbar.name,\n    ngLazyShow.name,\n    DataService.name\n]).component('dsFlightPlansViewer', {\n    bindings: {\n    },\n    controller: FlightPlansViewer,\n    templateUrl: './app/components/flightPlansViewer/flightPlansViewer.html'\n});\n"],"sourceRoot":"/source/"}