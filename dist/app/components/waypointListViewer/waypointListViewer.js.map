{"version":3,"sources":["components/waypointListViewer/waypointListViewer.ts"],"names":[],"mappings":";;;;;;;YAOA;gBAcI,4BAAmB,QAA6B;oBAdpD,iBAkDC;oBApCsB,aAAQ,GAAR,QAAQ,CAAqB;oBAVhD,gBAAW,GAAY,KAAK,CAAC;oBAI7B,cAAS,GAAuB,EAAE,CAAC;oBAQ/B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,YAAwB;wBAEzE,KAAI,CAAC,cAAc,EAAE,CAAC;wBAEtB,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;oBAChC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,kDAAkD;gBAClD,2CAAc,GAAd;oBACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC;gBACjF,CAAC;gBAED,uBAAuB;gBACvB,mCAAM,GAAN,UAAO,EAAe;oBAClB,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBACxG,CAAC;gBAED,2CAAc,GAAd,UAAe,EAAe;oBAC1B,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;gBACL,CAAC;gBAED,0CAAa,GAAb,UAAc,EAAe;oBACzB,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;gBACL,CAAC;gBAtCD,cAAc;gBACP,0BAAO,GAAkB;oBAC5B,QAAQ;iBACX,CAAC;gBAqCN,yBAAC;YAAD,CAlDA,AAkDC,IAAA;YAGD,oBAAe,OAAO,CAAC,MAAM,CAAC,mCAAmC,EAAE,EAElE,CAAC,CAAC,SAAS,CAAC,sBAAsB,EAAE;gBACjC,QAAQ,EAAE;oBACN,iBAAiB,EAAE,GAAG;iBACzB;gBACD,UAAU,EAAE,kBAAkB;gBAC9B,WAAW,EAAE,6DAA6D;aAC7E,CAAC,EAAC","file":"components/waypointListViewer/waypointListViewer.js","sourcesContent":["import { SessionController } from '../flightControlViewer/sessionController';\nimport { MapSession, MapWaypoint } from '../flightControlViewer/mapSession';\n\nexport interface IWaypointListViewer extends ng.IScope {\n\n}\n\nclass WaypointListViewer {\n\n    sessionController: SessionController;\n\n    showHistory: boolean = false;\n\n    showWaypointList: boolean;\n\n    waypoints: Array<MapWaypoint> = [];\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope'\n    ];\n    constructor(public bindings: IWaypointListViewer) {\n\n        this.sessionController.eventing.on('session-added', (ownerSession: MapSession) => {\n\n            this.setupWaypoints();\n\n            this.bindings.$applyAsync();\n        });\n    }\n\n    // Set local waypoints to active session waypoints\n    setupWaypoints(): void {\n        this.waypoints = this.sessionController.activeSession.mapWaypoints.waypoints;\n    }\n\n    // Call delete waypoint\n    delete(wp: MapWaypoint): void {\n        this.sessionController.ownerSession.mapDrone.drone.FlightController.Guided.removeWaypoint(wp.index);\n    }\n\n    waypointFilter(wp: MapWaypoint): boolean {\n        if (wp.reached) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    historyFilter(wp: MapWaypoint): boolean {\n        if (wp.reached) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n}\n\n\nexport default angular.module('DroneSense.Web.WaypointListViewer', [\n\n]).component('dsWaypointListViewer', {\n    bindings: {\n        sessionController: '<'\n    },\n    controller: WaypointListViewer,\n    templateUrl: './app/components/waypointListViewer/waypointListViewer.html'\n});\n"],"sourceRoot":"/source/"}