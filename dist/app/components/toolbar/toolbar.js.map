{"version":3,"sources":["components/toolbar/toolbar.ts"],"names":[],"mappings":"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","file":"components/toolbar/toolbar.js","sourcesContent":["import { Drone, Camera } from '@dronesense/model';\n\nimport LazyShow from '../../common/ngLazyShow';\nimport KeyEnter from '../dsEnterKey/dsEnterKey';\n\nimport DroneCameraViewer from '../droneCameraViewer/droneCameraViewer';\n\nexport interface IToolbar extends ng.IScope {\n\n}\n\nclass Toolbar {\n\n    // name of view to render\n    view: string;\n\n    // callback on clear flightplan\n    onClearFlightPlan: any;\n\n    onShowSettings: any;\n\n    onLocationSearch: any;\n\n    drone: Drone;\n\n    camera: Camera;\n\n    // Google servics\n    gmapsService: any;\n    geocoder: any;\n\n    // Location Search\n    searchText: string;\n    selectedItem: any;\n    searchQuery: string;\n\n    // Flag to indicate if drone camera is showing\n    showDroneCamera: boolean = false;\n\n    // Constructor\n    static $inject: Array<string> = [\n        '$scope',\n        '$q',\n    ];\n    constructor(bindings: IToolbar,\n                public $q: ng.IQService) {\n\n        this.gmapsService = new google.maps.places.AutocompleteService();\n        this.geocoder = new google.maps.Geocoder();\n\n\n    }\n\n    search(text: string): ng.IPromise<any> {\n        var deferred: ng.IDeferred<any> = this.$q.defer();\n\n        this.getResults(text).then(\n            function (predictions: any): any {\n\n                var results: any = [];\n                if (predictions !== null) {\n\n                    for (var i: number = 0, prediction: any; prediction = predictions[i]; i++) {\n                        results.push(prediction.description);\n                    }\n                }\n                deferred.resolve(results);\n            }\n        );\n\n        return deferred.promise;\n    }\n\n    getResults(text: string): ng.IPromise<any> {\n        var deferred: ng.IDeferred<any> = this.$q.defer();\n\n        this.gmapsService.getQueryPredictions({input: text}, function (data: any): any {\n            deferred.resolve(data);\n        });\n\n        return deferred.promise;\n    }\n\n    geoCode(text: string): void {\n\n        var that: any  = this;\n\n        this.geocoder.geocode( { 'address': text }, function(results: Array<google.maps.GeocoderResult>, status: google.maps.GeocoderStatus): any {\n            if (status === google.maps.GeocoderStatus.OK && results.length > 0) {\n                var location: google.maps.LatLng = results[0].geometry.location;\n\n                that.onLocationSearch({\n                    lat: location.lat(),\n                    lng: location.lng()\n                });\n\n            }\n        });\n    }\n\n    goTo(location: string): void {\n        // Geocode location text\n        this.geoCode(location);\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.Toolbar', [\n    DroneCameraViewer.name,\n    LazyShow.name,\n    KeyEnter.name\n]).component('dsToolbar', {\n    bindings: {\n        onClearFlightPlan: '&',\n        onShowSettings: '&',\n        onLocationSearch: '&',\n        view: '@',\n        camera: '<',\n        drone: '<',\n        onSaveCamera: '&',\n        onSaveDrone: '&',\n        showDroneCamera: '<',\n        onShowDroneCamera: '&'\n    },\n    controller: Toolbar,\n    templateUrl: './app/components/toolbar/toolbar.html'\n});\n"],"sourceRoot":"/source/"}