{"version":3,"sources":["services/dataService.ts"],"names":[],"mappings":"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","file":"services/dataService.js","sourcesContent":["import { FlightPlan, User, Account, Address, Subscription, Tag } from '@dronesense/model';\nimport _ from 'lodash';\n\nexport interface IDataService {\n    getUserFlightPlans(): Promise<Array<FlightPlan>>;\n    logout(): void;\n    login(): void;\n    getUser(): Promise<User>;\n    getCurrentAccount(): Promise<Account>;\n    getAccountFlightPlanTags(): Promise<Array<Tag>>;\n}\n\n// Data service is responsible for loading data and returning to the UI for binding.  It will hold the objects across views so that\n// subsequent model creation is not necessary if the data has already been return and loaded into a model.\nclass DataService {\n\n    user: User;\n\n    userHandle: any;\n\n    accounts: Array<Account>;\n\n    accountsHandle: any;\n\n    accountsLoaded: boolean = false;\n\n    currentAccount: Account;\n\n    flightPlans: Array<FlightPlan> = [];\n\n    flightPlansLoaded: boolean = false;\n\n    flightPlansHandle: any;\n\n    flightPlanTags: Array<Tag>;\n\n    defaultIndividualAccount: any = {\n            Name: 'Individual',\n            AccountType: 'Individual',\n            CompanyName: '',\n            Admins: [this.sampleUser],\n            AvatarUrl: '',\n            Phone: '',\n            Website: '',\n            Email: '',\n            MailAddress: {\n                Address1: '1400 Winsted Ln',\n                Address2: '',\n                City: 'Austin',\n                State: 'Texas',\n                Zip: '78703',\n                Country: 'United States'\n            },\n            BillAddress: '',\n            Plan: null,\n            Users: [this.sampleUser]\n    };\n\n    testCompany: Account = new Account();\n\n\n    defaultCompanyAccount: any = {\n            Name: 'DroneSense Team 1',\n            AccountType: 'Company',\n            CompanyName: 'DroneSense',\n            Admins: [this.sampleUser],\n            AvatarUrl: '',\n            Phone: '512-573-2280',\n            Website: 'http://www.dronesense.com',\n            Email: 'contact@dronesense.com',\n            MailAddress: {\n                Address1: '1400 Winsted Ln',\n                Address2: '',\n                City: 'Austin',\n                State: 'Texas',\n                Zip: '78703',\n                Country: 'United States'\n            },\n            BillAddress: '',\n            Plan: null,\n            Users: [this.sampleUser]\n    };\n\n    sampleUser: any = {\n            UserInitials: 'CE',\n            FirstName: 'Christopher',\n            LastName: 'Eyhorn',\n            Email: 'chris.eyhorn@gmail.com',\n            TimeZone: '(UTC-06:00) Central Time (US & Canada)',\n            UnitPreference: 'Metric',\n            CoordinatePreference: 'Decimal Degrees',\n            AvatarUrl: '',\n            Accounts: [this.defaultIndividualAccount],\n            UserName: 'Christopher Eyhorn',\n            CertificateType: 'Private',\n            CertificateNumber: '12982398',\n            HireDate: new Date('05/23/2016'),\n            Phone: '5125732280',\n            ID: 'lasdlkfajkdf'\n    };\n\n    sampleUser1: any = {\n            UserInitials: 'GJ',\n            FirstName: 'Gerard',\n            LastName: 'Juarez',\n            Email: 'Gerard.Juarez@gmail.com',\n            TimeZone: 'Central',\n            UnitPreference: 'Metric',\n            CoordinatePreference: 'Decimal',\n            AvatarUrl: '',\n            Accounts: [this.defaultIndividualAccount],\n            UserName: 'Gerard Juarez',\n            CertificateType: 'Drone',\n            CertificateNumber: '12982398',\n            ID: 'lasdlkfaasdjkdf'\n    };\n\n    sampleUser2: any = {\n            UserInitials: 'RS',\n            FirstName: 'Robert',\n            LastName: 'Shoemate',\n            Email: 'Robert.Shoemate@gmail.com',\n            TimeZone: 'Central',\n            UnitPreference: 'Metric',\n            CoordinatePreference: 'Decimal',\n            AvatarUrl: '',\n            Accounts: [this.defaultIndividualAccount],\n            UserName: 'Robert Shoemate',\n            ID: 'lasdlkfasadfj3kdf'\n    };\n\n    flightPlan1: any = {\n        Name: 'XYZ CORP. #002-MOUNTAIN PASS-00001',\n        LocationName: 'Austin, Texas',\n        CreateDate: new Date('8/17/2016'),\n        ScheduledDate: new Date('8/19/2016'),\n        CreatedUser: this.sampleUser,\n        Owners: [this.sampleUser],\n        ThumbnailUrl: 'blah.com/image',\n        Tags: ['Survey', 'Iris+', 'Canon S100', 'Foo Bar']\n    };\n\n    flightPlan2: any = {\n        Name: 'ABC CORP. #002-MOUNTAIN PASS-00001',\n        LocationName: 'Foobar, Texas',\n        CreateDate: new Date('8/19/2016'),\n        ScheduledDate: new Date('10/19/2016'),\n        CreatedUser: this.sampleUser,\n        Owners: [this.sampleUser],\n        ThumbnailUrl: 'blah.com/image',\n        Tags: ['Survey', 'Phantom 4', 'Nikon S100', 'Foo Bar', 'Hello', 'Bar', 'Apple', 'Oragne', 'Chris']\n    };\n\n    flightPlan3: any = {\n        Name: 'Orbit Work around Chase Tower',\n        LocationName: 'Dallas, Texas',\n        CreateDate: new Date('8/17/2015'),\n        ScheduledDate: new Date('8/19/2016'),\n        CreatedUser: this.sampleUser,\n        Owners: [this.sampleUser],\n        ThumbnailUrl: 'blah.com/image',\n        Tags: ['Orbit', 'Phantom 4', 'Nikon S100', 'Foo Bar']\n    };\n\n    flightPlan4: any = {\n        Name: 'Capital Survey',\n        LocationName: 'Austin, Texas',\n        CreateDate: new Date('8/17/2016'),\n        ScheduledDate: new Date('8/19/2016'),\n        CreatedUser: this.sampleUser,\n        Owners: [this.sampleUser],\n        ThumbnailUrl: 'blah.com/image',\n        Tags: ['Orbit', 'Phantom 4', 'Nikon S100', 'Foo Bar']\n    };\n\n    flightPlan5: any = {\n        Name: 'Round Rock construction site',\n        ScheduledDate: new Date('8/19/2016'),\n        Distance: 3542,\n        NavPointCount: 56,\n        FlightTime: 300,\n        HighElevation: 219,\n        LowElevation: 100,\n        ThumbnailUrl: 'blah.com/image',\n        LocationName: 'Austin, Texas',\n        LocationLatLng: '30.2672° N, 97.7431° W',\n        MaxDistance: 234,\n        CreateDate: new Date('8/17/2016'),\n        ModifiedDate: new Date('8/17/2016'),\n        CreatedUser: this.sampleUser,\n        ModifiedUser: this.sampleUser,\n        Owners: [this.sampleUser],\n        Notes: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip exa commodo.',\n        Tags: [{Name: 'Survey', ID: '1'}, { Name: 'Iris+', ID: '2'}, { Name: 'Canon S100', ID: '3'}, { Name: 'Foo Bar', ID: '4'}],\n        Drone: {\n            Name: 'Inspire 1'\n        },\n        Camera: {\n            Name: 'Inspire 1 X5'\n        }\n    };\n\n    betaPlan: Subscription;\n\n    sampleUserFlightPlans: any = [this.flightPlan1, this.flightPlan2, this.flightPlan3, this.flightPlan4, this.flightPlan5];\n\n    static $inject: Array<string> = [\n        'db'\n    ];\n\n    constructor(public db: any) {\n\n        this.testCompany.Name = 'DroneSense';\n        this.testCompany.Users = [];\n        this.testCompany.Users.push(this.sampleUser);\n        this.testCompany.Users.push(this.sampleUser1);\n        this.testCompany.Users.push(this.sampleUser2);\n        this.testCompany.Email = this.sampleUser.Email;\n        this.testCompany.Website = 'http://wwww.dronesense.com';\n        this.testCompany.Phone = '512-573-2280';\n\n        this.testCompany.MailAddress = new Address();\n        \n        this.testCompany.Admins = [];\n        this.testCompany.Admins.push(this.sampleUser1);\n\n        this.betaPlan = new Subscription();\n        this.betaPlan.PlanName = 'DroneSense Beta';\n        this.betaPlan.BillingFrequency = 'Monthly';\n        \n        this.testCompany.Plan = this.betaPlan;\n\n        // Return mock data here\n        this.user = this.sampleUser;\n        this.currentAccount = this.testCompany;\n        this.accountsLoaded = true;\n\n        this.flightPlansLoaded = true;\n        this.flightPlans = this.sampleUserFlightPlans;\n\n    }\n\n    getFlightPlanTags(): Promise<Array<string>> {\n        return new Promise<Array<string>>((resolve, reject) => {\n            _.union(this.flightPlan1.Tags, this.flightPlan2.Tags, this.flightPlan3.Tags, this.flightPlan4.Tags, this.flightPlan5.Tags);\n        });\n    }\n\n    getCurrentAccount(): Promise<Account> {\n\n        return new Promise<Account>((resolve, reject) => {\n            if (this.accountsLoaded) {\n                // TODO remove only for testing this.setActiveAccount();\n                resolve(this.currentAccount);\n            } else {\n                this.getAccounts().then((accounts: Array<Account>) => {\n                    this.setActiveAccount();\n                    resolve(this.currentAccount);\n                });\n            }\n        });\n\n    }\n\n    getAccountFlightPlanTags(): Promise<Array<Tag>> {\n                return new Promise<Array<Tag>>((resolve, reject) => {\n\n            let foo: any;\n            foo = [{ Name: 'Survey', ID: '1'}, { Name: 'Orbit', ID: '2'}, { Name: 'Waypoint', ID: '3'}, { Name: 'Foo', ID: '4'}];\n            return resolve(foo);\n        }); \n    }\n\n    private setActiveAccount(): void {\n        if (this.accountsLoaded && this.user) {\n            this.accounts.forEach((account: Account): void => {\n                if (this.user.LastLoadedAccountName === account.Name) {\n                    this.currentAccount = account;\n                }\n            });\n            // Handle case where the current account didn't get set because of no match\n            if (!this.currentAccount) {\n                if (this.accounts[0]) {\n                    this.currentAccount = this.accounts[0];\n                }\n            }\n        }\n    }\n\n    private getAccounts(): Promise<Array<Account>> {\n        return new Promise<Array<Account>>((resolve, reject) => {\n            if (this.accountsLoaded) {\n                return resolve(this.accounts);\n            } else {\n                this.accountsHandle = this.db.accounts.getAccountsForUser(this.user);\n\n                this.accountsHandle.once(this.accountsHandle.EVENTS.ACCOUNT_LIST_CHANGED, (data: any): void => {\n                    \n                    data.forEach((handle: any, index: number): void => {\n                        this.addAccount(handle);\n                    });\n                    \n                    // Set loaded flag\n                    this.accountsLoaded = true;\n\n                    // Wire up on list changed callback\n                    this.listenForAccountChanges();\n\n                    // Resolve with flight plans array\n                    return resolve(this.accounts);\n                });\n            }\n        });\n    }\n\n    getUser(): Promise<User> {\n        return new Promise<User>((resolve, reject) => {\n            if (this.user) {\n                return resolve(this.user);\n            } else {\n                this.userHandle = this.db.users.getHandleForSession();\n\n                this.userHandle.once(this.userHandle.EVENTS.DATA_CHANGED, (data: any): void => {\n                    if (data) {\n                        this.user = new User(data.handle);\n                        return resolve(this.user);\n\n                    } else {\n                        return reject('No user returned.');\n                    }\n                });\n            }\n        });\n    }\n\n    getUserFlightPlans(): Promise<Array<FlightPlan>> {\n        return new Promise<Array<FlightPlan>>((resolve, reject) => {\n            if (this.flightPlansLoaded) {\n                return resolve(this.flightPlans);\n            } else {\n\n                this.flightPlansHandle = this.db.flightplans.getFlightPlansForUser();\n\n                // Call once on the handle for the initial flight plan load\n                this.flightPlansHandle.once(this.flightPlansHandle.EVENTS.FLIGHTPLAN_LIST_CHANGED, (data: any): void => {\n\n                    data.forEach((handle: any, index: number): void => {\n                        this.addFlightPlan(handle);\n                    });\n                    \n                    // Set loaded flag\n                    this.flightPlansLoaded = true;\n\n                    // Wire up on list changed callback\n                    //this.listenForFlightPlanChanges();\n\n                    // Resolve with flight plans array\n                    return resolve(this.flightPlans);\n                });\n\n            }\n        });\n    }\n\n    // Log the user out\n    logout(): void {\n        this.db.logout();\n    }\n\n    // Log the user in\n    login(): void {\n        this.db.login();\n    }\n\n    private addAccount(account: Account): void {\n        this.accounts.push(account);\n    }\n\n    // Wire up the on flight plan list changed lisenter\n    private listenForAccountChanges(): void {\n        \n        this.flightPlansHandle.on(this.flightPlansHandle.EVENTS.FLIGHTPLAN_LIST_CHANGED, (data: any): void => {\n            \n            this.handleListChanged(data);\n        });\n    }\n\n    // Wire up the on flight plan list changed lisenter\n    private listenForFlightPlanChanges(): void {\n        \n        this.flightPlansHandle.on(this.flightPlansHandle.EVENTS.FLIGHTPLAN_LIST_CHANGED, (data: any): void => {\n            \n            this.handleListChanged(data);\n        });\n    }\n\n    // Handles any firebase callbacks that the flight plan list has been updated by an add or delete\n    private handleListChanged(data: any): void {\n\n        // first check for delete by comparing length\n        if (data.length < this.flightPlans.length) {\n\n            let deleteList: Array<FlightPlan> = [];\n\n            this.flightPlans.forEach((flightPlan: FlightPlan): void => {\n                if (_.findIndex(data, (handle: any): boolean => {\n                        return flightPlan.handle.id === handle.id;\n                    }) === -1) {\n                    deleteList.push(flightPlan);\n                }\n            });\n\n            deleteList.forEach((flightPlan: FlightPlan): void => {\n                this.deleteFlightPlan(flightPlan);\n            });\n\n            return;\n        }\n\n        // figure out if it is an add or delete\n        data.forEach((handle: any, index: number): void => {\n            let position: number = _.findIndex(this.flightPlans, (flightPlan: FlightPlan): boolean => {\n                return flightPlan.handle.id === handle.id;\n            });\n\n            // add if it doesn't exist in command\n            if (position === -1) {\n                this.addFlightPlan(handle);\n                return;\n            }\n        });\n\n    }\n\n    // Add flight plan from database callback event\n    private addFlightPlan(data: any): void {\n\n        let flightPlan: FlightPlan;\n\n        flightPlan = new FlightPlan(data);\n\n        this.flightPlans.push(flightPlan);\n    }\n\n    // Delete flight plan from database callback event\n    private deleteFlightPlan(flightPlan: FlightPlan): void {\n\n        // Unwire events\n        flightPlan.RemoveHandle();\n\n        var index: number = _.findIndex(this.flightPlans, (com: any): boolean => {\n            return flightPlan.handle.id === com.id;\n        });\n\n        if (index === -1) {\n            throw 'Flight Plan not found for deletion.';\n        }\n\n        this.flightPlans.splice(index, 1);\n\n        // throw event to update UI.\n    }\n\n}\n\nexport default angular.module('DroneSense.Web.DataService', [\n\n]).service('dataService', DataService);\n"],"sourceRoot":"/source/"}